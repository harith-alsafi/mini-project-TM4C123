<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.8" xml:lang="en-US">
  <compounddef id="helpers_8h" kind="file" language="C++">
    <compoundname>helpers.h</compoundname>
    <includes local="no">stdlib.h</includes>
    <includedby refid="flash_8h" local="yes">src/flash.h</includedby>
    <includedby refid="helpers_8c" local="yes">src/helpers.c</includedby>
    <includedby refid="lcd_8c" local="yes">src/lcd.c</includedby>
    <includedby refid="lcd_8h" local="yes">src/lcd.h</includedby>
    <includedby refid="main_8c" local="yes">src/main.c</includedby>
    <includedby refid="parser_8h" local="yes">src/parser.h</includedby>
    <incdepgraph>
      <node id="1">
        <label>src/helpers.h</label>
        <link refid="helpers_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="2">
        <label>stdlib.h</label>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="3">
        <label>src/flash.c</label>
        <link refid="flash_8c"/>
      </node>
      <node id="2">
        <label>src/flash.h</label>
        <link refid="flash_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
      </node>
      <node id="7">
        <label>src/helpers.c</label>
        <link refid="helpers_8c"/>
      </node>
      <node id="1">
        <label>src/helpers.h</label>
        <link refid="helpers_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
      </node>
      <node id="8">
        <label>src/lcd.c</label>
        <link refid="lcd_8c"/>
      </node>
      <node id="9">
        <label>src/lcd.h</label>
        <link refid="lcd_8h"/>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
      </node>
      <node id="4">
        <label>src/logic.c</label>
        <link refid="logic_8c"/>
      </node>
      <node id="5">
        <label>src/main.c</label>
        <link refid="main_8c"/>
      </node>
      <node id="10">
        <label>src/parser.c</label>
        <link refid="parser_8c"/>
      </node>
      <node id="11">
        <label>src/parser.h</label>
        <link refid="parser_8h"/>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
      </node>
      <node id="6">
        <label>src/test.c</label>
        <link refid="test_8c"/>
      </node>
    </invincdepgraph>
    <sectiondef kind="define">
      <memberdef kind="define" id="helpers_8h_1a4fd85cebb3a7e1a87f883886a1e43791" prot="public" static="no">
        <name>HELPERS_H</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/helpers.h" line="2" column="9" bodyfile="src/helpers.h" bodystart="2" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="helpers_8h_1a5bb885982ff66a2e0a0a45a8ee9c35e2" prot="public" static="no">
        <name>HIGH</name>
        <initializer>0xFF</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/helpers.h" line="6" column="9" bodyfile="src/helpers.h" bodystart="6" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="helpers_8h_1ab811d8c6ff3a505312d3276590444289" prot="public" static="no">
        <name>LOW</name>
        <initializer>0x00</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/helpers.h" line="7" column="9" bodyfile="src/helpers.h" bodystart="7" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="helpers_8h_1a7732dd97bdb60ecae9aa857355cf9841" prot="public" static="no">
        <name>ARRAY_MAX_LENGTH</name>
        <initializer>100</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/helpers.h" line="8" column="9" bodyfile="src/helpers.h" bodystart="8" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="helpers_8h_1ab9b5864bb7f364790006596ce97eb4ea" prot="public" static="no">
        <name>DEFINE_LIST_PROTOTYPE</name>
        <param><defname>Type</defname></param>
        <initializer>    typedef struct { \
        int length; \
        int currentIndex; \
        Type values[<ref refid="helpers_8h_1a7732dd97bdb60ecae9aa857355cf9841" kindref="member">ARRAY_MAX_LENGTH</ref>]; \
    } Type##List; \
    \
    Type##List Type##ListCreate(); \
    \
    void Type##ListClear(Type##List* list); \
    \
    int Type##ListPushBack(Type##List* list, Type item); \
    \
    int Type##ListAddRange(Type##List* list, Type items[], int length); \
    \
    int Type##ListInsertAt(Type##List* list, int index, Type item); \
    \
    int Type##ListRemoveAt(Type##List* list, int index);</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/helpers.h" line="10" column="9" bodyfile="src/helpers.h" bodystart="10" bodyend="27"/>
      </memberdef>
      <memberdef kind="define" id="helpers_8h_1af81ac8e504dd921417ba754f655999f5" prot="public" static="no">
        <name>DEFINE_LIST_IMPLEMENTATION</name>
        <param><defname>Type</defname></param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/helpers.h" line="29" column="9" bodyfile="src/helpers.h" bodystart="29" bodyend="78"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="typedef">
      <memberdef kind="typedef" id="helpers_8h_1a0c8186d9b9b7880309c27230bbb5e69d" prot="public" static="no">
        <type>unsigned char</type>
        <definition>typedef unsigned char byte</definition>
        <argsstring></argsstring>
        <name>byte</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/helpers.h" line="80" column="23" bodyfile="src/helpers.h" bodystart="80" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="func">
      <memberdef kind="function" id="helpers_8h_1a20ff7803fa076e4c75b49d77ed58b681" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>DEFINE_LIST_PROTOTYPE</definition>
        <argsstring>(char)</argsstring>
        <name>DEFINE_LIST_PROTOTYPE</name>
        <param>
          <type>char</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/helpers.h" line="82" column="1" declfile="src/helpers.h" declline="82" declcolumn="1"/>
      </memberdef>
      <memberdef kind="function" id="helpers_8h_1aac8c6c00a0e52489ecf8e8a6d9eba228" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int Random</definition>
        <argsstring>()</argsstring>
        <name>Random</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para><computeroutput>int</computeroutput> <linebreak/>
 </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/helpers.h" line="89" column="5" bodyfile="src/helpers.c" bodystart="7" bodyend="10" declfile="src/helpers.h" declline="89" declcolumn="5"/>
        <references refid="helpers_8c_1a562588cbdd2bdd82a792400c9bc708a8" compoundref="helpers_8c" startline="5">randSeed</references>
        <referencedby refid="helpers_8c_1aa41b8512b10550a2e21feec991f752b4" compoundref="helpers_8c" startline="13" endline="15">RandomRange</referencedby>
      </memberdef>
      <memberdef kind="function" id="helpers_8h_1aa41b8512b10550a2e21feec991f752b4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int RandomRange</definition>
        <argsstring>(int min, int max)</argsstring>
        <name>RandomRange</name>
        <param>
          <type>int</type>
          <declname>min</declname>
        </param>
        <param>
          <type>int</type>
          <declname>max</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>min</parametername>
</parameternamelist>
<parameterdescription>
<para></para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>max</parametername>
</parameternamelist>
<parameterdescription>
<para></para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><computeroutput>int</computeroutput> <linebreak/>
 </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/helpers.h" line="98" column="5" bodyfile="src/helpers.c" bodystart="13" bodyend="15" declfile="src/helpers.h" declline="98" declcolumn="5"/>
        <references refid="helpers_8c_1aac8c6c00a0e52489ecf8e8a6d9eba228" compoundref="helpers_8c" startline="7" endline="10">Random</references>
        <referencedby refid="logic_8c_1a93047c21ec383e462990d923ed48795e" compoundref="logic_8c" startline="151" endline="196">RunLoginAnimation</referencedby>
      </memberdef>
    </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="preprocessor">#ifndef<sp/>HELPERS_H<sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>If<sp/>not<sp/>defined</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2" refid="helpers_8h_1a4fd85cebb3a7e1a87f883886a1e43791" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>HELPERS_H<sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Define<sp/>it</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;stdlib.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight></codeline>
<codeline lineno="6" refid="helpers_8h_1a5bb885982ff66a2e0a0a45a8ee9c35e2" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>HIGH<sp/>0xFF</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7" refid="helpers_8h_1ab811d8c6ff3a505312d3276590444289" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>LOW<sp/>0x00</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8" refid="helpers_8h_1a7732dd97bdb60ecae9aa857355cf9841" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>ARRAY_MAX_LENGTH<sp/>100</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight></codeline>
<codeline lineno="10" refid="helpers_8h_1ab9b5864bb7f364790006596ce97eb4ea" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>DEFINE_LIST_PROTOTYPE(Type)<sp/>\</highlight></codeline>
<codeline lineno="11"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>typedef<sp/>struct<sp/>{<sp/>\</highlight></codeline>
<codeline lineno="12"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>int<sp/>length;<sp/>\</highlight></codeline>
<codeline lineno="13"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>int<sp/>currentIndex;<sp/>\</highlight></codeline>
<codeline lineno="14"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Type<sp/>values[ARRAY_MAX_LENGTH];<sp/>\</highlight></codeline>
<codeline lineno="15"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>}<sp/>Type##List;<sp/>\</highlight></codeline>
<codeline lineno="16"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="17"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>Type##List<sp/>Type##ListCreate();<sp/>\</highlight></codeline>
<codeline lineno="18"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="19"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>void<sp/>Type##ListClear(Type##List*<sp/>list);<sp/>\</highlight></codeline>
<codeline lineno="20"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="21"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>int<sp/>Type##ListPushBack(Type##List*<sp/>list,<sp/>Type<sp/>item);<sp/>\</highlight></codeline>
<codeline lineno="22"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="23"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>int<sp/>Type##ListAddRange(Type##List*<sp/>list,<sp/>Type<sp/>items[],<sp/>int<sp/>length);<sp/>\</highlight></codeline>
<codeline lineno="24"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="25"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>int<sp/>Type##ListInsertAt(Type##List*<sp/>list,<sp/>int<sp/>index,<sp/>Type<sp/>item);<sp/>\</highlight></codeline>
<codeline lineno="26"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="27"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>int<sp/>Type##ListRemoveAt(Type##List*<sp/>list,<sp/>int<sp/>index);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight></codeline>
<codeline lineno="29" refid="helpers_8h_1af81ac8e504dd921417ba754f655999f5" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>DEFINE_LIST_IMPLEMENTATION(Type)<sp/>\</highlight></codeline>
<codeline lineno="30"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>Type##List<sp/>Type##ListCreate()<sp/>{<sp/>\</highlight></codeline>
<codeline lineno="31"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Type##List<sp/>list;<sp/>\</highlight></codeline>
<codeline lineno="32"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>list.length<sp/>=<sp/>0;<sp/>\</highlight></codeline>
<codeline lineno="33"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>list.currentIndex<sp/>=<sp/>0;<sp/>\</highlight></codeline>
<codeline lineno="34"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>return<sp/>list;<sp/>\</highlight></codeline>
<codeline lineno="35"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>}<sp/>\</highlight></codeline>
<codeline lineno="36"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="37"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>void<sp/>Type##ListClear(Type##List*<sp/>list)<sp/>{<sp/>\</highlight></codeline>
<codeline lineno="38"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>list-&gt;length<sp/>=<sp/>0;<sp/>\</highlight></codeline>
<codeline lineno="39"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>list-&gt;currentIndex<sp/>=<sp/>0;<sp/>\</highlight></codeline>
<codeline lineno="40"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>}<sp/>\</highlight></codeline>
<codeline lineno="41"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="42"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>int<sp/>Type##ListPushBack(Type##List*<sp/>list,<sp/>Type<sp/>item)<sp/>{<sp/>\</highlight></codeline>
<codeline lineno="43"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>list-&gt;length++;<sp/>\</highlight></codeline>
<codeline lineno="44"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>list-&gt;values[list-&gt;length<sp/>-<sp/>1]<sp/>=<sp/>item;<sp/>\</highlight></codeline>
<codeline lineno="45"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>return<sp/>1;<sp/>\</highlight></codeline>
<codeline lineno="46"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>}\</highlight></codeline>
<codeline lineno="47"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="48"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>int<sp/>Type##ListAddRange(Type##List*<sp/>list,<sp/>Type<sp/>items[],<sp/>int<sp/>length)<sp/>{<sp/>\</highlight></codeline>
<codeline lineno="49"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>for(int<sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>length;<sp/>i++){<sp/>\</highlight></codeline>
<codeline lineno="50"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>if(!Type##ListPushBack(list,<sp/>items[i])){\</highlight></codeline>
<codeline lineno="51"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>return<sp/>0;\</highlight></codeline>
<codeline lineno="52"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}\</highlight></codeline>
<codeline lineno="53"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}\</highlight></codeline>
<codeline lineno="54"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>return<sp/>1;<sp/>\</highlight></codeline>
<codeline lineno="55"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>}<sp/>\</highlight></codeline>
<codeline lineno="56"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="57"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>int<sp/>Type##ListInsertAt(Type##List*<sp/>list,<sp/>int<sp/>index,<sp/>Type<sp/>item)<sp/>{<sp/>\</highlight></codeline>
<codeline lineno="58"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>if<sp/>(index<sp/>&lt;<sp/>0<sp/>||<sp/>index<sp/>&gt;<sp/>list-&gt;length)<sp/>{<sp/>\</highlight></codeline>
<codeline lineno="59"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>return<sp/>0;<sp/>\</highlight></codeline>
<codeline lineno="60"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/>\</highlight></codeline>
<codeline lineno="61"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>list-&gt;length++;<sp/>\</highlight></codeline>
<codeline lineno="62"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>for<sp/>(int<sp/>i<sp/>=<sp/>list-&gt;length<sp/>-<sp/>1;<sp/>i<sp/>&gt;<sp/>index;<sp/>i--)<sp/>{<sp/>\</highlight></codeline>
<codeline lineno="63"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>list-&gt;values[i]<sp/>=<sp/>list-&gt;values[i<sp/>-<sp/>1];<sp/>\</highlight></codeline>
<codeline lineno="64"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/>\</highlight></codeline>
<codeline lineno="65"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>list-&gt;values[index]<sp/>=<sp/>item;<sp/>\</highlight></codeline>
<codeline lineno="66"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>return<sp/>1;<sp/>\</highlight></codeline>
<codeline lineno="67"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>}<sp/>\</highlight></codeline>
<codeline lineno="68"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="69"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>int<sp/>Type##ListRemoveAt(Type##List*<sp/>list,<sp/>int<sp/>index)<sp/>{<sp/>\</highlight></codeline>
<codeline lineno="70"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>if<sp/>(index<sp/>&lt;<sp/>0<sp/>||<sp/>index<sp/>&gt;=<sp/>list-&gt;length)<sp/>{<sp/>\</highlight></codeline>
<codeline lineno="71"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>return<sp/>0;<sp/>\</highlight></codeline>
<codeline lineno="72"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/>\</highlight></codeline>
<codeline lineno="73"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>for<sp/>(int<sp/>i<sp/>=<sp/>index;<sp/>i<sp/>&lt;<sp/>list-&gt;length<sp/>-<sp/>1;<sp/>i++)<sp/>{<sp/>\</highlight></codeline>
<codeline lineno="74"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>list-&gt;values[i]<sp/>=<sp/>list-&gt;values[i<sp/>+<sp/>1];<sp/>\</highlight></codeline>
<codeline lineno="75"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/>\</highlight></codeline>
<codeline lineno="76"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>list-&gt;length--;<sp/>\</highlight></codeline>
<codeline lineno="77"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>return<sp/>1;<sp/>\</highlight></codeline>
<codeline lineno="78"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>}<sp/><sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="79"><highlight class="normal"></highlight></codeline>
<codeline lineno="80" refid="helpers_8h_1a0c8186d9b9b7880309c27230bbb5e69d" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/><ref refid="helpers_8h_1a0c8186d9b9b7880309c27230bbb5e69d" kindref="member">byte</ref>;</highlight></codeline>
<codeline lineno="81"><highlight class="normal"></highlight></codeline>
<codeline lineno="82" refid="helpers_8h_1a20ff7803fa076e4c75b49d77ed58b681" refkind="member"><highlight class="normal"><ref refid="helpers_8h_1ab9b5864bb7f364790006596ce97eb4ea" kindref="member">DEFINE_LIST_PROTOTYPE</ref>(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="83"><highlight class="normal"></highlight></codeline>
<codeline lineno="89"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="helpers_8h_1aac8c6c00a0e52489ecf8e8a6d9eba228" kindref="member">Random</ref>();</highlight></codeline>
<codeline lineno="90"><highlight class="normal"></highlight></codeline>
<codeline lineno="98"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="helpers_8h_1aa41b8512b10550a2e21feec991f752b4" kindref="member">RandomRange</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>min,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>max);</highlight></codeline>
<codeline lineno="99"><highlight class="normal"></highlight></codeline>
<codeline lineno="100"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
    </programlisting>
    <location file="src/helpers.h"/>
  </compounddef>
</doxygen>
