<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.8" xml:lang="en-US">
  <compounddef id="lcd_8c" kind="file" language="C++">
    <compoundname>lcd.c</compoundname>
    <includes refid="lcd_8h" local="yes">lcd.h</includes>
    <includes refid="clock_8h" local="yes">clock.h</includes>
    <includes refid="helpers_8h" local="yes">helpers.h</includes>
    <includes refid="ports_8h" local="yes">ports.h</includes>
    <includes local="no">stdbool.h</includes>
    <includes local="no">string.h</includes>
    <incdepgraph>
      <node id="6">
        <label>clock.h</label>
        <link refid="clock_8h"/>
      </node>
      <node id="3">
        <label>helpers.h</label>
        <link refid="helpers_8h"/>
        <childnode refid="4" relation="include">
        </childnode>
      </node>
      <node id="1">
        <label>src/lcd.c</label>
        <link refid="lcd_8c"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
      </node>
      <node id="2">
        <label>lcd.h</label>
        <link refid="lcd_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
      </node>
      <node id="7">
        <label>ports.h</label>
        <link refid="ports_8h"/>
      </node>
      <node id="5">
        <label>stdbool.h</label>
      </node>
      <node id="4">
        <label>stdlib.h</label>
      </node>
      <node id="8">
        <label>string.h</label>
      </node>
    </incdepgraph>
    <sectiondef kind="var">
      <memberdef kind="variable" id="lcd_8c_1a789bfe83cfe007cc723e4fd58bb6b112" prot="public" static="no" mutable="no">
        <type>int</type>
        <definition>int currentRow</definition>
        <argsstring></argsstring>
        <name>currentRow</name>
        <initializer>= 0</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/lcd.c" line="24" column="5" bodyfile="src/lcd.c" bodystart="24" bodyend="-1"/>
        <referencedby refid="lcd_8c_1abcfdb05f65f66ac2f004c865d8d34933" compoundref="lcd_8c" startline="44" endline="53">LcdClearDisplay</referencedby>
        <referencedby refid="lcd_8c_1a08b51cf41e7c0183ca5b469dd853a666" compoundref="lcd_8c" startline="267" endline="272">LcdClearLastChar</referencedby>
        <referencedby refid="lcd_8c_1a60854aad97ec6bbdb5a001eea7c6b3b8" compoundref="lcd_8c" startline="211" endline="220">LcdIncrementCursorRow</referencedby>
        <referencedby refid="lcd_8c_1a85868d62c8073baad86aa03e88ac1001" compoundref="lcd_8c" startline="245" endline="249">LcdPrintCharAt</referencedby>
        <referencedby refid="lcd_8c_1ab336d65567699c41886446b710e9d859" compoundref="lcd_8c" startline="192" endline="209">LcdSetCursor</referencedby>
      </memberdef>
      <memberdef kind="variable" id="lcd_8c_1a5c92777341dd0851fe17e1bd05b885dd" prot="public" static="no" mutable="no">
        <type>int</type>
        <definition>int currentCol</definition>
        <argsstring></argsstring>
        <name>currentCol</name>
        <initializer>= 0</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/lcd.c" line="25" column="5" bodyfile="src/lcd.c" bodystart="25" bodyend="-1"/>
        <referencedby refid="lcd_8c_1abcfdb05f65f66ac2f004c865d8d34933" compoundref="lcd_8c" startline="44" endline="53">LcdClearDisplay</referencedby>
        <referencedby refid="lcd_8c_1a08b51cf41e7c0183ca5b469dd853a666" compoundref="lcd_8c" startline="267" endline="272">LcdClearLastChar</referencedby>
        <referencedby refid="lcd_8c_1a16d925f7b9140ef9283fcae38a45b7f4" compoundref="lcd_8c" startline="222" endline="228">LcdIncrementCursorCol</referencedby>
        <referencedby refid="lcd_8c_1a60854aad97ec6bbdb5a001eea7c6b3b8" compoundref="lcd_8c" startline="211" endline="220">LcdIncrementCursorRow</referencedby>
        <referencedby refid="lcd_8c_1a85868d62c8073baad86aa03e88ac1001" compoundref="lcd_8c" startline="245" endline="249">LcdPrintCharAt</referencedby>
        <referencedby refid="lcd_8c_1ab336d65567699c41886446b710e9d859" compoundref="lcd_8c" startline="192" endline="209">LcdSetCursor</referencedby>
      </memberdef>
    </sectiondef>
    <sectiondef kind="func">
      <memberdef kind="function" id="lcd_8c_1a60854aad97ec6bbdb5a001eea7c6b3b8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void LcdIncrementCursorRow</definition>
        <argsstring>()</argsstring>
        <name>LcdIncrementCursorRow</name>
        <briefdescription>
<para>Increments the cursor row. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/lcd.c" line="211" column="6" bodyfile="src/lcd.c" bodystart="211" bodyend="220" declfile="src/lcd.c" declline="14" declcolumn="6"/>
        <references refid="lcd_8c_1a5c92777341dd0851fe17e1bd05b885dd" compoundref="lcd_8c" startline="25">currentCol</references>
        <references refid="lcd_8c_1a789bfe83cfe007cc723e4fd58bb6b112" compoundref="lcd_8c" startline="24">currentRow</references>
        <references refid="lcd_8h_1aece2016b9a1e98b3b6543062a452c847" compoundref="lcd_8h" startline="18">LCD_N_ROW</references>
        <references refid="lcd_8c_1ab336d65567699c41886446b710e9d859" compoundref="lcd_8c" startline="192" endline="209">LcdSetCursor</references>
        <referencedby refid="lcd_8c_1a16d925f7b9140ef9283fcae38a45b7f4" compoundref="lcd_8c" startline="222" endline="228">LcdIncrementCursorCol</referencedby>
        <referencedby refid="lcd_8c_1a37450f91c7ae032252ea94d7c92efde2" compoundref="lcd_8c" startline="230" endline="243">LcdPrintChar</referencedby>
      </memberdef>
      <memberdef kind="function" id="lcd_8c_1a16d925f7b9140ef9283fcae38a45b7f4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void LcdIncrementCursorCol</definition>
        <argsstring>()</argsstring>
        <name>LcdIncrementCursorCol</name>
        <briefdescription>
<para>Increments the cursor column. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/lcd.c" line="222" column="6" bodyfile="src/lcd.c" bodystart="222" bodyend="228" declfile="src/lcd.c" declline="20" declcolumn="6"/>
        <references refid="lcd_8c_1a5c92777341dd0851fe17e1bd05b885dd" compoundref="lcd_8c" startline="25">currentCol</references>
        <references refid="lcd_8h_1a09aa49f7f7c7173b0ad1fbdefb0e2280" compoundref="lcd_8h" startline="17">LCD_N_COL</references>
        <references refid="lcd_8c_1a60854aad97ec6bbdb5a001eea7c6b3b8" compoundref="lcd_8c" startline="211" endline="220">LcdIncrementCursorRow</references>
        <referencedby refid="lcd_8c_1a37450f91c7ae032252ea94d7c92efde2" compoundref="lcd_8c" startline="230" endline="243">LcdPrintChar</referencedby>
      </memberdef>
      <memberdef kind="function" id="lcd_8c_1a20f0fe593368605d1bd6a28ad1a0a43f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void LcdSetRs</definition>
        <argsstring>(byte rs)</argsstring>
        <name>LcdSetRs</name>
        <param>
          <type><ref refid="helpers_8h_1a0c8186d9b9b7880309c27230bbb5e69d" kindref="member">byte</ref></type>
          <declname>rs</declname>
        </param>
        <briefdescription>
<para>Sets the rs flag to the given value. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>rs</parametername>
</parameternamelist>
<parameterdescription>
<para>rs == 1 -&gt; data RS = HIGH, rs == 0 -&gt; command RS = LOW </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/lcd.c" line="27" column="6" bodyfile="src/lcd.c" bodystart="27" bodyend="29"/>
        <references refid="lcd_8h_1a4781e073871c6f27f89b9463ad3a4ed1" compoundref="lcd_8h" startline="15">LCD_RS</references>
        <referencedby refid="lcd_8c_1abcfdb05f65f66ac2f004c865d8d34933" compoundref="lcd_8c" startline="44" endline="53">LcdClearDisplay</referencedby>
        <referencedby refid="lcd_8c_1a27164e4aa24d46318deab3dd42658978" compoundref="lcd_8c" startline="56" endline="71">LcdCursorShift</referencedby>
        <referencedby refid="lcd_8c_1aca04f0c025afbc86a0fedc553f3a8ba4" compoundref="lcd_8c" startline="88" endline="103">LcdDisplayControl</referencedby>
        <referencedby refid="lcd_8c_1adbaeb94dbb0cd5ee4efa5a4a6a06f0c2" compoundref="lcd_8c" startline="73" endline="86">LcdEntryModeSet</referencedby>
        <referencedby refid="lcd_8c_1a9b451fe57dbdfef32faf1d96b9d7dce4" compoundref="lcd_8c" startline="111" endline="127">LcdFunctionSet</referencedby>
        <referencedby refid="lcd_8c_1a61b541c799955fc6b4e6cf28628de9a1" compoundref="lcd_8c" startline="129" endline="182">LcdInit</referencedby>
        <referencedby refid="lcd_8c_1a37450f91c7ae032252ea94d7c92efde2" compoundref="lcd_8c" startline="230" endline="243">LcdPrintChar</referencedby>
        <referencedby refid="lcd_8c_1aad68360b11370fa86fcd068004ef903f" compoundref="lcd_8c" startline="105" endline="109">LcdReturnHome</referencedby>
        <referencedby refid="lcd_8c_1a588b278d12ac539ff4f7787f03176dcb" compoundref="lcd_8c" startline="184" endline="190">LcdSetDdram</referencedby>
      </memberdef>
      <memberdef kind="function" id="lcd_8c_1a93ae42864f782da4a4e0515d7faa449f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void LcdSendNibble</definition>
        <argsstring>(byte nibble)</argsstring>
        <name>LcdSendNibble</name>
        <param>
          <type><ref refid="helpers_8h_1a0c8186d9b9b7880309c27230bbb5e69d" kindref="member">byte</ref></type>
          <declname>nibble</declname>
        </param>
        <briefdescription>
<para>Sends a nibble to the LCD. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>nibble</parametername>
</parameternamelist>
<parameterdescription>
<para>RS | R/W | DB4 | DB5 | DB6 | DB7 </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/lcd.c" line="31" column="6" bodyfile="src/lcd.c" bodystart="31" bodyend="37"/>
        <references refid="clock_8c_1a2b0d30a37314c42f7d52aeec96a6e3ac" compoundref="clock_8c" startline="47" endline="50">DelayNano</references>
        <references refid="helpers_8h_1a5bb885982ff66a2e0a0a45a8ee9c35e2" compoundref="helpers_8h" startline="6">HIGH</references>
        <references refid="lcd_8h_1a0526693165bd140bdaaa0f27b240db1c" compoundref="lcd_8h" startline="11">LCD_DB</references>
        <references refid="lcd_8h_1a1640ffbc0d8ec0f7edb04a2b93918072" compoundref="lcd_8h" startline="13">LCD_EN</references>
        <references refid="helpers_8h_1ab811d8c6ff3a505312d3276590444289" compoundref="helpers_8h" startline="7">LOW</references>
        <referencedby refid="lcd_8c_1a61b541c799955fc6b4e6cf28628de9a1" compoundref="lcd_8c" startline="129" endline="182">LcdInit</referencedby>
        <referencedby refid="lcd_8c_1a40d081728cfd391fce0ec51b3c055169" compoundref="lcd_8c" startline="39" endline="42">LcdSendByte</referencedby>
      </memberdef>
      <memberdef kind="function" id="lcd_8c_1a40d081728cfd391fce0ec51b3c055169" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void LcdSendByte</definition>
        <argsstring>(byte byte)</argsstring>
        <name>LcdSendByte</name>
        <param>
          <type><ref refid="helpers_8h_1a0c8186d9b9b7880309c27230bbb5e69d" kindref="member">byte</ref></type>
          <declname>byte</declname>
        </param>
        <briefdescription>
<para>Sends a byte to the LCD. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>byte</parametername>
</parameternamelist>
<parameterdescription>
<para>the byte to be sent </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/lcd.c" line="39" column="6" bodyfile="src/lcd.c" bodystart="39" bodyend="42"/>
        <references refid="lcd_8c_1a93ae42864f782da4a4e0515d7faa449f" compoundref="lcd_8c" startline="31" endline="37">LcdSendNibble</references>
        <referencedby refid="lcd_8c_1abcfdb05f65f66ac2f004c865d8d34933" compoundref="lcd_8c" startline="44" endline="53">LcdClearDisplay</referencedby>
        <referencedby refid="lcd_8c_1a27164e4aa24d46318deab3dd42658978" compoundref="lcd_8c" startline="56" endline="71">LcdCursorShift</referencedby>
        <referencedby refid="lcd_8c_1aca04f0c025afbc86a0fedc553f3a8ba4" compoundref="lcd_8c" startline="88" endline="103">LcdDisplayControl</referencedby>
        <referencedby refid="lcd_8c_1adbaeb94dbb0cd5ee4efa5a4a6a06f0c2" compoundref="lcd_8c" startline="73" endline="86">LcdEntryModeSet</referencedby>
        <referencedby refid="lcd_8c_1a9b451fe57dbdfef32faf1d96b9d7dce4" compoundref="lcd_8c" startline="111" endline="127">LcdFunctionSet</referencedby>
        <referencedby refid="lcd_8c_1a37450f91c7ae032252ea94d7c92efde2" compoundref="lcd_8c" startline="230" endline="243">LcdPrintChar</referencedby>
        <referencedby refid="lcd_8c_1aad68360b11370fa86fcd068004ef903f" compoundref="lcd_8c" startline="105" endline="109">LcdReturnHome</referencedby>
        <referencedby refid="lcd_8c_1a588b278d12ac539ff4f7787f03176dcb" compoundref="lcd_8c" startline="184" endline="190">LcdSetDdram</referencedby>
      </memberdef>
      <memberdef kind="function" id="lcd_8c_1abcfdb05f65f66ac2f004c865d8d34933" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void LcdClearDisplay</definition>
        <argsstring>()</argsstring>
        <name>LcdClearDisplay</name>
        <briefdescription>
<para>Clears the display. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/lcd.c" line="44" column="6" bodyfile="src/lcd.c" bodystart="44" bodyend="53"/>
        <references refid="lcd_8c_1a5c92777341dd0851fe17e1bd05b885dd" compoundref="lcd_8c" startline="25">currentCol</references>
        <references refid="lcd_8c_1a789bfe83cfe007cc723e4fd58bb6b112" compoundref="lcd_8c" startline="24">currentRow</references>
        <references refid="clock_8c_1a2e760c634cc89519ad0956fc258eab46" compoundref="clock_8c" startline="59" endline="64">DelayMilli</references>
        <references refid="lcd_8c_1a40d081728cfd391fce0ec51b3c055169" compoundref="lcd_8c" startline="39" endline="42">LcdSendByte</references>
        <references refid="lcd_8c_1a20f0fe593368605d1bd6a28ad1a0a43f" compoundref="lcd_8c" startline="27" endline="29">LcdSetRs</references>
        <references refid="helpers_8h_1ab811d8c6ff3a505312d3276590444289" compoundref="helpers_8h" startline="7">LOW</references>
        <referencedby refid="test_8c_1a600f033d6f6a144fbd69976eab19e3ee" compoundref="test_8c" startline="9" endline="12">AfterEach</referencedby>
        <referencedby refid="lcd_8c_1a61b541c799955fc6b4e6cf28628de9a1" compoundref="lcd_8c" startline="129" endline="182">LcdInit</referencedby>
        <referencedby refid="logic_8c_1ae7c44d3fc64010d1e217bea610c8536c" compoundref="logic_8c" startline="288" endline="292">RefreshDisplay</referencedby>
        <referencedby refid="logic_8c_1aee8c17e4c2f0d1376f21780a1199b97c" compoundref="logic_8c" startline="226" endline="247">RunChangePassword</referencedby>
        <referencedby refid="logic_8c_1a15058a20857a8a4d38fa4ab72109a9e2" compoundref="logic_8c" startline="198" endline="224">RunLogin</referencedby>
        <referencedby refid="logic_8c_1a93047c21ec383e462990d923ed48795e" compoundref="logic_8c" startline="151" endline="196">RunLoginAnimation</referencedby>
        <referencedby refid="logic_8c_1a41a8f29e3704245cd53e2e11e03ec5f7" compoundref="logic_8c" startline="374" endline="441">RunMain</referencedby>
        <referencedby refid="test_8c_1a8ff2f0e3039fa4096f5c57d610c9281d" compoundref="test_8c" startline="59" endline="67">TestKeypadLcd</referencedby>
        <referencedby refid="test_8c_1ac8b99cb76697b9b78d1b364cf118342a" compoundref="test_8c" startline="14" endline="19">TestLcdClear</referencedby>
        <referencedby refid="test_8c_1a6af1303d2e04cb5837731ad113c413bc" compoundref="test_8c" startline="32" endline="48">TestLcdMultiLine</referencedby>
      </memberdef>
      <memberdef kind="function" id="lcd_8c_1a27164e4aa24d46318deab3dd42658978" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void LcdCursorShift</definition>
        <argsstring>(byte sc, byte rl)</argsstring>
        <name>LcdCursorShift</name>
        <param>
          <type><ref refid="helpers_8h_1a0c8186d9b9b7880309c27230bbb5e69d" kindref="member">byte</ref></type>
          <declname>sc</declname>
        </param>
        <param>
          <type><ref refid="helpers_8h_1a0c8186d9b9b7880309c27230bbb5e69d" kindref="member">byte</ref></type>
          <declname>rl</declname>
        </param>
        <briefdescription>
<para>Sets the LCD cursor position. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>sc</parametername>
</parameternamelist>
<parameterdescription>
<para>Display shift sc = 1, Cursor move sc = 0 </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>rl</parametername>
</parameternamelist>
<parameterdescription>
<para>Right shift rl = 1, Left shift rl = 0 </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/lcd.c" line="56" column="6" bodyfile="src/lcd.c" bodystart="56" bodyend="71"/>
        <references refid="clock_8c_1a44cfb49005f69fe95c0ce5f30b9a660e" compoundref="clock_8c" startline="52" endline="57">DelayMicro</references>
        <references refid="helpers_8h_1a5bb885982ff66a2e0a0a45a8ee9c35e2" compoundref="helpers_8h" startline="6">HIGH</references>
        <references refid="lcd_8c_1a40d081728cfd391fce0ec51b3c055169" compoundref="lcd_8c" startline="39" endline="42">LcdSendByte</references>
        <references refid="lcd_8c_1a20f0fe593368605d1bd6a28ad1a0a43f" compoundref="lcd_8c" startline="27" endline="29">LcdSetRs</references>
      </memberdef>
      <memberdef kind="function" id="lcd_8c_1adbaeb94dbb0cd5ee4efa5a4a6a06f0c2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void LcdEntryModeSet</definition>
        <argsstring>(byte id, byte s)</argsstring>
        <name>LcdEntryModeSet</name>
        <param>
          <type><ref refid="helpers_8h_1a0c8186d9b9b7880309c27230bbb5e69d" kindref="member">byte</ref></type>
          <declname>id</declname>
        </param>
        <param>
          <type><ref refid="helpers_8h_1a0c8186d9b9b7880309c27230bbb5e69d" kindref="member">byte</ref></type>
          <declname>s</declname>
        </param>
        <briefdescription>
<para>Sets the entry mode of the LCD. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>id</parametername>
</parameternamelist>
<parameterdescription>
<para>I / D = 1: Increment, I / D = 0: Decrement. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>s</parametername>
</parameternamelist>
<parameterdescription>
<para>S = 1: The display shift, S = 0: The display does not shift. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/lcd.c" line="73" column="6" bodyfile="src/lcd.c" bodystart="73" bodyend="86"/>
        <references refid="clock_8c_1a44cfb49005f69fe95c0ce5f30b9a660e" compoundref="clock_8c" startline="52" endline="57">DelayMicro</references>
        <references refid="lcd_8c_1a40d081728cfd391fce0ec51b3c055169" compoundref="lcd_8c" startline="39" endline="42">LcdSendByte</references>
        <references refid="lcd_8c_1a20f0fe593368605d1bd6a28ad1a0a43f" compoundref="lcd_8c" startline="27" endline="29">LcdSetRs</references>
        <references refid="helpers_8h_1ab811d8c6ff3a505312d3276590444289" compoundref="helpers_8h" startline="7">LOW</references>
        <referencedby refid="lcd_8c_1a61b541c799955fc6b4e6cf28628de9a1" compoundref="lcd_8c" startline="129" endline="182">LcdInit</referencedby>
      </memberdef>
      <memberdef kind="function" id="lcd_8c_1aca04f0c025afbc86a0fedc553f3a8ba4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void LcdDisplayControl</definition>
        <argsstring>(byte d, byte c, byte b)</argsstring>
        <name>LcdDisplayControl</name>
        <param>
          <type><ref refid="helpers_8h_1a0c8186d9b9b7880309c27230bbb5e69d" kindref="member">byte</ref></type>
          <declname>d</declname>
        </param>
        <param>
          <type><ref refid="helpers_8h_1a0c8186d9b9b7880309c27230bbb5e69d" kindref="member">byte</ref></type>
          <declname>c</declname>
        </param>
        <param>
          <type><ref refid="helpers_8h_1a0c8186d9b9b7880309c27230bbb5e69d" kindref="member">byte</ref></type>
          <declname>b</declname>
        </param>
        <briefdescription>
<para>Controls the display, cursor, and blinking. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>d</parametername>
</parameternamelist>
<parameterdescription>
<para>D = 1: Display on, D = 0: Display off </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>c</parametername>
</parameternamelist>
<parameterdescription>
<para>C = 1: Cursor on, C = 0: Cursor off </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>b</parametername>
</parameternamelist>
<parameterdescription>
<para>B = 1: Blinks on, B= 0: Blinks off </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/lcd.c" line="88" column="6" bodyfile="src/lcd.c" bodystart="88" bodyend="103"/>
        <references refid="clock_8c_1a44cfb49005f69fe95c0ce5f30b9a660e" compoundref="clock_8c" startline="52" endline="57">DelayMicro</references>
        <references refid="lcd_8c_1a40d081728cfd391fce0ec51b3c055169" compoundref="lcd_8c" startline="39" endline="42">LcdSendByte</references>
        <references refid="lcd_8c_1a20f0fe593368605d1bd6a28ad1a0a43f" compoundref="lcd_8c" startline="27" endline="29">LcdSetRs</references>
        <references refid="helpers_8h_1ab811d8c6ff3a505312d3276590444289" compoundref="helpers_8h" startline="7">LOW</references>
        <referencedby refid="lcd_8c_1a61b541c799955fc6b4e6cf28628de9a1" compoundref="lcd_8c" startline="129" endline="182">LcdInit</referencedby>
      </memberdef>
      <memberdef kind="function" id="lcd_8c_1aad68360b11370fa86fcd068004ef903f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void LcdReturnHome</definition>
        <argsstring>()</argsstring>
        <name>LcdReturnHome</name>
        <briefdescription>
<para>Resets cursor to original position. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/lcd.c" line="105" column="6" bodyfile="src/lcd.c" bodystart="105" bodyend="109"/>
        <references refid="clock_8c_1a44cfb49005f69fe95c0ce5f30b9a660e" compoundref="clock_8c" startline="52" endline="57">DelayMicro</references>
        <references refid="lcd_8c_1a40d081728cfd391fce0ec51b3c055169" compoundref="lcd_8c" startline="39" endline="42">LcdSendByte</references>
        <references refid="lcd_8c_1a20f0fe593368605d1bd6a28ad1a0a43f" compoundref="lcd_8c" startline="27" endline="29">LcdSetRs</references>
        <references refid="helpers_8h_1ab811d8c6ff3a505312d3276590444289" compoundref="helpers_8h" startline="7">LOW</references>
      </memberdef>
      <memberdef kind="function" id="lcd_8c_1a9b451fe57dbdfef32faf1d96b9d7dce4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void LcdFunctionSet</definition>
        <argsstring>(byte dl, byte n, byte f)</argsstring>
        <name>LcdFunctionSet</name>
        <param>
          <type><ref refid="helpers_8h_1a0c8186d9b9b7880309c27230bbb5e69d" kindref="member">byte</ref></type>
          <declname>dl</declname>
        </param>
        <param>
          <type><ref refid="helpers_8h_1a0c8186d9b9b7880309c27230bbb5e69d" kindref="member">byte</ref></type>
          <declname>n</declname>
        </param>
        <param>
          <type><ref refid="helpers_8h_1a0c8186d9b9b7880309c27230bbb5e69d" kindref="member">byte</ref></type>
          <declname>f</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>dl</parametername>
</parameternamelist>
<parameterdescription>
<para>DL = 1: 8-bit length (DB7 - 0). DL = 0: 4-bit length (DB7 - 4). </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>n</parametername>
</parameternamelist>
<parameterdescription>
<para>N = 0: One-line display. N = 1: Two-line display </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>f</parametername>
</parameternamelist>
<parameterdescription>
<para>F = 0: 5 x 8 dots character font. F = 1: 5 x 10 dots character font. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/lcd.c" line="111" column="6" bodyfile="src/lcd.c" bodystart="111" bodyend="127"/>
        <references refid="clock_8c_1a44cfb49005f69fe95c0ce5f30b9a660e" compoundref="clock_8c" startline="52" endline="57">DelayMicro</references>
        <references refid="lcd_8c_1a40d081728cfd391fce0ec51b3c055169" compoundref="lcd_8c" startline="39" endline="42">LcdSendByte</references>
        <references refid="lcd_8c_1a20f0fe593368605d1bd6a28ad1a0a43f" compoundref="lcd_8c" startline="27" endline="29">LcdSetRs</references>
        <references refid="helpers_8h_1ab811d8c6ff3a505312d3276590444289" compoundref="helpers_8h" startline="7">LOW</references>
        <referencedby refid="lcd_8c_1a61b541c799955fc6b4e6cf28628de9a1" compoundref="lcd_8c" startline="129" endline="182">LcdInit</referencedby>
      </memberdef>
      <memberdef kind="function" id="lcd_8c_1a61b541c799955fc6b4e6cf28628de9a1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void LcdInit</definition>
        <argsstring>()</argsstring>
        <name>LcdInit</name>
        <briefdescription>
<para>Initializes the LCD. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/lcd.c" line="129" column="6" bodyfile="src/lcd.c" bodystart="129" bodyend="182"/>
        <references refid="clock_8c_1a44cfb49005f69fe95c0ce5f30b9a660e" compoundref="clock_8c" startline="52" endline="57">DelayMicro</references>
        <references refid="clock_8c_1a2e760c634cc89519ad0956fc258eab46" compoundref="clock_8c" startline="59" endline="64">DelayMilli</references>
        <references refid="lcd_8c_1abcfdb05f65f66ac2f004c865d8d34933" compoundref="lcd_8c" startline="44" endline="53">LcdClearDisplay</references>
        <references refid="lcd_8c_1aca04f0c025afbc86a0fedc553f3a8ba4" compoundref="lcd_8c" startline="88" endline="103">LcdDisplayControl</references>
        <references refid="lcd_8c_1adbaeb94dbb0cd5ee4efa5a4a6a06f0c2" compoundref="lcd_8c" startline="73" endline="86">LcdEntryModeSet</references>
        <references refid="lcd_8c_1a9b451fe57dbdfef32faf1d96b9d7dce4" compoundref="lcd_8c" startline="111" endline="127">LcdFunctionSet</references>
        <references refid="lcd_8c_1a93ae42864f782da4a4e0515d7faa449f" compoundref="lcd_8c" startline="31" endline="37">LcdSendNibble</references>
        <references refid="lcd_8c_1a20f0fe593368605d1bd6a28ad1a0a43f" compoundref="lcd_8c" startline="27" endline="29">LcdSetRs</references>
        <references refid="helpers_8h_1ab811d8c6ff3a505312d3276590444289" compoundref="helpers_8h" startline="7">LOW</references>
        <references refid="ports_8c_1a03c4992f00f155be0425086ad67578f2" compoundref="ports_8c" startline="47" endline="58">PortAInit</references>
        <references refid="ports_8c_1aaebad24f567e2e1f53e6252fd325371a" compoundref="ports_8c" startline="32" endline="45">PortBInit</references>
        <referencedby refid="logic_8c_1a8468ead6b76c5ff5eb578a79fd591aa8" compoundref="logic_8c" startline="74" endline="90">InitAll</referencedby>
      </memberdef>
      <memberdef kind="function" id="lcd_8c_1a588b278d12ac539ff4f7787f03176dcb" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void LcdSetDdram</definition>
        <argsstring>(byte addr)</argsstring>
        <name>LcdSetDdram</name>
        <param>
          <type><ref refid="helpers_8h_1a0c8186d9b9b7880309c27230bbb5e69d" kindref="member">byte</ref></type>
          <declname>addr</declname>
        </param>
        <briefdescription>
<para>Sets the DDRAM address (cursor position) </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>addr</parametername>
</parameternamelist>
<parameterdescription>
<para>7-bit address to be set </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/lcd.c" line="184" column="6" bodyfile="src/lcd.c" bodystart="184" bodyend="190"/>
        <references refid="clock_8c_1a44cfb49005f69fe95c0ce5f30b9a660e" compoundref="clock_8c" startline="52" endline="57">DelayMicro</references>
        <references refid="lcd_8c_1a40d081728cfd391fce0ec51b3c055169" compoundref="lcd_8c" startline="39" endline="42">LcdSendByte</references>
        <references refid="lcd_8c_1a20f0fe593368605d1bd6a28ad1a0a43f" compoundref="lcd_8c" startline="27" endline="29">LcdSetRs</references>
        <references refid="helpers_8h_1ab811d8c6ff3a505312d3276590444289" compoundref="helpers_8h" startline="7">LOW</references>
        <referencedby refid="lcd_8c_1ab336d65567699c41886446b710e9d859" compoundref="lcd_8c" startline="192" endline="209">LcdSetCursor</referencedby>
      </memberdef>
      <memberdef kind="function" id="lcd_8c_1ab336d65567699c41886446b710e9d859" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void LcdSetCursor</definition>
        <argsstring>(byte row, byte col, bool cursorTrack)</argsstring>
        <name>LcdSetCursor</name>
        <param>
          <type><ref refid="helpers_8h_1a0c8186d9b9b7880309c27230bbb5e69d" kindref="member">byte</ref></type>
          <declname>row</declname>
        </param>
        <param>
          <type><ref refid="helpers_8h_1a0c8186d9b9b7880309c27230bbb5e69d" kindref="member">byte</ref></type>
          <declname>col</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>cursorTrack</declname>
        </param>
        <briefdescription>
<para>Sets the cursor position. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>row</parametername>
</parameternamelist>
<parameterdescription>
<para>row to be set </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>col</parametername>
</parameternamelist>
<parameterdescription>
<para>column to be set </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>cursorTrack</parametername>
</parameternamelist>
<parameterdescription>
<para>1 -&gt; Track cursor, 0 -&gt; don&apos;t Track cursor </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/lcd.c" line="192" column="6" bodyfile="src/lcd.c" bodystart="192" bodyend="209"/>
        <references refid="lcd_8c_1a5c92777341dd0851fe17e1bd05b885dd" compoundref="lcd_8c" startline="25">currentCol</references>
        <references refid="lcd_8c_1a789bfe83cfe007cc723e4fd58bb6b112" compoundref="lcd_8c" startline="24">currentRow</references>
        <references refid="lcd_8c_1a588b278d12ac539ff4f7787f03176dcb" compoundref="lcd_8c" startline="184" endline="190">LcdSetDdram</references>
        <referencedby refid="logic_8c_1af6da8071dabf2ebd36d99de9f70e5dce" compoundref="logic_8c" startline="306" endline="318">ClearAllInput</referencedby>
        <referencedby refid="lcd_8c_1a08b51cf41e7c0183ca5b469dd853a666" compoundref="lcd_8c" startline="267" endline="272">LcdClearLastChar</referencedby>
        <referencedby refid="lcd_8c_1aa0130791fdcab8f2263be12fb00a031d" compoundref="lcd_8c" startline="257" endline="263">LcdClearRow</referencedby>
        <referencedby refid="lcd_8c_1a60854aad97ec6bbdb5a001eea7c6b3b8" compoundref="lcd_8c" startline="211" endline="220">LcdIncrementCursorRow</referencedby>
        <referencedby refid="lcd_8c_1a85868d62c8073baad86aa03e88ac1001" compoundref="lcd_8c" startline="245" endline="249">LcdPrintCharAt</referencedby>
        <referencedby refid="logic_8c_1abe7dcc508ace168bbcddb296203a1886" compoundref="logic_8c" startline="337" endline="351">PrintData</referencedby>
        <referencedby refid="logic_8c_1a93047c21ec383e462990d923ed48795e" compoundref="logic_8c" startline="151" endline="196">RunLoginAnimation</referencedby>
        <referencedby refid="test_8c_1a02e71048dc3a569b41b257dec3b00cf0" compoundref="test_8c" startline="21" endline="30">TestLcdCursor</referencedby>
        <referencedby refid="logic_8c_1a5a3be8027400af0c949033c8c86a4360" compoundref="logic_8c" startline="253" endline="286">UpdateRows</referencedby>
      </memberdef>
      <memberdef kind="function" id="lcd_8c_1a37450f91c7ae032252ea94d7c92efde2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void LcdPrintChar</definition>
        <argsstring>(char ch, bool cursorTrack)</argsstring>
        <name>LcdPrintChar</name>
        <param>
          <type>char</type>
          <declname>ch</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>cursorTrack</declname>
        </param>
        <briefdescription>
<para>Prints a character to the LCD. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>ch</parametername>
</parameternamelist>
<parameterdescription>
<para>character to be printed </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>cursorTrack</parametername>
</parameternamelist>
<parameterdescription>
<para>1 -&gt; Track cursor, 0 -&gt; don&apos;t Track cursor </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/lcd.c" line="230" column="6" bodyfile="src/lcd.c" bodystart="230" bodyend="243"/>
        <references refid="clock_8c_1a44cfb49005f69fe95c0ce5f30b9a660e" compoundref="clock_8c" startline="52" endline="57">DelayMicro</references>
        <references refid="helpers_8h_1a5bb885982ff66a2e0a0a45a8ee9c35e2" compoundref="helpers_8h" startline="6">HIGH</references>
        <references refid="lcd_8c_1a16d925f7b9140ef9283fcae38a45b7f4" compoundref="lcd_8c" startline="222" endline="228">LcdIncrementCursorCol</references>
        <references refid="lcd_8c_1a60854aad97ec6bbdb5a001eea7c6b3b8" compoundref="lcd_8c" startline="211" endline="220">LcdIncrementCursorRow</references>
        <references refid="lcd_8c_1a40d081728cfd391fce0ec51b3c055169" compoundref="lcd_8c" startline="39" endline="42">LcdSendByte</references>
        <references refid="lcd_8c_1a20f0fe593368605d1bd6a28ad1a0a43f" compoundref="lcd_8c" startline="27" endline="29">LcdSetRs</references>
        <referencedby refid="lcd_8c_1aa0130791fdcab8f2263be12fb00a031d" compoundref="lcd_8c" startline="257" endline="263">LcdClearRow</referencedby>
        <referencedby refid="lcd_8c_1a85868d62c8073baad86aa03e88ac1001" compoundref="lcd_8c" startline="245" endline="249">LcdPrintCharAt</referencedby>
        <referencedby refid="lcd_8c_1afb88b9aba1a1db09a517c5a1ffc07299" compoundref="lcd_8c" startline="251" endline="255">LcdPrintString</referencedby>
        <referencedby refid="logic_8c_1abe7dcc508ace168bbcddb296203a1886" compoundref="logic_8c" startline="337" endline="351">PrintData</referencedby>
        <referencedby refid="logic_8c_1a93047c21ec383e462990d923ed48795e" compoundref="logic_8c" startline="151" endline="196">RunLoginAnimation</referencedby>
        <referencedby refid="logic_8c_1ada037e06af8abdcc0382445b22466477" compoundref="logic_8c" startline="94" endline="121">RunUserInput</referencedby>
        <referencedby refid="test_8c_1a8ff2f0e3039fa4096f5c57d610c9281d" compoundref="test_8c" startline="59" endline="67">TestKeypadLcd</referencedby>
        <referencedby refid="test_8c_1ac8b99cb76697b9b78d1b364cf118342a" compoundref="test_8c" startline="14" endline="19">TestLcdClear</referencedby>
      </memberdef>
      <memberdef kind="function" id="lcd_8c_1a85868d62c8073baad86aa03e88ac1001" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void LcdPrintCharAt</definition>
        <argsstring>(char ch, byte row, byte col)</argsstring>
        <name>LcdPrintCharAt</name>
        <param>
          <type>char</type>
          <declname>ch</declname>
        </param>
        <param>
          <type><ref refid="helpers_8h_1a0c8186d9b9b7880309c27230bbb5e69d" kindref="member">byte</ref></type>
          <declname>row</declname>
        </param>
        <param>
          <type><ref refid="helpers_8h_1a0c8186d9b9b7880309c27230bbb5e69d" kindref="member">byte</ref></type>
          <declname>col</declname>
        </param>
        <briefdescription>
<para>Prints a character to the LCD at a given position. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>ch</parametername>
</parameternamelist>
<parameterdescription>
<para>character to be printed </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>row</parametername>
</parameternamelist>
<parameterdescription>
<para>row to be printed at </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>col</parametername>
</parameternamelist>
<parameterdescription>
<para>column to be printed at </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/lcd.c" line="245" column="6" bodyfile="src/lcd.c" bodystart="245" bodyend="249"/>
        <references refid="lcd_8c_1a5c92777341dd0851fe17e1bd05b885dd" compoundref="lcd_8c" startline="25">currentCol</references>
        <references refid="lcd_8c_1a789bfe83cfe007cc723e4fd58bb6b112" compoundref="lcd_8c" startline="24">currentRow</references>
        <references refid="lcd_8c_1a37450f91c7ae032252ea94d7c92efde2" compoundref="lcd_8c" startline="230" endline="243">LcdPrintChar</references>
        <references refid="lcd_8c_1ab336d65567699c41886446b710e9d859" compoundref="lcd_8c" startline="192" endline="209">LcdSetCursor</references>
        <referencedby refid="lcd_8c_1a08b51cf41e7c0183ca5b469dd853a666" compoundref="lcd_8c" startline="267" endline="272">LcdClearLastChar</referencedby>
        <referencedby refid="logic_8c_1ac4085c7ad6b8fe21141bebd8cfe7053a" compoundref="logic_8c" startline="249" endline="251">UpdateShift</referencedby>
      </memberdef>
      <memberdef kind="function" id="lcd_8c_1afb88b9aba1a1db09a517c5a1ffc07299" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void LcdPrintString</definition>
        <argsstring>(char str[], bool cursorTrack)</argsstring>
        <name>LcdPrintString</name>
        <param>
          <type>char</type>
          <declname>str</declname>
          <array>[]</array>
        </param>
        <param>
          <type>bool</type>
          <declname>cursorTrack</declname>
        </param>
        <briefdescription>
<para>Prints a string to the LCD. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>str</parametername>
</parameternamelist>
<parameterdescription>
<para>string to be printed </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/lcd.c" line="251" column="6" bodyfile="src/lcd.c" bodystart="251" bodyend="255"/>
        <references refid="lcd_8c_1a37450f91c7ae032252ea94d7c92efde2" compoundref="lcd_8c" startline="230" endline="243">LcdPrintChar</references>
        <referencedby refid="logic_8c_1a3b107a1c86e52fc6f6312e077c76ac31" compoundref="logic_8c" startline="332" endline="335">DisplayMessage</referencedby>
        <referencedby refid="logic_8c_1a5f7f7893415d86a5a8348472dbdd0541" compoundref="logic_8c" startline="123" endline="149">RunCalculator</referencedby>
        <referencedby refid="logic_8c_1aee8c17e4c2f0d1376f21780a1199b97c" compoundref="logic_8c" startline="226" endline="247">RunChangePassword</referencedby>
        <referencedby refid="logic_8c_1a15058a20857a8a4d38fa4ab72109a9e2" compoundref="logic_8c" startline="198" endline="224">RunLogin</referencedby>
        <referencedby refid="logic_8c_1a93047c21ec383e462990d923ed48795e" compoundref="logic_8c" startline="151" endline="196">RunLoginAnimation</referencedby>
        <referencedby refid="test_8c_1ac96c14effaeda91dcf6f15a034a428e9" compoundref="test_8c" startline="69" endline="81">TestFlash</referencedby>
        <referencedby refid="test_8c_1a8ff2f0e3039fa4096f5c57d610c9281d" compoundref="test_8c" startline="59" endline="67">TestKeypadLcd</referencedby>
        <referencedby refid="test_8c_1a02e71048dc3a569b41b257dec3b00cf0" compoundref="test_8c" startline="21" endline="30">TestLcdCursor</referencedby>
        <referencedby refid="test_8c_1a6af1303d2e04cb5837731ad113c413bc" compoundref="test_8c" startline="32" endline="48">TestLcdMultiLine</referencedby>
        <referencedby refid="logic_8c_1a5a3be8027400af0c949033c8c86a4360" compoundref="logic_8c" startline="253" endline="286">UpdateRows</referencedby>
      </memberdef>
      <memberdef kind="function" id="lcd_8c_1aa0130791fdcab8f2263be12fb00a031d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void LcdClearRow</definition>
        <argsstring>(byte row)</argsstring>
        <name>LcdClearRow</name>
        <param>
          <type><ref refid="helpers_8h_1a0c8186d9b9b7880309c27230bbb5e69d" kindref="member">byte</ref></type>
          <declname>row</declname>
        </param>
        <briefdescription>
<para>Clears a row. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>row</parametername>
</parameternamelist>
<parameterdescription>
<para></para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/lcd.c" line="257" column="6" bodyfile="src/lcd.c" bodystart="257" bodyend="263"/>
        <references refid="lcd_8h_1a09aa49f7f7c7173b0ad1fbdefb0e2280" compoundref="lcd_8h" startline="17">LCD_N_COL</references>
        <references refid="lcd_8c_1a37450f91c7ae032252ea94d7c92efde2" compoundref="lcd_8c" startline="230" endline="243">LcdPrintChar</references>
        <references refid="lcd_8c_1ab336d65567699c41886446b710e9d859" compoundref="lcd_8c" startline="192" endline="209">LcdSetCursor</references>
        <referencedby refid="logic_8c_1af6da8071dabf2ebd36d99de9f70e5dce" compoundref="logic_8c" startline="306" endline="318">ClearAllInput</referencedby>
      </memberdef>
      <memberdef kind="function" id="lcd_8c_1a08b51cf41e7c0183ca5b469dd853a666" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void LcdClearLastChar</definition>
        <argsstring>(int rowLimit)</argsstring>
        <name>LcdClearLastChar</name>
        <param>
          <type>int</type>
          <declname>rowLimit</declname>
        </param>
        <briefdescription>
<para>Clears the last character of a row. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>rowLimit</parametername>
</parameternamelist>
<parameterdescription>
<para>wont go to that row when clearing the last character </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/lcd.c" line="267" column="6" bodyfile="src/lcd.c" bodystart="267" bodyend="272"/>
        <references refid="lcd_8c_1a5c92777341dd0851fe17e1bd05b885dd" compoundref="lcd_8c" startline="25">currentCol</references>
        <references refid="lcd_8c_1a789bfe83cfe007cc723e4fd58bb6b112" compoundref="lcd_8c" startline="24">currentRow</references>
        <references refid="lcd_8h_1a09aa49f7f7c7173b0ad1fbdefb0e2280" compoundref="lcd_8h" startline="17">LCD_N_COL</references>
        <references refid="lcd_8c_1a85868d62c8073baad86aa03e88ac1001" compoundref="lcd_8c" startline="245" endline="249">LcdPrintCharAt</references>
        <references refid="lcd_8c_1ab336d65567699c41886446b710e9d859" compoundref="lcd_8c" startline="192" endline="209">LcdSetCursor</references>
        <referencedby refid="logic_8c_1a5d70b1e35da3781dc0e409643147cdd8" compoundref="logic_8c" startline="320" endline="330">ClearLastInput</referencedby>
      </memberdef>
      <memberdef kind="function" id="lcd_8c_1a381cc054a91df1e85f2b4e63a05e8ab5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void LcdClearCol</definition>
        <argsstring>(byte col)</argsstring>
        <name>LcdClearCol</name>
        <param>
          <type><ref refid="helpers_8h_1a0c8186d9b9b7880309c27230bbb5e69d" kindref="member">byte</ref></type>
          <declname>col</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/lcd.c" line="274" column="6" bodyfile="src/lcd.c" bodystart="274" bodyend="278"/>
        <references refid="lcd_8h_1a09aa49f7f7c7173b0ad1fbdefb0e2280" compoundref="lcd_8h" startline="17">LCD_N_COL</references>
      </memberdef>
    </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="preprocessor">#include<sp/>&quot;<ref refid="lcd_8h" kindref="compound">lcd.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="clock_8h" kindref="compound">clock.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="helpers_8h" kindref="compound">helpers.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="ports_8h" kindref="compound">ports.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;stdbool.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;string.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="comment">//********************************************</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="lcd_8c_1a60854aad97ec6bbdb5a001eea7c6b3b8" kindref="member">LcdIncrementCursorRow</ref>();</highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="lcd_8c_1a16d925f7b9140ef9283fcae38a45b7f4" kindref="member">LcdIncrementCursorCol</ref>();</highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight><highlight class="comment">//********************************************</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight></codeline>
<codeline lineno="24" refid="lcd_8c_1a789bfe83cfe007cc723e4fd58bb6b112" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="lcd_8c_1a789bfe83cfe007cc723e4fd58bb6b112" kindref="member">currentRow</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="25" refid="lcd_8c_1a5c92777341dd0851fe17e1bd05b885dd" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="lcd_8c_1a5c92777341dd0851fe17e1bd05b885dd" kindref="member">currentCol</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight></codeline>
<codeline lineno="27" refid="lcd_8c_1a20f0fe593368605d1bd6a28ad1a0a43f" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="lcd_8c_1a20f0fe593368605d1bd6a28ad1a0a43f" kindref="member">LcdSetRs</ref>(</highlight><highlight class="keywordtype">byte</highlight><highlight class="normal"><sp/>rs){</highlight></codeline>
<codeline lineno="28"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="lcd_8h_1a4781e073871c6f27f89b9463ad3a4ed1" kindref="member">LCD_RS</ref><sp/>=<sp/>rs;</highlight></codeline>
<codeline lineno="29"><highlight class="normal">}</highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight></codeline>
<codeline lineno="31" refid="lcd_8c_1a93ae42864f782da4a4e0515d7faa449f" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="lcd_8c_1a93ae42864f782da4a4e0515d7faa449f" kindref="member">LcdSendNibble</ref>(</highlight><highlight class="keywordtype">byte</highlight><highlight class="normal"><sp/>nibble)<sp/>{</highlight></codeline>
<codeline lineno="32"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="lcd_8h_1a0526693165bd140bdaaa0f27b240db1c" kindref="member">LCD_DB</ref><sp/>=<sp/>nibble&amp;0xF;</highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="lcd_8h_1a1640ffbc0d8ec0f7edb04a2b93918072" kindref="member">LCD_EN</ref><sp/>=<sp/><ref refid="helpers_8h_1a5bb885982ff66a2e0a0a45a8ee9c35e2" kindref="member">HIGH</ref>;</highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="clock_8c_1a2b0d30a37314c42f7d52aeec96a6e3ac" kindref="member">DelayNano</ref>(450);</highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="lcd_8h_1a1640ffbc0d8ec0f7edb04a2b93918072" kindref="member">LCD_EN</ref><sp/>=<sp/><ref refid="helpers_8h_1ab811d8c6ff3a505312d3276590444289" kindref="member">LOW</ref>;</highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="clock_8c_1a2b0d30a37314c42f7d52aeec96a6e3ac" kindref="member">DelayNano</ref>(450);</highlight></codeline>
<codeline lineno="37"><highlight class="normal">}</highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight></codeline>
<codeline lineno="39" refid="lcd_8c_1a40d081728cfd391fce0ec51b3c055169" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="lcd_8c_1a40d081728cfd391fce0ec51b3c055169" kindref="member">LcdSendByte</ref>(</highlight><highlight class="keywordtype">byte</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">byte</highlight><highlight class="normal">){</highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="lcd_8c_1a93ae42864f782da4a4e0515d7faa449f" kindref="member">LcdSendNibble</ref>(</highlight><highlight class="keywordtype">byte</highlight><highlight class="normal"><sp/>&gt;&gt;<sp/>4);</highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="lcd_8c_1a93ae42864f782da4a4e0515d7faa449f" kindref="member">LcdSendNibble</ref>(</highlight><highlight class="keywordtype">byte</highlight><highlight class="normal"><sp/>&amp;<sp/>0xF);</highlight></codeline>
<codeline lineno="42"><highlight class="normal">}</highlight></codeline>
<codeline lineno="43"><highlight class="normal"></highlight></codeline>
<codeline lineno="44" refid="lcd_8c_1abcfdb05f65f66ac2f004c865d8d34933" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="lcd_8c_1abcfdb05f65f66ac2f004c865d8d34933" kindref="member">LcdClearDisplay</ref>(){</highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="lcd_8c_1a789bfe83cfe007cc723e4fd58bb6b112" kindref="member">currentRow</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="lcd_8c_1a5c92777341dd0851fe17e1bd05b885dd" kindref="member">currentCol</ref><sp/>=<sp/>-1;</highlight></codeline>
<codeline lineno="47"><highlight class="normal"></highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="lcd_8c_1a20f0fe593368605d1bd6a28ad1a0a43f" kindref="member">LcdSetRs</ref>(<ref refid="helpers_8h_1ab811d8c6ff3a505312d3276590444289" kindref="member">LOW</ref>);</highlight></codeline>
<codeline lineno="49"><highlight class="normal"></highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Display<sp/>clear</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="lcd_8c_1a40d081728cfd391fce0ec51b3c055169" kindref="member">LcdSendByte</ref>(0x01);</highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="clock_8c_1a2e760c634cc89519ad0956fc258eab46" kindref="member">DelayMilli</ref>(2);</highlight></codeline>
<codeline lineno="53"><highlight class="normal">}</highlight></codeline>
<codeline lineno="54"><highlight class="normal"></highlight></codeline>
<codeline lineno="55"><highlight class="normal"></highlight><highlight class="comment">//<sp/>?</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="56" refid="lcd_8c_1a27164e4aa24d46318deab3dd42658978" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="lcd_8c_1a27164e4aa24d46318deab3dd42658978" kindref="member">LcdCursorShift</ref>(</highlight><highlight class="keywordtype">byte</highlight><highlight class="normal"><sp/>sc,<sp/></highlight><highlight class="keywordtype">byte</highlight><highlight class="normal"><sp/>rl){</highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><sp/>sc<sp/>&amp;=<sp/>0x01;<sp/></highlight><highlight class="comment">//<sp/>Ensure<sp/>id<sp/>is<sp/>only<sp/>one<sp/>bit</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/>rl<sp/>&amp;=<sp/>0x01;<sp/><sp/></highlight><highlight class="comment">//<sp/>Ensure<sp/>s<sp/>is<sp/>only<sp/>one<sp/>bit</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="59"><highlight class="normal"></highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Construct<sp/>the<sp/>byte<sp/>variable<sp/>using<sp/>bitwise<sp/>operations</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">byte</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">byte</highlight><highlight class="normal"><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">byte</highlight><highlight class="normal"><sp/>|=<sp/>(1<sp/>&lt;&lt;<sp/>4);<sp/></highlight><highlight class="comment">//<sp/>Set<sp/>bit<sp/>4<sp/>to<sp/>1</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">byte</highlight><highlight class="normal"><sp/>|=<sp/>(sc<sp/>&lt;&lt;<sp/>3);<sp/></highlight><highlight class="comment">//<sp/>Set<sp/>bit<sp/>3<sp/>to<sp/>sc</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">byte</highlight><highlight class="normal"><sp/>|=<sp/>(rl<sp/>&lt;&lt;<sp/>2);<sp/></highlight><highlight class="comment">//<sp/>Set<sp/>bit<sp/>2<sp/>to<sp/>rl</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">byte</highlight><highlight class="normal"><sp/>|=<sp/>(0<sp/>&lt;&lt;<sp/>1);<sp/><sp/></highlight><highlight class="comment">//<sp/>Set<sp/>bit<sp/>1<sp/>to<sp/>0</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">byte</highlight><highlight class="normal"><sp/>|=<sp/>(0<sp/>&lt;&lt;<sp/>0);<sp/><sp/></highlight><highlight class="comment">//<sp/>Set<sp/>bit<sp/>0<sp/>to<sp/>0</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="67"><highlight class="normal"></highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="lcd_8c_1a20f0fe593368605d1bd6a28ad1a0a43f" kindref="member">LcdSetRs</ref>(<ref refid="helpers_8h_1a5bb885982ff66a2e0a0a45a8ee9c35e2" kindref="member">HIGH</ref>);</highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="lcd_8c_1a40d081728cfd391fce0ec51b3c055169" kindref="member">LcdSendByte</ref>(</highlight><highlight class="keywordtype">byte</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="clock_8c_1a44cfb49005f69fe95c0ce5f30b9a660e" kindref="member">DelayMicro</ref>(40);</highlight></codeline>
<codeline lineno="71"><highlight class="normal">}</highlight></codeline>
<codeline lineno="72"><highlight class="normal"></highlight></codeline>
<codeline lineno="73" refid="lcd_8c_1adbaeb94dbb0cd5ee4efa5a4a6a06f0c2" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="lcd_8c_1adbaeb94dbb0cd5ee4efa5a4a6a06f0c2" kindref="member">LcdEntryModeSet</ref>(</highlight><highlight class="keywordtype">byte</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">id</highlight><highlight class="normal">,<sp/></highlight><highlight class="keywordtype">byte</highlight><highlight class="normal"><sp/>s){</highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">id</highlight><highlight class="normal"><sp/>&amp;=<sp/>0x01;<sp/></highlight><highlight class="comment">//<sp/>Ensure<sp/>id<sp/>is<sp/>only<sp/>one<sp/>bit</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp/>s<sp/>&amp;=<sp/>0x01;<sp/><sp/></highlight><highlight class="comment">//<sp/>Ensure<sp/>s<sp/>is<sp/>only<sp/>one<sp/>bit</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="76"><highlight class="normal"></highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Construct<sp/>the<sp/>byte<sp/>variable<sp/>using<sp/>bitwise<sp/>operations</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">byte</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">byte</highlight><highlight class="normal"><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">byte</highlight><highlight class="normal"><sp/>|=<sp/>(1<sp/>&lt;&lt;<sp/>2);<sp/></highlight><highlight class="comment">//<sp/>Set<sp/>bit<sp/>2<sp/>to<sp/>1</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">byte</highlight><highlight class="normal"><sp/>|=<sp/>(</highlight><highlight class="keywordtype">id</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>1);<sp/></highlight><highlight class="comment">//<sp/>Set<sp/>bit<sp/>1<sp/>to<sp/>the<sp/>value<sp/>of<sp/>id</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">byte</highlight><highlight class="normal"><sp/>|=<sp/>(s<sp/>&lt;&lt;<sp/>0);<sp/><sp/></highlight><highlight class="comment">//<sp/>Set<sp/>bit<sp/>0<sp/>to<sp/>the<sp/>value<sp/>of<sp/>s</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="82"><highlight class="normal"></highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="lcd_8c_1a20f0fe593368605d1bd6a28ad1a0a43f" kindref="member">LcdSetRs</ref>(<ref refid="helpers_8h_1ab811d8c6ff3a505312d3276590444289" kindref="member">LOW</ref>);</highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="lcd_8c_1a40d081728cfd391fce0ec51b3c055169" kindref="member">LcdSendByte</ref>(</highlight><highlight class="keywordtype">byte</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="clock_8c_1a44cfb49005f69fe95c0ce5f30b9a660e" kindref="member">DelayMicro</ref>(40);</highlight></codeline>
<codeline lineno="86"><highlight class="normal">}</highlight></codeline>
<codeline lineno="87"><highlight class="normal"></highlight></codeline>
<codeline lineno="88" refid="lcd_8c_1aca04f0c025afbc86a0fedc553f3a8ba4" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="lcd_8c_1aca04f0c025afbc86a0fedc553f3a8ba4" kindref="member">LcdDisplayControl</ref>(</highlight><highlight class="keywordtype">byte</highlight><highlight class="normal"><sp/>d,<sp/></highlight><highlight class="keywordtype">byte</highlight><highlight class="normal"><sp/>c,<sp/></highlight><highlight class="keywordtype">byte</highlight><highlight class="normal"><sp/>b){</highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/><sp/>d<sp/>&amp;=<sp/>0x01;<sp/></highlight><highlight class="comment">//<sp/>Ensure<sp/>d<sp/>is<sp/>only<sp/>one<sp/>bit</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/><sp/>c<sp/>&amp;=<sp/>0x01;<sp/><sp/></highlight><highlight class="comment">//<sp/>Ensure<sp/>c<sp/>is<sp/>only<sp/>one<sp/>bit</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/><sp/>b<sp/>&amp;=<sp/>0x01;<sp/><sp/></highlight><highlight class="comment">//<sp/>Ensure<sp/>b<sp/>is<sp/>only<sp/>one<sp/>bit</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="92"><highlight class="normal"></highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Construct<sp/>the<sp/>byte<sp/>variable<sp/>using<sp/>bitwise<sp/>operations</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">byte</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">byte</highlight><highlight class="normal"><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">byte</highlight><highlight class="normal"><sp/>|=<sp/>(1<sp/>&lt;&lt;<sp/>3);<sp/></highlight><highlight class="comment">//<sp/>Set<sp/>bit<sp/>3<sp/>to<sp/>1</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">byte</highlight><highlight class="normal"><sp/>|=<sp/>(d<sp/>&lt;&lt;<sp/>2);<sp/></highlight><highlight class="comment">//<sp/>Set<sp/>bit<sp/>2<sp/>to<sp/>the<sp/>value<sp/>of<sp/>d</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">byte</highlight><highlight class="normal"><sp/>|=<sp/>(c<sp/>&lt;&lt;<sp/>1);<sp/><sp/></highlight><highlight class="comment">//<sp/>Set<sp/>bit<sp/>1<sp/>to<sp/>the<sp/>value<sp/>of<sp/>c</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">byte</highlight><highlight class="normal"><sp/>|=<sp/>(b<sp/>&lt;&lt;<sp/>0);<sp/><sp/></highlight><highlight class="comment">//<sp/>Set<sp/>bit<sp/>0<sp/>to<sp/>the<sp/>value<sp/>of<sp/>b</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="99"><highlight class="normal"></highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="lcd_8c_1a20f0fe593368605d1bd6a28ad1a0a43f" kindref="member">LcdSetRs</ref>(<ref refid="helpers_8h_1ab811d8c6ff3a505312d3276590444289" kindref="member">LOW</ref>);</highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="lcd_8c_1a40d081728cfd391fce0ec51b3c055169" kindref="member">LcdSendByte</ref>(</highlight><highlight class="keywordtype">byte</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="clock_8c_1a44cfb49005f69fe95c0ce5f30b9a660e" kindref="member">DelayMicro</ref>(40);</highlight></codeline>
<codeline lineno="103"><highlight class="normal">}</highlight></codeline>
<codeline lineno="104"><highlight class="normal"></highlight></codeline>
<codeline lineno="105" refid="lcd_8c_1aad68360b11370fa86fcd068004ef903f" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="lcd_8c_1aad68360b11370fa86fcd068004ef903f" kindref="member">LcdReturnHome</ref>(){</highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="lcd_8c_1a20f0fe593368605d1bd6a28ad1a0a43f" kindref="member">LcdSetRs</ref>(<ref refid="helpers_8h_1ab811d8c6ff3a505312d3276590444289" kindref="member">LOW</ref>);</highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="lcd_8c_1a40d081728cfd391fce0ec51b3c055169" kindref="member">LcdSendByte</ref>(0x02);</highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="clock_8c_1a44cfb49005f69fe95c0ce5f30b9a660e" kindref="member">DelayMicro</ref>(40);</highlight></codeline>
<codeline lineno="109"><highlight class="normal">}</highlight></codeline>
<codeline lineno="110"><highlight class="normal"></highlight></codeline>
<codeline lineno="111" refid="lcd_8c_1a9b451fe57dbdfef32faf1d96b9d7dce4" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="lcd_8c_1a9b451fe57dbdfef32faf1d96b9d7dce4" kindref="member">LcdFunctionSet</ref>(</highlight><highlight class="keywordtype">byte</highlight><highlight class="normal"><sp/>dl,<sp/></highlight><highlight class="keywordtype">byte</highlight><highlight class="normal"><sp/>n,<sp/></highlight><highlight class="keywordtype">byte</highlight><highlight class="normal"><sp/>f){</highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/><sp/><sp/>dl<sp/>&amp;=<sp/>0x01;<sp/></highlight><highlight class="comment">//<sp/>Ensure<sp/>dl<sp/>is<sp/>only<sp/>one<sp/>bit</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><sp/><sp/>n<sp/>&amp;=<sp/>0x01;<sp/><sp/></highlight><highlight class="comment">//<sp/>Ensure<sp/>n<sp/>is<sp/>only<sp/>one<sp/>bit</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/><sp/><sp/>f<sp/>&amp;=<sp/>0x01;<sp/><sp/></highlight><highlight class="comment">//<sp/>Ensure<sp/>f<sp/>is<sp/>only<sp/>one<sp/>bit</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="115"><highlight class="normal"></highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Construct<sp/>the<sp/>byte<sp/>variable<sp/>using<sp/>bitwise<sp/>operations</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">byte</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">byte</highlight><highlight class="normal"><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">byte</highlight><highlight class="normal"><sp/>|=<sp/>(1<sp/>&lt;&lt;<sp/>5);<sp/></highlight><highlight class="comment">//<sp/>Set<sp/>bit<sp/>5<sp/>to<sp/>1</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">byte</highlight><highlight class="normal"><sp/>|=<sp/>(dl<sp/>&lt;&lt;<sp/>4);<sp/></highlight><highlight class="comment">//<sp/>Set<sp/>bit<sp/>4<sp/>to<sp/>the<sp/>value<sp/>of<sp/>dl</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">byte</highlight><highlight class="normal"><sp/>|=<sp/>(n<sp/>&lt;&lt;<sp/>3);<sp/><sp/></highlight><highlight class="comment">//<sp/>Set<sp/>bit<sp/>3<sp/>to<sp/>the<sp/>value<sp/>of<sp/>n</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">byte</highlight><highlight class="normal"><sp/>|=<sp/>(f<sp/>&lt;&lt;<sp/>2);<sp/><sp/></highlight><highlight class="comment">//<sp/>Set<sp/>bit<sp/>2<sp/>to<sp/>the<sp/>value<sp/>of<sp/>f</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="122"><highlight class="normal"></highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="lcd_8c_1a20f0fe593368605d1bd6a28ad1a0a43f" kindref="member">LcdSetRs</ref>(<ref refid="helpers_8h_1ab811d8c6ff3a505312d3276590444289" kindref="member">LOW</ref>);</highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="lcd_8c_1a40d081728cfd391fce0ec51b3c055169" kindref="member">LcdSendByte</ref>(</highlight><highlight class="keywordtype">byte</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="clock_8c_1a44cfb49005f69fe95c0ce5f30b9a660e" kindref="member">DelayMicro</ref>(40);</highlight></codeline>
<codeline lineno="126"><highlight class="normal"></highlight></codeline>
<codeline lineno="127"><highlight class="normal">}</highlight></codeline>
<codeline lineno="128"><highlight class="normal"></highlight></codeline>
<codeline lineno="129" refid="lcd_8c_1a61b541c799955fc6b4e6cf28628de9a1" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="lcd_8c_1a61b541c799955fc6b4e6cf28628de9a1" kindref="member">LcdInit</ref>()<sp/>{</highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="ports_8c_1a03c4992f00f155be0425086ad67578f2" kindref="member">PortAInit</ref>();</highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="ports_8c_1aaebad24f567e2e1f53e6252fd325371a" kindref="member">PortBInit</ref>();</highlight></codeline>
<codeline lineno="132"><highlight class="normal"></highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Power<sp/>On</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Wait<sp/>time<sp/>&gt;<sp/>40<sp/>ms<sp/>after<sp/>VDD<sp/>&gt;<sp/>4.5V</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="clock_8c_1a2e760c634cc89519ad0956fc258eab46" kindref="member">DelayMilli</ref>(40);</highlight></codeline>
<codeline lineno="136"><highlight class="normal"></highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Sets<sp/>LCD<sp/>Rs<sp/>to<sp/>0;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="lcd_8c_1a20f0fe593368605d1bd6a28ad1a0a43f" kindref="member">LcdSetRs</ref>(<ref refid="helpers_8h_1ab811d8c6ff3a505312d3276590444289" kindref="member">LOW</ref>);</highlight></codeline>
<codeline lineno="139"><highlight class="normal"></highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Function<sp/>set</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="lcd_8c_1a93ae42864f782da4a4e0515d7faa449f" kindref="member">LcdSendNibble</ref>(0x3);</highlight></codeline>
<codeline lineno="142"><highlight class="normal"></highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Wait<sp/>time<sp/>&gt;<sp/>4.1<sp/>ms</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="clock_8c_1a2e760c634cc89519ad0956fc258eab46" kindref="member">DelayMilli</ref>(5);</highlight></codeline>
<codeline lineno="145"><highlight class="normal"></highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Function<sp/>set</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="lcd_8c_1a93ae42864f782da4a4e0515d7faa449f" kindref="member">LcdSendNibble</ref>(0x3);</highlight></codeline>
<codeline lineno="148"><highlight class="normal"></highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Wait<sp/>time<sp/>&gt;<sp/>100<sp/>us</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="clock_8c_1a44cfb49005f69fe95c0ce5f30b9a660e" kindref="member">DelayMicro</ref>(40);</highlight></codeline>
<codeline lineno="151"><highlight class="normal"></highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Function<sp/>set</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="lcd_8c_1a93ae42864f782da4a4e0515d7faa449f" kindref="member">LcdSendNibble</ref>(0x3);</highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="clock_8c_1a44cfb49005f69fe95c0ce5f30b9a660e" kindref="member">DelayMicro</ref>(40);</highlight></codeline>
<codeline lineno="155"><highlight class="normal"></highlight></codeline>
<codeline lineno="156"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Function<sp/>set<sp/>(Set<sp/>interface<sp/>to<sp/>be<sp/>4<sp/>bits<sp/>length)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="157"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="lcd_8c_1a93ae42864f782da4a4e0515d7faa449f" kindref="member">LcdSendNibble</ref>(0x2);</highlight></codeline>
<codeline lineno="158"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="clock_8c_1a44cfb49005f69fe95c0ce5f30b9a660e" kindref="member">DelayMicro</ref>(40);</highlight></codeline>
<codeline lineno="159"><highlight class="normal"></highlight></codeline>
<codeline lineno="160"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Function<sp/>set<sp/>(Interface<sp/>is<sp/>4<sp/>bits<sp/>length.<sp/>Specify<sp/>the<sp/>number<sp/>of<sp/>the<sp/>display<sp/>lines<sp/>and<sp/>character<sp/>font.)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="lcd_8c_1a9b451fe57dbdfef32faf1d96b9d7dce4" kindref="member">LcdFunctionSet</ref>(0,<sp/>1,<sp/>0);</highlight></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>LcdSendByte(0x28);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="163"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>DelayMicro(40);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="164"><highlight class="normal"></highlight></codeline>
<codeline lineno="165"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Display<sp/>off</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="166"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="lcd_8c_1aca04f0c025afbc86a0fedc553f3a8ba4" kindref="member">LcdDisplayControl</ref>(0,<sp/>0,<sp/>0);</highlight></codeline>
<codeline lineno="167"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>LcdSendByte(0x08);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="168"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>DelayMicro(40);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="169"><highlight class="normal"></highlight></codeline>
<codeline lineno="170"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>0x01<sp/>Display<sp/>clear</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="171"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="lcd_8c_1abcfdb05f65f66ac2f004c865d8d34933" kindref="member">LcdClearDisplay</ref>();</highlight></codeline>
<codeline lineno="172"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>LcdSendByte(0x01);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="173"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>DelayMilli(2);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="174"><highlight class="normal"></highlight></codeline>
<codeline lineno="175"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>0x06<sp/>Entry<sp/>mode<sp/>set</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="176"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="lcd_8c_1adbaeb94dbb0cd5ee4efa5a4a6a06f0c2" kindref="member">LcdEntryModeSet</ref>(1,<sp/>0);</highlight></codeline>
<codeline lineno="177"><highlight class="normal"></highlight></codeline>
<codeline lineno="178"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>INIT<sp/>finishes</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="179"><highlight class="normal"></highlight></codeline>
<codeline lineno="180"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>0x0E<sp/>Display<sp/>on,<sp/>cursor<sp/>appears</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="181"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="lcd_8c_1aca04f0c025afbc86a0fedc553f3a8ba4" kindref="member">LcdDisplayControl</ref>(1,<sp/>1,<sp/>0);</highlight></codeline>
<codeline lineno="182"><highlight class="normal">}</highlight></codeline>
<codeline lineno="183"><highlight class="normal"></highlight></codeline>
<codeline lineno="184" refid="lcd_8c_1a588b278d12ac539ff4f7787f03176dcb" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="lcd_8c_1a588b278d12ac539ff4f7787f03176dcb" kindref="member">LcdSetDdram</ref>(</highlight><highlight class="keywordtype">byte</highlight><highlight class="normal"><sp/>addr){</highlight></codeline>
<codeline lineno="185"><highlight class="normal"><sp/><sp/><sp/><sp/>addr<sp/>=<sp/>addr<sp/>&amp;<sp/>0x7F;</highlight></codeline>
<codeline lineno="186"><highlight class="normal"><sp/><sp/><sp/><sp/>addr<sp/>|=<sp/>(1<sp/>&lt;&lt;<sp/>7);</highlight></codeline>
<codeline lineno="187"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="lcd_8c_1a20f0fe593368605d1bd6a28ad1a0a43f" kindref="member">LcdSetRs</ref>(<ref refid="helpers_8h_1ab811d8c6ff3a505312d3276590444289" kindref="member">LOW</ref>);</highlight></codeline>
<codeline lineno="188"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="lcd_8c_1a40d081728cfd391fce0ec51b3c055169" kindref="member">LcdSendByte</ref>(addr);</highlight></codeline>
<codeline lineno="189"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="clock_8c_1a44cfb49005f69fe95c0ce5f30b9a660e" kindref="member">DelayMicro</ref>(40);</highlight></codeline>
<codeline lineno="190"><highlight class="normal">}</highlight></codeline>
<codeline lineno="191"><highlight class="normal"></highlight></codeline>
<codeline lineno="192" refid="lcd_8c_1ab336d65567699c41886446b710e9d859" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="lcd_8c_1ab336d65567699c41886446b710e9d859" kindref="member">LcdSetCursor</ref>(</highlight><highlight class="keywordtype">byte</highlight><highlight class="normal"><sp/>row,<sp/></highlight><highlight class="keywordtype">byte</highlight><highlight class="normal"><sp/>col,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>cursorTrack){</highlight></codeline>
<codeline lineno="193"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(cursorTrack){</highlight></codeline>
<codeline lineno="194"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="lcd_8c_1a5c92777341dd0851fe17e1bd05b885dd" kindref="member">currentCol</ref><sp/>=<sp/>col;</highlight></codeline>
<codeline lineno="195"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="lcd_8c_1a789bfe83cfe007cc723e4fd58bb6b112" kindref="member">currentRow</ref><sp/>=<sp/>row;</highlight></codeline>
<codeline lineno="196"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="197"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">byte</highlight><highlight class="normal"><sp/>addr<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="198"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(row<sp/>==<sp/>0){</highlight></codeline>
<codeline lineno="199"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>addr<sp/>=<sp/>0x00;</highlight></codeline>
<codeline lineno="200"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(row<sp/>==<sp/>1){</highlight></codeline>
<codeline lineno="201"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>addr<sp/>=<sp/>0x40;</highlight></codeline>
<codeline lineno="202"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(row<sp/>==<sp/>2){</highlight></codeline>
<codeline lineno="203"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>addr<sp/>=<sp/>0x14;</highlight></codeline>
<codeline lineno="204"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(row<sp/>==<sp/>3){</highlight></codeline>
<codeline lineno="205"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>addr<sp/>=<sp/>0x54;</highlight></codeline>
<codeline lineno="206"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="207"><highlight class="normal"><sp/><sp/><sp/><sp/>addr<sp/>+=<sp/>col;</highlight></codeline>
<codeline lineno="208"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="lcd_8c_1a588b278d12ac539ff4f7787f03176dcb" kindref="member">LcdSetDdram</ref>(addr);</highlight></codeline>
<codeline lineno="209"><highlight class="normal">}</highlight></codeline>
<codeline lineno="210"><highlight class="normal"></highlight></codeline>
<codeline lineno="211" refid="lcd_8c_1a60854aad97ec6bbdb5a001eea7c6b3b8" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="lcd_8c_1a60854aad97ec6bbdb5a001eea7c6b3b8" kindref="member">LcdIncrementCursorRow</ref>(){</highlight></codeline>
<codeline lineno="212"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<ref refid="lcd_8c_1a789bfe83cfe007cc723e4fd58bb6b112" kindref="member">currentRow</ref><sp/>&lt;<sp/><ref refid="lcd_8h_1aece2016b9a1e98b3b6543062a452c847" kindref="member">LCD_N_ROW</ref><sp/>-<sp/>1){</highlight></codeline>
<codeline lineno="213"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="lcd_8c_1a789bfe83cfe007cc723e4fd58bb6b112" kindref="member">currentRow</ref>++;</highlight></codeline>
<codeline lineno="214"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="215"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="lcd_8c_1a789bfe83cfe007cc723e4fd58bb6b112" kindref="member">currentRow</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="216"><highlight class="normal"></highlight></codeline>
<codeline lineno="217"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="218"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="lcd_8c_1a5c92777341dd0851fe17e1bd05b885dd" kindref="member">currentCol</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="219"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="lcd_8c_1ab336d65567699c41886446b710e9d859" kindref="member">LcdSetCursor</ref>(<ref refid="lcd_8c_1a789bfe83cfe007cc723e4fd58bb6b112" kindref="member">currentRow</ref>,<sp/><ref refid="lcd_8c_1a5c92777341dd0851fe17e1bd05b885dd" kindref="member">currentCol</ref>,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="220"><highlight class="normal">}</highlight></codeline>
<codeline lineno="221"><highlight class="normal"></highlight></codeline>
<codeline lineno="222" refid="lcd_8c_1a16d925f7b9140ef9283fcae38a45b7f4" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="lcd_8c_1a16d925f7b9140ef9283fcae38a45b7f4" kindref="member">LcdIncrementCursorCol</ref>(){</highlight></codeline>
<codeline lineno="223"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<ref refid="lcd_8c_1a5c92777341dd0851fe17e1bd05b885dd" kindref="member">currentCol</ref><sp/>&lt;<sp/><ref refid="lcd_8h_1a09aa49f7f7c7173b0ad1fbdefb0e2280" kindref="member">LCD_N_COL</ref><sp/>-<sp/>1){</highlight></codeline>
<codeline lineno="224"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="lcd_8c_1a5c92777341dd0851fe17e1bd05b885dd" kindref="member">currentCol</ref>++;</highlight></codeline>
<codeline lineno="225"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="226"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="lcd_8c_1a60854aad97ec6bbdb5a001eea7c6b3b8" kindref="member">LcdIncrementCursorRow</ref>();</highlight></codeline>
<codeline lineno="227"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="228"><highlight class="normal">}</highlight></codeline>
<codeline lineno="229"><highlight class="normal"></highlight></codeline>
<codeline lineno="230" refid="lcd_8c_1a37450f91c7ae032252ea94d7c92efde2" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="lcd_8c_1a37450f91c7ae032252ea94d7c92efde2" kindref="member">LcdPrintChar</ref>(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>ch,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>cursorTrack){</highlight></codeline>
<codeline lineno="231"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(cursorTrack){</highlight></codeline>
<codeline lineno="232"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(ch<sp/>==<sp/></highlight><highlight class="charliteral">&apos;\n&apos;</highlight><highlight class="normal">){<sp/><sp/><sp/></highlight></codeline>
<codeline lineno="233"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="lcd_8c_1a60854aad97ec6bbdb5a001eea7c6b3b8" kindref="member">LcdIncrementCursorRow</ref>();</highlight></codeline>
<codeline lineno="234"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="235"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="236"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="237"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="lcd_8c_1a16d925f7b9140ef9283fcae38a45b7f4" kindref="member">LcdIncrementCursorCol</ref>();</highlight></codeline>
<codeline lineno="238"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="239"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="240"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="lcd_8c_1a20f0fe593368605d1bd6a28ad1a0a43f" kindref="member">LcdSetRs</ref>(<ref refid="helpers_8h_1a5bb885982ff66a2e0a0a45a8ee9c35e2" kindref="member">HIGH</ref>);</highlight></codeline>
<codeline lineno="241"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="lcd_8c_1a40d081728cfd391fce0ec51b3c055169" kindref="member">LcdSendByte</ref>(ch);</highlight></codeline>
<codeline lineno="242"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="clock_8c_1a44cfb49005f69fe95c0ce5f30b9a660e" kindref="member">DelayMicro</ref>(40);</highlight></codeline>
<codeline lineno="243"><highlight class="normal">}</highlight></codeline>
<codeline lineno="244"><highlight class="normal"></highlight></codeline>
<codeline lineno="245" refid="lcd_8c_1a85868d62c8073baad86aa03e88ac1001" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="lcd_8c_1a85868d62c8073baad86aa03e88ac1001" kindref="member">LcdPrintCharAt</ref>(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>ch,<sp/></highlight><highlight class="keywordtype">byte</highlight><highlight class="normal"><sp/>row,<sp/></highlight><highlight class="keywordtype">byte</highlight><highlight class="normal"><sp/>col){</highlight></codeline>
<codeline lineno="246"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="lcd_8c_1ab336d65567699c41886446b710e9d859" kindref="member">LcdSetCursor</ref>(row,<sp/>col,<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="247"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="lcd_8c_1a37450f91c7ae032252ea94d7c92efde2" kindref="member">LcdPrintChar</ref>(ch,<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="248"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="lcd_8c_1ab336d65567699c41886446b710e9d859" kindref="member">LcdSetCursor</ref>(<ref refid="lcd_8c_1a789bfe83cfe007cc723e4fd58bb6b112" kindref="member">currentRow</ref>,<sp/><ref refid="lcd_8c_1a5c92777341dd0851fe17e1bd05b885dd" kindref="member">currentCol</ref>,<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="249"><highlight class="normal">}</highlight></codeline>
<codeline lineno="250"><highlight class="normal"></highlight></codeline>
<codeline lineno="251" refid="lcd_8c_1afb88b9aba1a1db09a517c5a1ffc07299" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="lcd_8c_1afb88b9aba1a1db09a517c5a1ffc07299" kindref="member">LcdPrintString</ref>(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>str[],<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>cursorTrack){</highlight></codeline>
<codeline lineno="252"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>(int)<sp/>strlen(str);<sp/>i++){</highlight></codeline>
<codeline lineno="253"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="lcd_8c_1a37450f91c7ae032252ea94d7c92efde2" kindref="member">LcdPrintChar</ref>(str[i],<sp/>cursorTrack);</highlight></codeline>
<codeline lineno="254"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="255"><highlight class="normal">}</highlight></codeline>
<codeline lineno="256"><highlight class="normal"></highlight></codeline>
<codeline lineno="257" refid="lcd_8c_1aa0130791fdcab8f2263be12fb00a031d" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="lcd_8c_1aa0130791fdcab8f2263be12fb00a031d" kindref="member">LcdClearRow</ref>(</highlight><highlight class="keywordtype">byte</highlight><highlight class="normal"><sp/>row){</highlight></codeline>
<codeline lineno="258"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="lcd_8c_1ab336d65567699c41886446b710e9d859" kindref="member">LcdSetCursor</ref>(row,<sp/>0,<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="259"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/><ref refid="lcd_8h_1a09aa49f7f7c7173b0ad1fbdefb0e2280" kindref="member">LCD_N_COL</ref>;<sp/>i++){</highlight></codeline>
<codeline lineno="260"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="lcd_8c_1a37450f91c7ae032252ea94d7c92efde2" kindref="member">LcdPrintChar</ref>(</highlight><highlight class="charliteral">&apos;<sp/>&apos;</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="261"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="262"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="lcd_8c_1ab336d65567699c41886446b710e9d859" kindref="member">LcdSetCursor</ref>(row,<sp/>0,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="263"><highlight class="normal">}</highlight></codeline>
<codeline lineno="264"><highlight class="normal"></highlight></codeline>
<codeline lineno="265"><highlight class="normal"></highlight></codeline>
<codeline lineno="266"><highlight class="normal"></highlight><highlight class="comment">//<sp/>TODO:<sp/>fix<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="267" refid="lcd_8c_1a08b51cf41e7c0183ca5b469dd853a666" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="lcd_8c_1a08b51cf41e7c0183ca5b469dd853a666" kindref="member">LcdClearLastChar</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>rowLimit){</highlight></codeline>
<codeline lineno="268"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>_currentRow<sp/>=<sp/><ref refid="lcd_8c_1a789bfe83cfe007cc723e4fd58bb6b112" kindref="member">currentRow</ref>-1<sp/>==<sp/>rowLimit?<sp/><ref refid="lcd_8c_1a789bfe83cfe007cc723e4fd58bb6b112" kindref="member">currentRow</ref>:<sp/><ref refid="lcd_8c_1a789bfe83cfe007cc723e4fd58bb6b112" kindref="member">currentRow</ref>-1;</highlight></codeline>
<codeline lineno="269"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>_currentCol<sp/>=<sp/><ref refid="lcd_8c_1a5c92777341dd0851fe17e1bd05b885dd" kindref="member">currentCol</ref>-1<sp/>&lt;<sp/>0<sp/>&amp;&amp;<sp/>_currentRow<sp/>!=<sp/>rowLimit+1<sp/>?<sp/><ref refid="lcd_8h_1a09aa49f7f7c7173b0ad1fbdefb0e2280" kindref="member">LCD_N_COL</ref>-1<sp/>:<sp/><ref refid="lcd_8c_1a5c92777341dd0851fe17e1bd05b885dd" kindref="member">currentCol</ref>-1;</highlight></codeline>
<codeline lineno="270"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="lcd_8c_1ab336d65567699c41886446b710e9d859" kindref="member">LcdSetCursor</ref>(_currentRow,<sp/>_currentCol,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="271"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="lcd_8c_1a85868d62c8073baad86aa03e88ac1001" kindref="member">LcdPrintCharAt</ref>(</highlight><highlight class="charliteral">&apos;<sp/>&apos;</highlight><highlight class="normal">,<sp/><ref refid="lcd_8c_1a789bfe83cfe007cc723e4fd58bb6b112" kindref="member">currentRow</ref>,<sp/><ref refid="lcd_8c_1a5c92777341dd0851fe17e1bd05b885dd" kindref="member">currentCol</ref>);</highlight></codeline>
<codeline lineno="272"><highlight class="normal">}</highlight></codeline>
<codeline lineno="273"><highlight class="normal"></highlight></codeline>
<codeline lineno="274" refid="lcd_8c_1a381cc054a91df1e85f2b4e63a05e8ab5" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="lcd_8c_1a381cc054a91df1e85f2b4e63a05e8ab5" kindref="member">LcdClearCol</ref>(</highlight><highlight class="keywordtype">byte</highlight><highlight class="normal"><sp/>col){</highlight></codeline>
<codeline lineno="275"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>j<sp/>=<sp/>0;<sp/>j<sp/>&lt;<sp/><ref refid="lcd_8h_1a09aa49f7f7c7173b0ad1fbdefb0e2280" kindref="member">LCD_N_COL</ref>;<sp/>j++){</highlight></codeline>
<codeline lineno="276"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="277"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="278"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="src/lcd.c"/>
  </compounddef>
</doxygen>
