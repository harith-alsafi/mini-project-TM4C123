<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.8" xml:lang="en-US">
  <compounddef id="lcd_8h" kind="file" language="C++">
    <compoundname>lcd.h</compoundname>
    <includes refid="helpers_8h" local="yes">helpers.h</includes>
    <includes local="no">stdbool.h</includes>
    <includedby refid="lcd_8c" local="yes">src/lcd.c</includedby>
    <includedby refid="program-logic_8c" local="yes">src/program-logic.c</includedby>
    <includedby refid="unit-test_8c" local="yes">src/unit-test.c</includedby>
    <incdepgraph>
      <node id="2">
        <label>helpers.h</label>
        <link refid="helpers_8h"/>
      </node>
      <node id="1">
        <label>src/lcd.h</label>
        <link refid="lcd_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
      </node>
      <node id="3">
        <label>stdbool.h</label>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="2">
        <label>src/lcd.c</label>
        <link refid="lcd_8c"/>
      </node>
      <node id="1">
        <label>src/lcd.h</label>
        <link refid="lcd_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
      </node>
      <node id="3">
        <label>src/program-logic.c</label>
        <link refid="program-logic_8c"/>
      </node>
      <node id="4">
        <label>src/unit-test.c</label>
        <link refid="unit-test_8c"/>
      </node>
    </invincdepgraph>
    <sectiondef kind="define">
      <memberdef kind="define" id="lcd_8h_1a137b94e8638bc4b6a0740668aefe5a58" prot="public" static="no">
        <name>LCD_H</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/lcd.h" line="2" column="9" bodyfile="src/lcd.h" bodystart="2" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="lcd_8h_1a0526693165bd140bdaaa0f27b240db1c" prot="public" static="no">
        <name>LCD_DB</name>
        <initializer>(*((volatile unsigned long *)0x4000503C))</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/lcd.h" line="11" column="9" bodyfile="src/lcd.h" bodystart="11" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="lcd_8h_1a1640ffbc0d8ec0f7edb04a2b93918072" prot="public" static="no">
        <name>LCD_EN</name>
        <initializer>(*((volatile unsigned long *)0x40004010))</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/lcd.h" line="13" column="9" bodyfile="src/lcd.h" bodystart="13" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="lcd_8h_1a4781e073871c6f27f89b9463ad3a4ed1" prot="public" static="no">
        <name>LCD_RS</name>
        <initializer>(*((volatile unsigned long *)0x40004020))</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/lcd.h" line="15" column="9" bodyfile="src/lcd.h" bodystart="15" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="lcd_8h_1a09aa49f7f7c7173b0ad1fbdefb0e2280" prot="public" static="no">
        <name>LCD_N_COL</name>
        <initializer>20</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/lcd.h" line="17" column="9" bodyfile="src/lcd.h" bodystart="17" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="lcd_8h_1aece2016b9a1e98b3b6543062a452c847" prot="public" static="no">
        <name>LCD_N_ROW</name>
        <initializer>4</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/lcd.h" line="18" column="9" bodyfile="src/lcd.h" bodystart="18" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="func">
      <memberdef kind="function" id="lcd_8h_1a20f0fe593368605d1bd6a28ad1a0a43f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void LcdSetRs</definition>
        <argsstring>(byte rs)</argsstring>
        <name>LcdSetRs</name>
        <param>
          <type><ref refid="helpers_8h_1a0c8186d9b9b7880309c27230bbb5e69d" kindref="member">byte</ref></type>
          <declname>rs</declname>
        </param>
        <briefdescription>
<para>Sets the rs flag to the given value. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>rs</parametername>
</parameternamelist>
<parameterdescription>
<para>rs == 1 -&gt; data RS = HIGH, rs == 0 -&gt; command RS = LOW </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/lcd.h" line="25" column="6" bodyfile="src/lcd.c" bodystart="10" bodyend="12" declfile="src/lcd.h" declline="25" declcolumn="6"/>
        <references refid="lcd_8h_1a4781e073871c6f27f89b9463ad3a4ed1" compoundref="lcd_8h" startline="15">LCD_RS</references>
        <referencedby refid="lcd_8c_1abcfdb05f65f66ac2f004c865d8d34933" compoundref="lcd_8c" startline="31" endline="40">LcdClearDisplay</referencedby>
        <referencedby refid="lcd_8c_1a27164e4aa24d46318deab3dd42658978" compoundref="lcd_8c" startline="43" endline="58">LcdCursorShift</referencedby>
        <referencedby refid="lcd_8c_1aca04f0c025afbc86a0fedc553f3a8ba4" compoundref="lcd_8c" startline="75" endline="90">LcdDisplayControl</referencedby>
        <referencedby refid="lcd_8c_1adbaeb94dbb0cd5ee4efa5a4a6a06f0c2" compoundref="lcd_8c" startline="60" endline="73">LcdEntryModeSet</referencedby>
        <referencedby refid="lcd_8c_1a9b451fe57dbdfef32faf1d96b9d7dce4" compoundref="lcd_8c" startline="98" endline="114">LcdFunctionSet</referencedby>
        <referencedby refid="lcd_8c_1a61b541c799955fc6b4e6cf28628de9a1" compoundref="lcd_8c" startline="116" endline="169">LcdInit</referencedby>
        <referencedby refid="lcd_8c_1a37450f91c7ae032252ea94d7c92efde2" compoundref="lcd_8c" startline="215" endline="228">LcdPrintChar</referencedby>
        <referencedby refid="lcd_8c_1aad68360b11370fa86fcd068004ef903f" compoundref="lcd_8c" startline="92" endline="96">LcdReturnHome</referencedby>
        <referencedby refid="lcd_8c_1a588b278d12ac539ff4f7787f03176dcb" compoundref="lcd_8c" startline="171" endline="177">LcdSetDdram</referencedby>
      </memberdef>
      <memberdef kind="function" id="lcd_8h_1a07e30a245315510382ca9d5e1b508de3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void LcdPulseEn</definition>
        <argsstring>()</argsstring>
        <name>LcdPulseEn</name>
        <briefdescription>
<para>Pulses the EN pin HIGH wait 450ns and then LOW wait 450ns. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/lcd.h" line="31" column="6" bodyfile="src/lcd.c" bodystart="14" bodyend="19" declfile="src/lcd.h" declline="31" declcolumn="6"/>
        <references refid="clock_8c_1a2b0d30a37314c42f7d52aeec96a6e3ac" compoundref="clock_8c" startline="47" endline="50">DelayNano</references>
        <references refid="helpers_8h_1a5bb885982ff66a2e0a0a45a8ee9c35e2" compoundref="helpers_8h" startline="4">HIGH</references>
        <references refid="lcd_8h_1a1640ffbc0d8ec0f7edb04a2b93918072" compoundref="lcd_8h" startline="13">LCD_EN</references>
        <references refid="helpers_8h_1ab811d8c6ff3a505312d3276590444289" compoundref="helpers_8h" startline="5">LOW</references>
        <referencedby refid="lcd_8c_1a93ae42864f782da4a4e0515d7faa449f" compoundref="lcd_8c" startline="21" endline="24">LcdSendNibble</referencedby>
      </memberdef>
      <memberdef kind="function" id="lcd_8h_1a93ae42864f782da4a4e0515d7faa449f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void LcdSendNibble</definition>
        <argsstring>(byte nibble)</argsstring>
        <name>LcdSendNibble</name>
        <param>
          <type><ref refid="helpers_8h_1a0c8186d9b9b7880309c27230bbb5e69d" kindref="member">byte</ref></type>
          <declname>nibble</declname>
        </param>
        <briefdescription>
<para>Sends a nibble to the LCD. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>nibble</parametername>
</parameternamelist>
<parameterdescription>
<para>RS | R/W | DB4 | DB5 | DB6 | DB7 </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/lcd.h" line="38" column="6" bodyfile="src/lcd.c" bodystart="21" bodyend="24" declfile="src/lcd.h" declline="38" declcolumn="6"/>
        <references refid="lcd_8h_1a0526693165bd140bdaaa0f27b240db1c" compoundref="lcd_8h" startline="11">LCD_DB</references>
        <references refid="lcd_8c_1a07e30a245315510382ca9d5e1b508de3" compoundref="lcd_8c" startline="14" endline="19">LcdPulseEn</references>
        <referencedby refid="lcd_8c_1a61b541c799955fc6b4e6cf28628de9a1" compoundref="lcd_8c" startline="116" endline="169">LcdInit</referencedby>
        <referencedby refid="lcd_8c_1a40d081728cfd391fce0ec51b3c055169" compoundref="lcd_8c" startline="26" endline="29">LcdSendByte</referencedby>
      </memberdef>
      <memberdef kind="function" id="lcd_8h_1a40d081728cfd391fce0ec51b3c055169" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void LcdSendByte</definition>
        <argsstring>(byte byte)</argsstring>
        <name>LcdSendByte</name>
        <param>
          <type><ref refid="helpers_8h_1a0c8186d9b9b7880309c27230bbb5e69d" kindref="member">byte</ref></type>
          <declname>byte</declname>
        </param>
        <briefdescription>
<para>Sends a byte to the LCD. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>byte</parametername>
</parameternamelist>
<parameterdescription>
<para>the byte to be sent </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/lcd.h" line="45" column="6" bodyfile="src/lcd.c" bodystart="26" bodyend="29" declfile="src/lcd.h" declline="45" declcolumn="6"/>
        <references refid="lcd_8c_1a93ae42864f782da4a4e0515d7faa449f" compoundref="lcd_8c" startline="21" endline="24">LcdSendNibble</references>
        <referencedby refid="lcd_8c_1abcfdb05f65f66ac2f004c865d8d34933" compoundref="lcd_8c" startline="31" endline="40">LcdClearDisplay</referencedby>
        <referencedby refid="lcd_8c_1a27164e4aa24d46318deab3dd42658978" compoundref="lcd_8c" startline="43" endline="58">LcdCursorShift</referencedby>
        <referencedby refid="lcd_8c_1aca04f0c025afbc86a0fedc553f3a8ba4" compoundref="lcd_8c" startline="75" endline="90">LcdDisplayControl</referencedby>
        <referencedby refid="lcd_8c_1adbaeb94dbb0cd5ee4efa5a4a6a06f0c2" compoundref="lcd_8c" startline="60" endline="73">LcdEntryModeSet</referencedby>
        <referencedby refid="lcd_8c_1a9b451fe57dbdfef32faf1d96b9d7dce4" compoundref="lcd_8c" startline="98" endline="114">LcdFunctionSet</referencedby>
        <referencedby refid="lcd_8c_1a37450f91c7ae032252ea94d7c92efde2" compoundref="lcd_8c" startline="215" endline="228">LcdPrintChar</referencedby>
        <referencedby refid="lcd_8c_1aad68360b11370fa86fcd068004ef903f" compoundref="lcd_8c" startline="92" endline="96">LcdReturnHome</referencedby>
        <referencedby refid="lcd_8c_1a588b278d12ac539ff4f7787f03176dcb" compoundref="lcd_8c" startline="171" endline="177">LcdSetDdram</referencedby>
      </memberdef>
      <memberdef kind="function" id="lcd_8h_1abcfdb05f65f66ac2f004c865d8d34933" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void LcdClearDisplay</definition>
        <argsstring>()</argsstring>
        <name>LcdClearDisplay</name>
        <briefdescription>
<para>Clears the display. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/lcd.h" line="51" column="6" bodyfile="src/lcd.c" bodystart="31" bodyend="40" declfile="src/lcd.h" declline="51" declcolumn="6"/>
        <references refid="lcd_8c_1a5c92777341dd0851fe17e1bd05b885dd" compoundref="lcd_8c" startline="8">currentCol</references>
        <references refid="lcd_8c_1a789bfe83cfe007cc723e4fd58bb6b112" compoundref="lcd_8c" startline="7">currentRow</references>
        <references refid="clock_8c_1a2e760c634cc89519ad0956fc258eab46" compoundref="clock_8c" startline="59" endline="64">DelayMilli</references>
        <references refid="lcd_8c_1a40d081728cfd391fce0ec51b3c055169" compoundref="lcd_8c" startline="26" endline="29">LcdSendByte</references>
        <references refid="lcd_8c_1a20f0fe593368605d1bd6a28ad1a0a43f" compoundref="lcd_8c" startline="10" endline="12">LcdSetRs</references>
        <references refid="helpers_8h_1ab811d8c6ff3a505312d3276590444289" compoundref="helpers_8h" startline="5">LOW</references>
        <referencedby refid="unit-test_8c_1a600f033d6f6a144fbd69976eab19e3ee" compoundref="unit-test_8c" startline="7" endline="10">AfterEach</referencedby>
        <referencedby refid="lcd_8c_1a61b541c799955fc6b4e6cf28628de9a1" compoundref="lcd_8c" startline="116" endline="169">LcdInit</referencedby>
        <referencedby refid="unit-test_8c_1a8ff2f0e3039fa4096f5c57d610c9281d" compoundref="unit-test_8c" startline="57" endline="65">TestKeypadLcd</referencedby>
        <referencedby refid="unit-test_8c_1ac8b99cb76697b9b78d1b364cf118342a" compoundref="unit-test_8c" startline="12" endline="17">TestLcdClear</referencedby>
        <referencedby refid="unit-test_8c_1a6af1303d2e04cb5837731ad113c413bc" compoundref="unit-test_8c" startline="30" endline="46">TestLcdMultiLine</referencedby>
      </memberdef>
      <memberdef kind="function" id="lcd_8h_1a27164e4aa24d46318deab3dd42658978" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void LcdCursorShift</definition>
        <argsstring>(byte sc, byte rl)</argsstring>
        <name>LcdCursorShift</name>
        <param>
          <type><ref refid="helpers_8h_1a0c8186d9b9b7880309c27230bbb5e69d" kindref="member">byte</ref></type>
          <declname>sc</declname>
        </param>
        <param>
          <type><ref refid="helpers_8h_1a0c8186d9b9b7880309c27230bbb5e69d" kindref="member">byte</ref></type>
          <declname>rl</declname>
        </param>
        <briefdescription>
<para>Sets the LCD cursor position. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>sc</parametername>
</parameternamelist>
<parameterdescription>
<para>Display shift sc = 1, Cursor move sc = 0 </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>rl</parametername>
</parameternamelist>
<parameterdescription>
<para>Right shift rl = 1, Left shift rl = 0 </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/lcd.h" line="59" column="6" bodyfile="src/lcd.c" bodystart="43" bodyend="58" declfile="src/lcd.h" declline="59" declcolumn="6"/>
        <references refid="clock_8c_1a44cfb49005f69fe95c0ce5f30b9a660e" compoundref="clock_8c" startline="52" endline="57">DelayMicro</references>
        <references refid="helpers_8h_1a5bb885982ff66a2e0a0a45a8ee9c35e2" compoundref="helpers_8h" startline="4">HIGH</references>
        <references refid="lcd_8c_1a40d081728cfd391fce0ec51b3c055169" compoundref="lcd_8c" startline="26" endline="29">LcdSendByte</references>
        <references refid="lcd_8c_1a20f0fe593368605d1bd6a28ad1a0a43f" compoundref="lcd_8c" startline="10" endline="12">LcdSetRs</references>
      </memberdef>
      <memberdef kind="function" id="lcd_8h_1adbaeb94dbb0cd5ee4efa5a4a6a06f0c2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void LcdEntryModeSet</definition>
        <argsstring>(byte id, byte s)</argsstring>
        <name>LcdEntryModeSet</name>
        <param>
          <type><ref refid="helpers_8h_1a0c8186d9b9b7880309c27230bbb5e69d" kindref="member">byte</ref></type>
          <declname>id</declname>
        </param>
        <param>
          <type><ref refid="helpers_8h_1a0c8186d9b9b7880309c27230bbb5e69d" kindref="member">byte</ref></type>
          <declname>s</declname>
        </param>
        <briefdescription>
<para>Sets the entry mode of the LCD. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>id</parametername>
</parameternamelist>
<parameterdescription>
<para>I / D = 1: Increment, I / D = 0: Decrement. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>s</parametername>
</parameternamelist>
<parameterdescription>
<para>S = 1: The display shift, S = 0: The display does not shift. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/lcd.h" line="67" column="6" bodyfile="src/lcd.c" bodystart="60" bodyend="73" declfile="src/lcd.h" declline="67" declcolumn="6"/>
        <references refid="clock_8c_1a44cfb49005f69fe95c0ce5f30b9a660e" compoundref="clock_8c" startline="52" endline="57">DelayMicro</references>
        <references refid="lcd_8c_1a40d081728cfd391fce0ec51b3c055169" compoundref="lcd_8c" startline="26" endline="29">LcdSendByte</references>
        <references refid="lcd_8c_1a20f0fe593368605d1bd6a28ad1a0a43f" compoundref="lcd_8c" startline="10" endline="12">LcdSetRs</references>
        <references refid="helpers_8h_1ab811d8c6ff3a505312d3276590444289" compoundref="helpers_8h" startline="5">LOW</references>
        <referencedby refid="lcd_8c_1a61b541c799955fc6b4e6cf28628de9a1" compoundref="lcd_8c" startline="116" endline="169">LcdInit</referencedby>
      </memberdef>
      <memberdef kind="function" id="lcd_8h_1aca04f0c025afbc86a0fedc553f3a8ba4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void LcdDisplayControl</definition>
        <argsstring>(byte d, byte c, byte b)</argsstring>
        <name>LcdDisplayControl</name>
        <param>
          <type><ref refid="helpers_8h_1a0c8186d9b9b7880309c27230bbb5e69d" kindref="member">byte</ref></type>
          <declname>d</declname>
        </param>
        <param>
          <type><ref refid="helpers_8h_1a0c8186d9b9b7880309c27230bbb5e69d" kindref="member">byte</ref></type>
          <declname>c</declname>
        </param>
        <param>
          <type><ref refid="helpers_8h_1a0c8186d9b9b7880309c27230bbb5e69d" kindref="member">byte</ref></type>
          <declname>b</declname>
        </param>
        <briefdescription>
<para>Controls the display, cursor, and blinking. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>d</parametername>
</parameternamelist>
<parameterdescription>
<para>D = 1: Display on, D = 0: Display off </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>c</parametername>
</parameternamelist>
<parameterdescription>
<para>C = 1: Cursor on, C = 0: Cursor off </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>b</parametername>
</parameternamelist>
<parameterdescription>
<para>B = 1: Blinks on, B= 0: Blinks off </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/lcd.h" line="76" column="6" bodyfile="src/lcd.c" bodystart="75" bodyend="90" declfile="src/lcd.h" declline="76" declcolumn="6"/>
        <references refid="clock_8c_1a44cfb49005f69fe95c0ce5f30b9a660e" compoundref="clock_8c" startline="52" endline="57">DelayMicro</references>
        <references refid="lcd_8c_1a40d081728cfd391fce0ec51b3c055169" compoundref="lcd_8c" startline="26" endline="29">LcdSendByte</references>
        <references refid="lcd_8c_1a20f0fe593368605d1bd6a28ad1a0a43f" compoundref="lcd_8c" startline="10" endline="12">LcdSetRs</references>
        <references refid="helpers_8h_1ab811d8c6ff3a505312d3276590444289" compoundref="helpers_8h" startline="5">LOW</references>
        <referencedby refid="lcd_8c_1a61b541c799955fc6b4e6cf28628de9a1" compoundref="lcd_8c" startline="116" endline="169">LcdInit</referencedby>
      </memberdef>
      <memberdef kind="function" id="lcd_8h_1aad68360b11370fa86fcd068004ef903f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void LcdReturnHome</definition>
        <argsstring>()</argsstring>
        <name>LcdReturnHome</name>
        <briefdescription>
<para>Resets cursor to original position. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/lcd.h" line="82" column="6" bodyfile="src/lcd.c" bodystart="92" bodyend="96" declfile="src/lcd.h" declline="82" declcolumn="6"/>
        <references refid="clock_8c_1a44cfb49005f69fe95c0ce5f30b9a660e" compoundref="clock_8c" startline="52" endline="57">DelayMicro</references>
        <references refid="lcd_8c_1a40d081728cfd391fce0ec51b3c055169" compoundref="lcd_8c" startline="26" endline="29">LcdSendByte</references>
        <references refid="lcd_8c_1a20f0fe593368605d1bd6a28ad1a0a43f" compoundref="lcd_8c" startline="10" endline="12">LcdSetRs</references>
        <references refid="helpers_8h_1ab811d8c6ff3a505312d3276590444289" compoundref="helpers_8h" startline="5">LOW</references>
      </memberdef>
      <memberdef kind="function" id="lcd_8h_1a9b451fe57dbdfef32faf1d96b9d7dce4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void LcdFunctionSet</definition>
        <argsstring>(byte dl, byte n, byte f)</argsstring>
        <name>LcdFunctionSet</name>
        <param>
          <type><ref refid="helpers_8h_1a0c8186d9b9b7880309c27230bbb5e69d" kindref="member">byte</ref></type>
          <declname>dl</declname>
        </param>
        <param>
          <type><ref refid="helpers_8h_1a0c8186d9b9b7880309c27230bbb5e69d" kindref="member">byte</ref></type>
          <declname>n</declname>
        </param>
        <param>
          <type><ref refid="helpers_8h_1a0c8186d9b9b7880309c27230bbb5e69d" kindref="member">byte</ref></type>
          <declname>f</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>dl</parametername>
</parameternamelist>
<parameterdescription>
<para>DL = 1: 8-bit length (DB7 - 0). DL = 0: 4-bit length (DB7 - 4). </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>n</parametername>
</parameternamelist>
<parameterdescription>
<para>N = 0: One-line display. N = 1: Two-line display </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>f</parametername>
</parameternamelist>
<parameterdescription>
<para>F = 0: 5 x 8 dots character font. F = 1: 5 x 10 dots character font. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/lcd.h" line="91" column="6" bodyfile="src/lcd.c" bodystart="98" bodyend="114" declfile="src/lcd.h" declline="91" declcolumn="6"/>
        <references refid="clock_8c_1a44cfb49005f69fe95c0ce5f30b9a660e" compoundref="clock_8c" startline="52" endline="57">DelayMicro</references>
        <references refid="lcd_8c_1a40d081728cfd391fce0ec51b3c055169" compoundref="lcd_8c" startline="26" endline="29">LcdSendByte</references>
        <references refid="lcd_8c_1a20f0fe593368605d1bd6a28ad1a0a43f" compoundref="lcd_8c" startline="10" endline="12">LcdSetRs</references>
        <references refid="helpers_8h_1ab811d8c6ff3a505312d3276590444289" compoundref="helpers_8h" startline="5">LOW</references>
        <referencedby refid="lcd_8c_1a61b541c799955fc6b4e6cf28628de9a1" compoundref="lcd_8c" startline="116" endline="169">LcdInit</referencedby>
      </memberdef>
      <memberdef kind="function" id="lcd_8h_1a61b541c799955fc6b4e6cf28628de9a1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void LcdInit</definition>
        <argsstring>()</argsstring>
        <name>LcdInit</name>
        <briefdescription>
<para>Initializes the LCD. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/lcd.h" line="97" column="6" bodyfile="src/lcd.c" bodystart="116" bodyend="169" declfile="src/lcd.h" declline="97" declcolumn="6"/>
        <references refid="clock_8c_1a44cfb49005f69fe95c0ce5f30b9a660e" compoundref="clock_8c" startline="52" endline="57">DelayMicro</references>
        <references refid="clock_8c_1a2e760c634cc89519ad0956fc258eab46" compoundref="clock_8c" startline="59" endline="64">DelayMilli</references>
        <references refid="lcd_8c_1abcfdb05f65f66ac2f004c865d8d34933" compoundref="lcd_8c" startline="31" endline="40">LcdClearDisplay</references>
        <references refid="lcd_8c_1aca04f0c025afbc86a0fedc553f3a8ba4" compoundref="lcd_8c" startline="75" endline="90">LcdDisplayControl</references>
        <references refid="lcd_8c_1adbaeb94dbb0cd5ee4efa5a4a6a06f0c2" compoundref="lcd_8c" startline="60" endline="73">LcdEntryModeSet</references>
        <references refid="lcd_8c_1a9b451fe57dbdfef32faf1d96b9d7dce4" compoundref="lcd_8c" startline="98" endline="114">LcdFunctionSet</references>
        <references refid="lcd_8c_1a93ae42864f782da4a4e0515d7faa449f" compoundref="lcd_8c" startline="21" endline="24">LcdSendNibble</references>
        <references refid="lcd_8c_1a20f0fe593368605d1bd6a28ad1a0a43f" compoundref="lcd_8c" startline="10" endline="12">LcdSetRs</references>
        <references refid="helpers_8h_1ab811d8c6ff3a505312d3276590444289" compoundref="helpers_8h" startline="5">LOW</references>
        <references refid="ports_8c_1a03c4992f00f155be0425086ad67578f2" compoundref="ports_8c" startline="47" endline="58">PortAInit</references>
        <references refid="ports_8c_1aaebad24f567e2e1f53e6252fd325371a" compoundref="ports_8c" startline="32" endline="45">PortBInit</references>
        <referencedby refid="program-logic_8c_1a8468ead6b76c5ff5eb578a79fd591aa8" compoundref="program-logic_8c" startline="6" endline="10">InitAll</referencedby>
      </memberdef>
      <memberdef kind="function" id="lcd_8h_1a588b278d12ac539ff4f7787f03176dcb" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void LcdSetDdram</definition>
        <argsstring>(byte addr)</argsstring>
        <name>LcdSetDdram</name>
        <param>
          <type><ref refid="helpers_8h_1a0c8186d9b9b7880309c27230bbb5e69d" kindref="member">byte</ref></type>
          <declname>addr</declname>
        </param>
        <briefdescription>
<para>Sets the DDRAM address (cursor position) </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>addr</parametername>
</parameternamelist>
<parameterdescription>
<para>7-bit address to be set </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/lcd.h" line="104" column="6" bodyfile="src/lcd.c" bodystart="171" bodyend="177" declfile="src/lcd.h" declline="104" declcolumn="6"/>
        <references refid="clock_8c_1a44cfb49005f69fe95c0ce5f30b9a660e" compoundref="clock_8c" startline="52" endline="57">DelayMicro</references>
        <references refid="lcd_8c_1a40d081728cfd391fce0ec51b3c055169" compoundref="lcd_8c" startline="26" endline="29">LcdSendByte</references>
        <references refid="lcd_8c_1a20f0fe593368605d1bd6a28ad1a0a43f" compoundref="lcd_8c" startline="10" endline="12">LcdSetRs</references>
        <references refid="helpers_8h_1ab811d8c6ff3a505312d3276590444289" compoundref="helpers_8h" startline="5">LOW</references>
        <referencedby refid="lcd_8c_1a8de82b22879092baf8383713ecc708e9" compoundref="lcd_8c" startline="179" endline="194">LcdSetCursor</referencedby>
      </memberdef>
      <memberdef kind="function" id="lcd_8h_1a8de82b22879092baf8383713ecc708e9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void LcdSetCursor</definition>
        <argsstring>(byte row, byte col)</argsstring>
        <name>LcdSetCursor</name>
        <param>
          <type><ref refid="helpers_8h_1a0c8186d9b9b7880309c27230bbb5e69d" kindref="member">byte</ref></type>
          <declname>row</declname>
        </param>
        <param>
          <type><ref refid="helpers_8h_1a0c8186d9b9b7880309c27230bbb5e69d" kindref="member">byte</ref></type>
          <declname>col</declname>
        </param>
        <briefdescription>
<para>Sets the cursor position. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>row</parametername>
</parameternamelist>
<parameterdescription>
<para>row to be set </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>col</parametername>
</parameternamelist>
<parameterdescription>
<para>column to be set </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/lcd.h" line="112" column="6" bodyfile="src/lcd.c" bodystart="179" bodyend="194" declfile="src/lcd.h" declline="112" declcolumn="6"/>
        <references refid="lcd_8c_1a5c92777341dd0851fe17e1bd05b885dd" compoundref="lcd_8c" startline="8">currentCol</references>
        <references refid="lcd_8c_1a789bfe83cfe007cc723e4fd58bb6b112" compoundref="lcd_8c" startline="7">currentRow</references>
        <references refid="lcd_8c_1a588b278d12ac539ff4f7787f03176dcb" compoundref="lcd_8c" startline="171" endline="177">LcdSetDdram</references>
        <referencedby refid="lcd_8c_1a60854aad97ec6bbdb5a001eea7c6b3b8" compoundref="lcd_8c" startline="196" endline="205">LcdIncrementCursorRow</referencedby>
        <referencedby refid="lcd_8c_1a85868d62c8073baad86aa03e88ac1001" compoundref="lcd_8c" startline="230" endline="233">LcdPrintCharAt</referencedby>
        <referencedby refid="unit-test_8c_1a02e71048dc3a569b41b257dec3b00cf0" compoundref="unit-test_8c" startline="19" endline="28">TestLcdCursor</referencedby>
      </memberdef>
      <memberdef kind="function" id="lcd_8h_1a37450f91c7ae032252ea94d7c92efde2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void LcdPrintChar</definition>
        <argsstring>(char ch, bool cursorTrack)</argsstring>
        <name>LcdPrintChar</name>
        <param>
          <type>char</type>
          <declname>ch</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>cursorTrack</declname>
        </param>
        <briefdescription>
<para>Prints a character to the LCD. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>ch</parametername>
</parameternamelist>
<parameterdescription>
<para>character to be printed </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>cursorTrack</parametername>
</parameternamelist>
<parameterdescription>
<para>1 -&gt; Track cursor, 0 -&gt; don&apos;t Track cursor </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/lcd.h" line="120" column="6" bodyfile="src/lcd.c" bodystart="215" bodyend="228" declfile="src/lcd.h" declline="120" declcolumn="6"/>
        <references refid="clock_8c_1a44cfb49005f69fe95c0ce5f30b9a660e" compoundref="clock_8c" startline="52" endline="57">DelayMicro</references>
        <references refid="helpers_8h_1a5bb885982ff66a2e0a0a45a8ee9c35e2" compoundref="helpers_8h" startline="4">HIGH</references>
        <references refid="lcd_8c_1a16d925f7b9140ef9283fcae38a45b7f4" compoundref="lcd_8c" startline="207" endline="213">LcdIncrementCursorCol</references>
        <references refid="lcd_8c_1a60854aad97ec6bbdb5a001eea7c6b3b8" compoundref="lcd_8c" startline="196" endline="205">LcdIncrementCursorRow</references>
        <references refid="lcd_8c_1a40d081728cfd391fce0ec51b3c055169" compoundref="lcd_8c" startline="26" endline="29">LcdSendByte</references>
        <references refid="lcd_8c_1a20f0fe593368605d1bd6a28ad1a0a43f" compoundref="lcd_8c" startline="10" endline="12">LcdSetRs</references>
        <referencedby refid="lcd_8c_1a85868d62c8073baad86aa03e88ac1001" compoundref="lcd_8c" startline="230" endline="233">LcdPrintCharAt</referencedby>
        <referencedby refid="lcd_8c_1a6ba64316f53c5a71031db621b3fe435e" compoundref="lcd_8c" startline="235" endline="240">LcdPrintString</referencedby>
        <referencedby refid="unit-test_8c_1a8ff2f0e3039fa4096f5c57d610c9281d" compoundref="unit-test_8c" startline="57" endline="65">TestKeypadLcd</referencedby>
        <referencedby refid="unit-test_8c_1ac8b99cb76697b9b78d1b364cf118342a" compoundref="unit-test_8c" startline="12" endline="17">TestLcdClear</referencedby>
      </memberdef>
      <memberdef kind="function" id="lcd_8h_1a6ba64316f53c5a71031db621b3fe435e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void LcdPrintString</definition>
        <argsstring>(char str[])</argsstring>
        <name>LcdPrintString</name>
        <param>
          <type>char</type>
          <declname>str</declname>
          <array>[]</array>
        </param>
        <briefdescription>
<para>Prints a string to the LCD. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>str</parametername>
</parameternamelist>
<parameterdescription>
<para>string to be printed </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/lcd.h" line="127" column="6" bodyfile="src/lcd.c" bodystart="235" bodyend="240" declfile="src/lcd.h" declline="127" declcolumn="6"/>
        <references refid="lcd_8c_1a37450f91c7ae032252ea94d7c92efde2" compoundref="lcd_8c" startline="215" endline="228">LcdPrintChar</references>
        <references refid="helpers_8c_1ad7f3f83d057abbbc219fb761d2058708" compoundref="helpers_8c" startline="3" endline="10">Strlen</references>
        <referencedby refid="unit-test_8c_1a8ff2f0e3039fa4096f5c57d610c9281d" compoundref="unit-test_8c" startline="57" endline="65">TestKeypadLcd</referencedby>
        <referencedby refid="unit-test_8c_1a02e71048dc3a569b41b257dec3b00cf0" compoundref="unit-test_8c" startline="19" endline="28">TestLcdCursor</referencedby>
        <referencedby refid="unit-test_8c_1a6af1303d2e04cb5837731ad113c413bc" compoundref="unit-test_8c" startline="30" endline="46">TestLcdMultiLine</referencedby>
      </memberdef>
      <memberdef kind="function" id="lcd_8h_1a85868d62c8073baad86aa03e88ac1001" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void LcdPrintCharAt</definition>
        <argsstring>(char ch, byte row, byte col)</argsstring>
        <name>LcdPrintCharAt</name>
        <param>
          <type>char</type>
          <declname>ch</declname>
        </param>
        <param>
          <type><ref refid="helpers_8h_1a0c8186d9b9b7880309c27230bbb5e69d" kindref="member">byte</ref></type>
          <declname>row</declname>
        </param>
        <param>
          <type><ref refid="helpers_8h_1a0c8186d9b9b7880309c27230bbb5e69d" kindref="member">byte</ref></type>
          <declname>col</declname>
        </param>
        <briefdescription>
<para>Prints a character to the LCD at a given position. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>ch</parametername>
</parameternamelist>
<parameterdescription>
<para>character to be printed </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>row</parametername>
</parameternamelist>
<parameterdescription>
<para>row to be printed at </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>col</parametername>
</parameternamelist>
<parameterdescription>
<para>column to be printed at </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/lcd.h" line="136" column="6" bodyfile="src/lcd.c" bodystart="230" bodyend="233" declfile="src/lcd.h" declline="136" declcolumn="6"/>
        <references refid="lcd_8c_1a37450f91c7ae032252ea94d7c92efde2" compoundref="lcd_8c" startline="215" endline="228">LcdPrintChar</references>
        <references refid="lcd_8c_1a8de82b22879092baf8383713ecc708e9" compoundref="lcd_8c" startline="179" endline="194">LcdSetCursor</references>
      </memberdef>
    </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="preprocessor">#ifndef<sp/>LCD_H<sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>If<sp/>not<sp/>defined</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2" refid="lcd_8h_1a137b94e8638bc4b6a0740668aefe5a58" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>LCD_H<sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Define<sp/>it</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="helpers_8h" kindref="compound">helpers.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;stdbool.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="comment">//<sp/>DB4<sp/>-&gt;<sp/>PB0</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="comment">//<sp/>DB5<sp/>-&gt;<sp/>PB1</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="comment">//<sp/>DB6<sp/>-&gt;<sp/>PB2</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="comment">//<sp/>DB7<sp/>-&gt;<sp/>PB3</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11" refid="lcd_8h_1a0526693165bd140bdaaa0f27b240db1c" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>LCD_DB<sp/>(*((volatile<sp/>unsigned<sp/>long<sp/>*)0x4000503C))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="comment">//<sp/>EN<sp/>-&gt;<sp/>PA2</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13" refid="lcd_8h_1a1640ffbc0d8ec0f7edb04a2b93918072" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>LCD_EN<sp/>(*((volatile<sp/>unsigned<sp/>long<sp/>*)0x40004010))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="comment">//<sp/>RS<sp/>-&gt;<sp/>PA3</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15" refid="lcd_8h_1a4781e073871c6f27f89b9463ad3a4ed1" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>LCD_RS<sp/>(*((volatile<sp/>unsigned<sp/>long<sp/>*)0x40004020))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight></codeline>
<codeline lineno="17" refid="lcd_8h_1a09aa49f7f7c7173b0ad1fbdefb0e2280" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>LCD_N_COL<sp/>20</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="18" refid="lcd_8h_1aece2016b9a1e98b3b6543062a452c847" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>LCD_N_ROW<sp/>4</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="lcd_8h_1a20f0fe593368605d1bd6a28ad1a0a43f" kindref="member">LcdSetRs</ref>(</highlight><highlight class="keywordtype">byte</highlight><highlight class="normal"><sp/>rs);</highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="lcd_8h_1a07e30a245315510382ca9d5e1b508de3" kindref="member">LcdPulseEn</ref>();</highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="lcd_8h_1a93ae42864f782da4a4e0515d7faa449f" kindref="member">LcdSendNibble</ref>(</highlight><highlight class="keywordtype">byte</highlight><highlight class="normal"><sp/>nibble);</highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight></codeline>
<codeline lineno="45"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="lcd_8h_1a40d081728cfd391fce0ec51b3c055169" kindref="member">LcdSendByte</ref>(</highlight><highlight class="keywordtype">byte</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">byte</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="46"><highlight class="normal"></highlight></codeline>
<codeline lineno="51"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="lcd_8h_1abcfdb05f65f66ac2f004c865d8d34933" kindref="member">LcdClearDisplay</ref>();</highlight></codeline>
<codeline lineno="52"><highlight class="normal"></highlight></codeline>
<codeline lineno="59"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="lcd_8h_1a27164e4aa24d46318deab3dd42658978" kindref="member">LcdCursorShift</ref>(</highlight><highlight class="keywordtype">byte</highlight><highlight class="normal"><sp/>sc,<sp/></highlight><highlight class="keywordtype">byte</highlight><highlight class="normal"><sp/>rl);</highlight></codeline>
<codeline lineno="60"><highlight class="normal"></highlight></codeline>
<codeline lineno="67"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="lcd_8h_1adbaeb94dbb0cd5ee4efa5a4a6a06f0c2" kindref="member">LcdEntryModeSet</ref>(</highlight><highlight class="keywordtype">byte</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">id</highlight><highlight class="normal">,<sp/></highlight><highlight class="keywordtype">byte</highlight><highlight class="normal"><sp/>s);</highlight></codeline>
<codeline lineno="68"><highlight class="normal"></highlight></codeline>
<codeline lineno="76"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="lcd_8h_1aca04f0c025afbc86a0fedc553f3a8ba4" kindref="member">LcdDisplayControl</ref>(</highlight><highlight class="keywordtype">byte</highlight><highlight class="normal"><sp/>d,<sp/></highlight><highlight class="keywordtype">byte</highlight><highlight class="normal"><sp/>c,<sp/></highlight><highlight class="keywordtype">byte</highlight><highlight class="normal"><sp/>b);</highlight></codeline>
<codeline lineno="77"><highlight class="normal"></highlight></codeline>
<codeline lineno="82"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="lcd_8h_1aad68360b11370fa86fcd068004ef903f" kindref="member">LcdReturnHome</ref>();</highlight></codeline>
<codeline lineno="83"><highlight class="normal"></highlight></codeline>
<codeline lineno="91"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="lcd_8h_1a9b451fe57dbdfef32faf1d96b9d7dce4" kindref="member">LcdFunctionSet</ref>(</highlight><highlight class="keywordtype">byte</highlight><highlight class="normal"><sp/>dl,<sp/></highlight><highlight class="keywordtype">byte</highlight><highlight class="normal"><sp/>n,<sp/></highlight><highlight class="keywordtype">byte</highlight><highlight class="normal"><sp/>f);</highlight></codeline>
<codeline lineno="92"><highlight class="normal"></highlight></codeline>
<codeline lineno="97"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="lcd_8h_1a61b541c799955fc6b4e6cf28628de9a1" kindref="member">LcdInit</ref>();</highlight></codeline>
<codeline lineno="98"><highlight class="normal"></highlight></codeline>
<codeline lineno="104"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="lcd_8h_1a588b278d12ac539ff4f7787f03176dcb" kindref="member">LcdSetDdram</ref>(</highlight><highlight class="keywordtype">byte</highlight><highlight class="normal"><sp/>addr);</highlight></codeline>
<codeline lineno="105"><highlight class="normal"></highlight></codeline>
<codeline lineno="112"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="lcd_8h_1a8de82b22879092baf8383713ecc708e9" kindref="member">LcdSetCursor</ref>(</highlight><highlight class="keywordtype">byte</highlight><highlight class="normal"><sp/>row,<sp/></highlight><highlight class="keywordtype">byte</highlight><highlight class="normal"><sp/>col);</highlight></codeline>
<codeline lineno="113"><highlight class="normal"></highlight></codeline>
<codeline lineno="120"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="lcd_8h_1a37450f91c7ae032252ea94d7c92efde2" kindref="member">LcdPrintChar</ref>(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>ch,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>cursorTrack);</highlight></codeline>
<codeline lineno="121"><highlight class="normal"></highlight></codeline>
<codeline lineno="127"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="lcd_8h_1a6ba64316f53c5a71031db621b3fe435e" kindref="member">LcdPrintString</ref>(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>str[]);</highlight></codeline>
<codeline lineno="128"><highlight class="normal"></highlight></codeline>
<codeline lineno="136"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="lcd_8h_1a85868d62c8073baad86aa03e88ac1001" kindref="member">LcdPrintCharAt</ref>(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>ch,<sp/></highlight><highlight class="keywordtype">byte</highlight><highlight class="normal"><sp/>row,<sp/></highlight><highlight class="keywordtype">byte</highlight><highlight class="normal"><sp/>col);</highlight></codeline>
<codeline lineno="137"><highlight class="normal"></highlight></codeline>
<codeline lineno="138"><highlight class="normal"></highlight><highlight class="comment">//<sp/>void<sp/>LcdClearRow(unsigned<sp/>char<sp/>row);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="139"><highlight class="normal"></highlight></codeline>
<codeline lineno="140"><highlight class="normal"></highlight><highlight class="comment">//<sp/>void<sp/>LcdClearCol(unsigned<sp/>char<sp/>col);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="141"><highlight class="normal"></highlight></codeline>
<codeline lineno="142"><highlight class="normal"></highlight><highlight class="comment">//<sp/>void<sp/>LcdDrawLine(unsigned<sp/>char<sp/>row,<sp/>unsigned<sp/>char<sp/>col,<sp/>unsigned<sp/>char<sp/>length,<sp/>unsigned<sp/>char<sp/>is_vertical);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="143"><highlight class="normal"></highlight></codeline>
<codeline lineno="144"><highlight class="normal"></highlight><highlight class="comment">//<sp/>void<sp/>LcdDrawBox(unsigned<sp/>char<sp/>row,<sp/>unsigned<sp/>char<sp/>col,<sp/>unsigned<sp/>char<sp/>length,<sp/>unsigned<sp/>char<sp/>width);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="145"><highlight class="normal"></highlight></codeline>
<codeline lineno="146"><highlight class="normal"></highlight></codeline>
<codeline lineno="147"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
    </programlisting>
    <location file="src/lcd.h"/>
  </compounddef>
</doxygen>
