<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.8" xml:lang="en-US">
  <compounddef id="lcd_8h" kind="file" language="C++">
    <compoundname>lcd.h</compoundname>
    <includes refid="helpers_8h" local="yes">helpers.h</includes>
    <includes local="no">stdbool.h</includes>
    <includedby refid="lcd_8c" local="yes">src/lcd.c</includedby>
    <includedby refid="logic_8c" local="yes">src/logic.c</includedby>
    <includedby refid="main_8c" local="yes">src/main.c</includedby>
    <includedby refid="parser_8c" local="yes">src/parser.c</includedby>
    <includedby refid="test_8c" local="yes">src/test.c</includedby>
    <incdepgraph>
      <node id="2">
        <label>helpers.h</label>
        <link refid="helpers_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
      </node>
      <node id="1">
        <label>src/lcd.h</label>
        <link refid="lcd_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
      </node>
      <node id="4">
        <label>stdbool.h</label>
      </node>
      <node id="3">
        <label>stdlib.h</label>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="2">
        <label>src/lcd.c</label>
        <link refid="lcd_8c"/>
      </node>
      <node id="1">
        <label>src/lcd.h</label>
        <link refid="lcd_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
      </node>
      <node id="3">
        <label>src/logic.c</label>
        <link refid="logic_8c"/>
      </node>
      <node id="4">
        <label>src/main.c</label>
        <link refid="main_8c"/>
      </node>
      <node id="5">
        <label>src/parser.c</label>
        <link refid="parser_8c"/>
      </node>
      <node id="6">
        <label>src/test.c</label>
        <link refid="test_8c"/>
      </node>
    </invincdepgraph>
    <sectiondef kind="define">
      <memberdef kind="define" id="lcd_8h_1a137b94e8638bc4b6a0740668aefe5a58" prot="public" static="no">
        <name>LCD_H</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/lcd.h" line="2" column="9" bodyfile="src/lcd.h" bodystart="2" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="lcd_8h_1a0526693165bd140bdaaa0f27b240db1c" prot="public" static="no">
        <name>LCD_DB</name>
        <initializer>(*((volatile unsigned long *)0x4000503C))</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/lcd.h" line="11" column="9" bodyfile="src/lcd.h" bodystart="11" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="lcd_8h_1a1640ffbc0d8ec0f7edb04a2b93918072" prot="public" static="no">
        <name>LCD_EN</name>
        <initializer>(*((volatile unsigned long *)0x40004010))</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/lcd.h" line="13" column="9" bodyfile="src/lcd.h" bodystart="13" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="lcd_8h_1a4781e073871c6f27f89b9463ad3a4ed1" prot="public" static="no">
        <name>LCD_RS</name>
        <initializer>(*((volatile unsigned long *)0x40004020))</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/lcd.h" line="15" column="9" bodyfile="src/lcd.h" bodystart="15" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="lcd_8h_1a09aa49f7f7c7173b0ad1fbdefb0e2280" prot="public" static="no">
        <name>LCD_N_COL</name>
        <initializer>20</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/lcd.h" line="17" column="9" bodyfile="src/lcd.h" bodystart="17" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="lcd_8h_1aece2016b9a1e98b3b6543062a452c847" prot="public" static="no">
        <name>LCD_N_ROW</name>
        <initializer>4</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/lcd.h" line="18" column="9" bodyfile="src/lcd.h" bodystart="18" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="lcd_8h_1ada878a8b4864a1658ee0f0acd5a89412" prot="public" static="no">
        <name>CHAR_P</name>
        <initializer>0xFF</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/lcd.h" line="20" column="9" bodyfile="src/lcd.h" bodystart="20" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="lcd_8h_1a26ac0a0707d60b57ae6526fccbff614b" prot="public" static="no">
        <name>LCD_CHAR_S</name>
        <initializer>0xFE</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/lcd.h" line="21" column="9" bodyfile="src/lcd.h" bodystart="21" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="lcd_8h_1ac9c7adc5ba35b5ea1d4163ee8bd1c22e" prot="public" static="no">
        <name>CHAR_LOCKED</name>
        <initializer>0xBF</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/lcd.h" line="22" column="9" bodyfile="src/lcd.h" bodystart="22" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="lcd_8h_1ab7f0f8b1872a01b61e98e1982e59087b" prot="public" static="no">
        <name>CHAR_V_LINE</name>
        <initializer>&apos;│&apos;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/lcd.h" line="23" column="9" bodyfile="src/lcd.h" bodystart="23" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="lcd_8h_1af9d800f23706399c30ccf6e023d36d57" prot="public" static="no">
        <name>CHAR_H_LINE</name>
        <initializer>&apos;─&apos;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/lcd.h" line="24" column="9" bodyfile="src/lcd.h" bodystart="24" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="lcd_8h_1a50e47f12ad711cd93ebcb8ba6fa03e0c" prot="public" static="no">
        <name>CHAR_CROSS</name>
        <initializer>&apos;┼&apos;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/lcd.h" line="25" column="9" bodyfile="src/lcd.h" bodystart="25" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="var">
      <memberdef kind="variable" id="lcd_8h_1a789bfe83cfe007cc723e4fd58bb6b112" prot="public" static="no" extern="yes" mutable="no">
        <type>int</type>
        <definition>int currentRow</definition>
        <argsstring></argsstring>
        <name>currentRow</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/lcd.h" line="27" column="12" bodyfile="src/lcd.c" bodystart="24" bodyend="-1" declfile="src/lcd.h" declline="27" declcolumn="12"/>
        <referencedby refid="lcd_8c_1abcfdb05f65f66ac2f004c865d8d34933" compoundref="lcd_8c" startline="44" endline="53">LcdClearDisplay</referencedby>
        <referencedby refid="lcd_8c_1a08b51cf41e7c0183ca5b469dd853a666" compoundref="lcd_8c" startline="267" endline="272">LcdClearLastChar</referencedby>
        <referencedby refid="lcd_8c_1a60854aad97ec6bbdb5a001eea7c6b3b8" compoundref="lcd_8c" startline="211" endline="220">LcdIncrementCursorRow</referencedby>
        <referencedby refid="lcd_8c_1a85868d62c8073baad86aa03e88ac1001" compoundref="lcd_8c" startline="245" endline="249">LcdPrintCharAt</referencedby>
        <referencedby refid="lcd_8c_1ab336d65567699c41886446b710e9d859" compoundref="lcd_8c" startline="192" endline="209">LcdSetCursor</referencedby>
      </memberdef>
      <memberdef kind="variable" id="lcd_8h_1a5c92777341dd0851fe17e1bd05b885dd" prot="public" static="no" extern="yes" mutable="no">
        <type>int</type>
        <definition>int currentCol</definition>
        <argsstring></argsstring>
        <name>currentCol</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/lcd.h" line="28" column="12" bodyfile="src/lcd.c" bodystart="25" bodyend="-1" declfile="src/lcd.h" declline="28" declcolumn="12"/>
        <referencedby refid="lcd_8c_1abcfdb05f65f66ac2f004c865d8d34933" compoundref="lcd_8c" startline="44" endline="53">LcdClearDisplay</referencedby>
        <referencedby refid="lcd_8c_1a08b51cf41e7c0183ca5b469dd853a666" compoundref="lcd_8c" startline="267" endline="272">LcdClearLastChar</referencedby>
        <referencedby refid="lcd_8c_1a16d925f7b9140ef9283fcae38a45b7f4" compoundref="lcd_8c" startline="222" endline="228">LcdIncrementCursorCol</referencedby>
        <referencedby refid="lcd_8c_1a60854aad97ec6bbdb5a001eea7c6b3b8" compoundref="lcd_8c" startline="211" endline="220">LcdIncrementCursorRow</referencedby>
        <referencedby refid="lcd_8c_1a85868d62c8073baad86aa03e88ac1001" compoundref="lcd_8c" startline="245" endline="249">LcdPrintCharAt</referencedby>
        <referencedby refid="lcd_8c_1ab336d65567699c41886446b710e9d859" compoundref="lcd_8c" startline="192" endline="209">LcdSetCursor</referencedby>
      </memberdef>
    </sectiondef>
    <sectiondef kind="func">
      <memberdef kind="function" id="lcd_8h_1a20f0fe593368605d1bd6a28ad1a0a43f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void LcdSetRs</definition>
        <argsstring>(byte rs)</argsstring>
        <name>LcdSetRs</name>
        <param>
          <type><ref refid="helpers_8h_1a0c8186d9b9b7880309c27230bbb5e69d" kindref="member">byte</ref></type>
          <declname>rs</declname>
        </param>
        <briefdescription>
<para>Sets the rs flag to the given value. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>rs</parametername>
</parameternamelist>
<parameterdescription>
<para>rs == 1 -&gt; data RS = HIGH, rs == 0 -&gt; command RS = LOW </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/lcd.h" line="35" column="6" bodyfile="src/lcd.c" bodystart="27" bodyend="29" declfile="src/lcd.h" declline="35" declcolumn="6"/>
        <references refid="lcd_8h_1a4781e073871c6f27f89b9463ad3a4ed1" compoundref="lcd_8h" startline="15">LCD_RS</references>
        <referencedby refid="lcd_8c_1abcfdb05f65f66ac2f004c865d8d34933" compoundref="lcd_8c" startline="44" endline="53">LcdClearDisplay</referencedby>
        <referencedby refid="lcd_8c_1a27164e4aa24d46318deab3dd42658978" compoundref="lcd_8c" startline="56" endline="71">LcdCursorShift</referencedby>
        <referencedby refid="lcd_8c_1aca04f0c025afbc86a0fedc553f3a8ba4" compoundref="lcd_8c" startline="88" endline="103">LcdDisplayControl</referencedby>
        <referencedby refid="lcd_8c_1adbaeb94dbb0cd5ee4efa5a4a6a06f0c2" compoundref="lcd_8c" startline="73" endline="86">LcdEntryModeSet</referencedby>
        <referencedby refid="lcd_8c_1a9b451fe57dbdfef32faf1d96b9d7dce4" compoundref="lcd_8c" startline="111" endline="127">LcdFunctionSet</referencedby>
        <referencedby refid="lcd_8c_1a61b541c799955fc6b4e6cf28628de9a1" compoundref="lcd_8c" startline="129" endline="182">LcdInit</referencedby>
        <referencedby refid="lcd_8c_1a37450f91c7ae032252ea94d7c92efde2" compoundref="lcd_8c" startline="230" endline="243">LcdPrintChar</referencedby>
        <referencedby refid="lcd_8c_1aad68360b11370fa86fcd068004ef903f" compoundref="lcd_8c" startline="105" endline="109">LcdReturnHome</referencedby>
        <referencedby refid="lcd_8c_1a588b278d12ac539ff4f7787f03176dcb" compoundref="lcd_8c" startline="184" endline="190">LcdSetDdram</referencedby>
      </memberdef>
      <memberdef kind="function" id="lcd_8h_1a93ae42864f782da4a4e0515d7faa449f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void LcdSendNibble</definition>
        <argsstring>(byte nibble)</argsstring>
        <name>LcdSendNibble</name>
        <param>
          <type><ref refid="helpers_8h_1a0c8186d9b9b7880309c27230bbb5e69d" kindref="member">byte</ref></type>
          <declname>nibble</declname>
        </param>
        <briefdescription>
<para>Sends a nibble to the LCD. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>nibble</parametername>
</parameternamelist>
<parameterdescription>
<para>RS | R/W | DB4 | DB5 | DB6 | DB7 </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/lcd.h" line="42" column="6" bodyfile="src/lcd.c" bodystart="31" bodyend="37" declfile="src/lcd.h" declline="42" declcolumn="6"/>
        <references refid="clock_8c_1a2b0d30a37314c42f7d52aeec96a6e3ac" compoundref="clock_8c" startline="47" endline="50">DelayNano</references>
        <references refid="helpers_8h_1a5bb885982ff66a2e0a0a45a8ee9c35e2" compoundref="helpers_8h" startline="6">HIGH</references>
        <references refid="lcd_8h_1a0526693165bd140bdaaa0f27b240db1c" compoundref="lcd_8h" startline="11">LCD_DB</references>
        <references refid="lcd_8h_1a1640ffbc0d8ec0f7edb04a2b93918072" compoundref="lcd_8h" startline="13">LCD_EN</references>
        <references refid="helpers_8h_1ab811d8c6ff3a505312d3276590444289" compoundref="helpers_8h" startline="7">LOW</references>
        <referencedby refid="lcd_8c_1a61b541c799955fc6b4e6cf28628de9a1" compoundref="lcd_8c" startline="129" endline="182">LcdInit</referencedby>
        <referencedby refid="lcd_8c_1a40d081728cfd391fce0ec51b3c055169" compoundref="lcd_8c" startline="39" endline="42">LcdSendByte</referencedby>
      </memberdef>
      <memberdef kind="function" id="lcd_8h_1a40d081728cfd391fce0ec51b3c055169" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void LcdSendByte</definition>
        <argsstring>(byte byte)</argsstring>
        <name>LcdSendByte</name>
        <param>
          <type><ref refid="helpers_8h_1a0c8186d9b9b7880309c27230bbb5e69d" kindref="member">byte</ref></type>
          <declname>byte</declname>
        </param>
        <briefdescription>
<para>Sends a byte to the LCD. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>byte</parametername>
</parameternamelist>
<parameterdescription>
<para>the byte to be sent </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/lcd.h" line="49" column="6" bodyfile="src/lcd.c" bodystart="39" bodyend="42" declfile="src/lcd.h" declline="49" declcolumn="6"/>
        <references refid="lcd_8c_1a93ae42864f782da4a4e0515d7faa449f" compoundref="lcd_8c" startline="31" endline="37">LcdSendNibble</references>
        <referencedby refid="lcd_8c_1abcfdb05f65f66ac2f004c865d8d34933" compoundref="lcd_8c" startline="44" endline="53">LcdClearDisplay</referencedby>
        <referencedby refid="lcd_8c_1a27164e4aa24d46318deab3dd42658978" compoundref="lcd_8c" startline="56" endline="71">LcdCursorShift</referencedby>
        <referencedby refid="lcd_8c_1aca04f0c025afbc86a0fedc553f3a8ba4" compoundref="lcd_8c" startline="88" endline="103">LcdDisplayControl</referencedby>
        <referencedby refid="lcd_8c_1adbaeb94dbb0cd5ee4efa5a4a6a06f0c2" compoundref="lcd_8c" startline="73" endline="86">LcdEntryModeSet</referencedby>
        <referencedby refid="lcd_8c_1a9b451fe57dbdfef32faf1d96b9d7dce4" compoundref="lcd_8c" startline="111" endline="127">LcdFunctionSet</referencedby>
        <referencedby refid="lcd_8c_1a37450f91c7ae032252ea94d7c92efde2" compoundref="lcd_8c" startline="230" endline="243">LcdPrintChar</referencedby>
        <referencedby refid="lcd_8c_1aad68360b11370fa86fcd068004ef903f" compoundref="lcd_8c" startline="105" endline="109">LcdReturnHome</referencedby>
        <referencedby refid="lcd_8c_1a588b278d12ac539ff4f7787f03176dcb" compoundref="lcd_8c" startline="184" endline="190">LcdSetDdram</referencedby>
      </memberdef>
      <memberdef kind="function" id="lcd_8h_1abcfdb05f65f66ac2f004c865d8d34933" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void LcdClearDisplay</definition>
        <argsstring>()</argsstring>
        <name>LcdClearDisplay</name>
        <briefdescription>
<para>Clears the display. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/lcd.h" line="55" column="6" bodyfile="src/lcd.c" bodystart="44" bodyend="53" declfile="src/lcd.h" declline="55" declcolumn="6"/>
        <references refid="lcd_8c_1a5c92777341dd0851fe17e1bd05b885dd" compoundref="lcd_8c" startline="25">currentCol</references>
        <references refid="lcd_8c_1a789bfe83cfe007cc723e4fd58bb6b112" compoundref="lcd_8c" startline="24">currentRow</references>
        <references refid="clock_8c_1a2e760c634cc89519ad0956fc258eab46" compoundref="clock_8c" startline="59" endline="64">DelayMilli</references>
        <references refid="lcd_8c_1a40d081728cfd391fce0ec51b3c055169" compoundref="lcd_8c" startline="39" endline="42">LcdSendByte</references>
        <references refid="lcd_8c_1a20f0fe593368605d1bd6a28ad1a0a43f" compoundref="lcd_8c" startline="27" endline="29">LcdSetRs</references>
        <references refid="helpers_8h_1ab811d8c6ff3a505312d3276590444289" compoundref="helpers_8h" startline="7">LOW</references>
        <referencedby refid="test_8c_1a600f033d6f6a144fbd69976eab19e3ee" compoundref="test_8c" startline="9" endline="12">AfterEach</referencedby>
        <referencedby refid="lcd_8c_1a61b541c799955fc6b4e6cf28628de9a1" compoundref="lcd_8c" startline="129" endline="182">LcdInit</referencedby>
        <referencedby refid="logic_8c_1ae7c44d3fc64010d1e217bea610c8536c" compoundref="logic_8c" startline="288" endline="292">RefreshDisplay</referencedby>
        <referencedby refid="logic_8c_1aee8c17e4c2f0d1376f21780a1199b97c" compoundref="logic_8c" startline="226" endline="247">RunChangePassword</referencedby>
        <referencedby refid="logic_8c_1a15058a20857a8a4d38fa4ab72109a9e2" compoundref="logic_8c" startline="198" endline="224">RunLogin</referencedby>
        <referencedby refid="logic_8c_1a93047c21ec383e462990d923ed48795e" compoundref="logic_8c" startline="151" endline="196">RunLoginAnimation</referencedby>
        <referencedby refid="logic_8c_1a41a8f29e3704245cd53e2e11e03ec5f7" compoundref="logic_8c" startline="374" endline="441">RunMain</referencedby>
        <referencedby refid="test_8c_1a8ff2f0e3039fa4096f5c57d610c9281d" compoundref="test_8c" startline="59" endline="67">TestKeypadLcd</referencedby>
        <referencedby refid="test_8c_1ac8b99cb76697b9b78d1b364cf118342a" compoundref="test_8c" startline="14" endline="19">TestLcdClear</referencedby>
        <referencedby refid="test_8c_1a6af1303d2e04cb5837731ad113c413bc" compoundref="test_8c" startline="32" endline="48">TestLcdMultiLine</referencedby>
      </memberdef>
      <memberdef kind="function" id="lcd_8h_1a27164e4aa24d46318deab3dd42658978" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void LcdCursorShift</definition>
        <argsstring>(byte sc, byte rl)</argsstring>
        <name>LcdCursorShift</name>
        <param>
          <type><ref refid="helpers_8h_1a0c8186d9b9b7880309c27230bbb5e69d" kindref="member">byte</ref></type>
          <declname>sc</declname>
        </param>
        <param>
          <type><ref refid="helpers_8h_1a0c8186d9b9b7880309c27230bbb5e69d" kindref="member">byte</ref></type>
          <declname>rl</declname>
        </param>
        <briefdescription>
<para>Sets the LCD cursor position. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>sc</parametername>
</parameternamelist>
<parameterdescription>
<para>Display shift sc = 1, Cursor move sc = 0 </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>rl</parametername>
</parameternamelist>
<parameterdescription>
<para>Right shift rl = 1, Left shift rl = 0 </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/lcd.h" line="63" column="6" bodyfile="src/lcd.c" bodystart="56" bodyend="71" declfile="src/lcd.h" declline="63" declcolumn="6"/>
        <references refid="clock_8c_1a44cfb49005f69fe95c0ce5f30b9a660e" compoundref="clock_8c" startline="52" endline="57">DelayMicro</references>
        <references refid="helpers_8h_1a5bb885982ff66a2e0a0a45a8ee9c35e2" compoundref="helpers_8h" startline="6">HIGH</references>
        <references refid="lcd_8c_1a40d081728cfd391fce0ec51b3c055169" compoundref="lcd_8c" startline="39" endline="42">LcdSendByte</references>
        <references refid="lcd_8c_1a20f0fe593368605d1bd6a28ad1a0a43f" compoundref="lcd_8c" startline="27" endline="29">LcdSetRs</references>
      </memberdef>
      <memberdef kind="function" id="lcd_8h_1adbaeb94dbb0cd5ee4efa5a4a6a06f0c2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void LcdEntryModeSet</definition>
        <argsstring>(byte id, byte s)</argsstring>
        <name>LcdEntryModeSet</name>
        <param>
          <type><ref refid="helpers_8h_1a0c8186d9b9b7880309c27230bbb5e69d" kindref="member">byte</ref></type>
          <declname>id</declname>
        </param>
        <param>
          <type><ref refid="helpers_8h_1a0c8186d9b9b7880309c27230bbb5e69d" kindref="member">byte</ref></type>
          <declname>s</declname>
        </param>
        <briefdescription>
<para>Sets the entry mode of the LCD. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>id</parametername>
</parameternamelist>
<parameterdescription>
<para>I / D = 1: Increment, I / D = 0: Decrement. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>s</parametername>
</parameternamelist>
<parameterdescription>
<para>S = 1: The display shift, S = 0: The display does not shift. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/lcd.h" line="71" column="6" bodyfile="src/lcd.c" bodystart="73" bodyend="86" declfile="src/lcd.h" declline="71" declcolumn="6"/>
        <references refid="clock_8c_1a44cfb49005f69fe95c0ce5f30b9a660e" compoundref="clock_8c" startline="52" endline="57">DelayMicro</references>
        <references refid="lcd_8c_1a40d081728cfd391fce0ec51b3c055169" compoundref="lcd_8c" startline="39" endline="42">LcdSendByte</references>
        <references refid="lcd_8c_1a20f0fe593368605d1bd6a28ad1a0a43f" compoundref="lcd_8c" startline="27" endline="29">LcdSetRs</references>
        <references refid="helpers_8h_1ab811d8c6ff3a505312d3276590444289" compoundref="helpers_8h" startline="7">LOW</references>
        <referencedby refid="lcd_8c_1a61b541c799955fc6b4e6cf28628de9a1" compoundref="lcd_8c" startline="129" endline="182">LcdInit</referencedby>
      </memberdef>
      <memberdef kind="function" id="lcd_8h_1aca04f0c025afbc86a0fedc553f3a8ba4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void LcdDisplayControl</definition>
        <argsstring>(byte d, byte c, byte b)</argsstring>
        <name>LcdDisplayControl</name>
        <param>
          <type><ref refid="helpers_8h_1a0c8186d9b9b7880309c27230bbb5e69d" kindref="member">byte</ref></type>
          <declname>d</declname>
        </param>
        <param>
          <type><ref refid="helpers_8h_1a0c8186d9b9b7880309c27230bbb5e69d" kindref="member">byte</ref></type>
          <declname>c</declname>
        </param>
        <param>
          <type><ref refid="helpers_8h_1a0c8186d9b9b7880309c27230bbb5e69d" kindref="member">byte</ref></type>
          <declname>b</declname>
        </param>
        <briefdescription>
<para>Controls the display, cursor, and blinking. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>d</parametername>
</parameternamelist>
<parameterdescription>
<para>D = 1: Display on, D = 0: Display off </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>c</parametername>
</parameternamelist>
<parameterdescription>
<para>C = 1: Cursor on, C = 0: Cursor off </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>b</parametername>
</parameternamelist>
<parameterdescription>
<para>B = 1: Blinks on, B= 0: Blinks off </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/lcd.h" line="80" column="6" bodyfile="src/lcd.c" bodystart="88" bodyend="103" declfile="src/lcd.h" declline="80" declcolumn="6"/>
        <references refid="clock_8c_1a44cfb49005f69fe95c0ce5f30b9a660e" compoundref="clock_8c" startline="52" endline="57">DelayMicro</references>
        <references refid="lcd_8c_1a40d081728cfd391fce0ec51b3c055169" compoundref="lcd_8c" startline="39" endline="42">LcdSendByte</references>
        <references refid="lcd_8c_1a20f0fe593368605d1bd6a28ad1a0a43f" compoundref="lcd_8c" startline="27" endline="29">LcdSetRs</references>
        <references refid="helpers_8h_1ab811d8c6ff3a505312d3276590444289" compoundref="helpers_8h" startline="7">LOW</references>
        <referencedby refid="lcd_8c_1a61b541c799955fc6b4e6cf28628de9a1" compoundref="lcd_8c" startline="129" endline="182">LcdInit</referencedby>
      </memberdef>
      <memberdef kind="function" id="lcd_8h_1aad68360b11370fa86fcd068004ef903f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void LcdReturnHome</definition>
        <argsstring>()</argsstring>
        <name>LcdReturnHome</name>
        <briefdescription>
<para>Resets cursor to original position. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/lcd.h" line="86" column="6" bodyfile="src/lcd.c" bodystart="105" bodyend="109" declfile="src/lcd.h" declline="86" declcolumn="6"/>
        <references refid="clock_8c_1a44cfb49005f69fe95c0ce5f30b9a660e" compoundref="clock_8c" startline="52" endline="57">DelayMicro</references>
        <references refid="lcd_8c_1a40d081728cfd391fce0ec51b3c055169" compoundref="lcd_8c" startline="39" endline="42">LcdSendByte</references>
        <references refid="lcd_8c_1a20f0fe593368605d1bd6a28ad1a0a43f" compoundref="lcd_8c" startline="27" endline="29">LcdSetRs</references>
        <references refid="helpers_8h_1ab811d8c6ff3a505312d3276590444289" compoundref="helpers_8h" startline="7">LOW</references>
      </memberdef>
      <memberdef kind="function" id="lcd_8h_1a9b451fe57dbdfef32faf1d96b9d7dce4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void LcdFunctionSet</definition>
        <argsstring>(byte dl, byte n, byte f)</argsstring>
        <name>LcdFunctionSet</name>
        <param>
          <type><ref refid="helpers_8h_1a0c8186d9b9b7880309c27230bbb5e69d" kindref="member">byte</ref></type>
          <declname>dl</declname>
        </param>
        <param>
          <type><ref refid="helpers_8h_1a0c8186d9b9b7880309c27230bbb5e69d" kindref="member">byte</ref></type>
          <declname>n</declname>
        </param>
        <param>
          <type><ref refid="helpers_8h_1a0c8186d9b9b7880309c27230bbb5e69d" kindref="member">byte</ref></type>
          <declname>f</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>dl</parametername>
</parameternamelist>
<parameterdescription>
<para>DL = 1: 8-bit length (DB7 - 0). DL = 0: 4-bit length (DB7 - 4). </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>n</parametername>
</parameternamelist>
<parameterdescription>
<para>N = 0: One-line display. N = 1: Two-line display </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>f</parametername>
</parameternamelist>
<parameterdescription>
<para>F = 0: 5 x 8 dots character font. F = 1: 5 x 10 dots character font. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/lcd.h" line="95" column="6" bodyfile="src/lcd.c" bodystart="111" bodyend="127" declfile="src/lcd.h" declline="95" declcolumn="6"/>
        <references refid="clock_8c_1a44cfb49005f69fe95c0ce5f30b9a660e" compoundref="clock_8c" startline="52" endline="57">DelayMicro</references>
        <references refid="lcd_8c_1a40d081728cfd391fce0ec51b3c055169" compoundref="lcd_8c" startline="39" endline="42">LcdSendByte</references>
        <references refid="lcd_8c_1a20f0fe593368605d1bd6a28ad1a0a43f" compoundref="lcd_8c" startline="27" endline="29">LcdSetRs</references>
        <references refid="helpers_8h_1ab811d8c6ff3a505312d3276590444289" compoundref="helpers_8h" startline="7">LOW</references>
        <referencedby refid="lcd_8c_1a61b541c799955fc6b4e6cf28628de9a1" compoundref="lcd_8c" startline="129" endline="182">LcdInit</referencedby>
      </memberdef>
      <memberdef kind="function" id="lcd_8h_1a61b541c799955fc6b4e6cf28628de9a1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void LcdInit</definition>
        <argsstring>()</argsstring>
        <name>LcdInit</name>
        <briefdescription>
<para>Initializes the LCD. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/lcd.h" line="101" column="6" bodyfile="src/lcd.c" bodystart="129" bodyend="182" declfile="src/lcd.h" declline="101" declcolumn="6"/>
        <references refid="clock_8c_1a44cfb49005f69fe95c0ce5f30b9a660e" compoundref="clock_8c" startline="52" endline="57">DelayMicro</references>
        <references refid="clock_8c_1a2e760c634cc89519ad0956fc258eab46" compoundref="clock_8c" startline="59" endline="64">DelayMilli</references>
        <references refid="lcd_8c_1abcfdb05f65f66ac2f004c865d8d34933" compoundref="lcd_8c" startline="44" endline="53">LcdClearDisplay</references>
        <references refid="lcd_8c_1aca04f0c025afbc86a0fedc553f3a8ba4" compoundref="lcd_8c" startline="88" endline="103">LcdDisplayControl</references>
        <references refid="lcd_8c_1adbaeb94dbb0cd5ee4efa5a4a6a06f0c2" compoundref="lcd_8c" startline="73" endline="86">LcdEntryModeSet</references>
        <references refid="lcd_8c_1a9b451fe57dbdfef32faf1d96b9d7dce4" compoundref="lcd_8c" startline="111" endline="127">LcdFunctionSet</references>
        <references refid="lcd_8c_1a93ae42864f782da4a4e0515d7faa449f" compoundref="lcd_8c" startline="31" endline="37">LcdSendNibble</references>
        <references refid="lcd_8c_1a20f0fe593368605d1bd6a28ad1a0a43f" compoundref="lcd_8c" startline="27" endline="29">LcdSetRs</references>
        <references refid="helpers_8h_1ab811d8c6ff3a505312d3276590444289" compoundref="helpers_8h" startline="7">LOW</references>
        <references refid="ports_8c_1a03c4992f00f155be0425086ad67578f2" compoundref="ports_8c" startline="47" endline="58">PortAInit</references>
        <references refid="ports_8c_1aaebad24f567e2e1f53e6252fd325371a" compoundref="ports_8c" startline="32" endline="45">PortBInit</references>
        <referencedby refid="logic_8c_1a8468ead6b76c5ff5eb578a79fd591aa8" compoundref="logic_8c" startline="74" endline="90">InitAll</referencedby>
      </memberdef>
      <memberdef kind="function" id="lcd_8h_1a588b278d12ac539ff4f7787f03176dcb" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void LcdSetDdram</definition>
        <argsstring>(byte addr)</argsstring>
        <name>LcdSetDdram</name>
        <param>
          <type><ref refid="helpers_8h_1a0c8186d9b9b7880309c27230bbb5e69d" kindref="member">byte</ref></type>
          <declname>addr</declname>
        </param>
        <briefdescription>
<para>Sets the DDRAM address (cursor position) </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>addr</parametername>
</parameternamelist>
<parameterdescription>
<para>7-bit address to be set </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/lcd.h" line="108" column="6" bodyfile="src/lcd.c" bodystart="184" bodyend="190" declfile="src/lcd.h" declline="108" declcolumn="6"/>
        <references refid="clock_8c_1a44cfb49005f69fe95c0ce5f30b9a660e" compoundref="clock_8c" startline="52" endline="57">DelayMicro</references>
        <references refid="lcd_8c_1a40d081728cfd391fce0ec51b3c055169" compoundref="lcd_8c" startline="39" endline="42">LcdSendByte</references>
        <references refid="lcd_8c_1a20f0fe593368605d1bd6a28ad1a0a43f" compoundref="lcd_8c" startline="27" endline="29">LcdSetRs</references>
        <references refid="helpers_8h_1ab811d8c6ff3a505312d3276590444289" compoundref="helpers_8h" startline="7">LOW</references>
        <referencedby refid="lcd_8c_1ab336d65567699c41886446b710e9d859" compoundref="lcd_8c" startline="192" endline="209">LcdSetCursor</referencedby>
      </memberdef>
      <memberdef kind="function" id="lcd_8h_1ab336d65567699c41886446b710e9d859" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void LcdSetCursor</definition>
        <argsstring>(byte row, byte col, bool cursorTrack)</argsstring>
        <name>LcdSetCursor</name>
        <param>
          <type><ref refid="helpers_8h_1a0c8186d9b9b7880309c27230bbb5e69d" kindref="member">byte</ref></type>
          <declname>row</declname>
        </param>
        <param>
          <type><ref refid="helpers_8h_1a0c8186d9b9b7880309c27230bbb5e69d" kindref="member">byte</ref></type>
          <declname>col</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>cursorTrack</declname>
        </param>
        <briefdescription>
<para>Sets the cursor position. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>row</parametername>
</parameternamelist>
<parameterdescription>
<para>row to be set </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>col</parametername>
</parameternamelist>
<parameterdescription>
<para>column to be set </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>cursorTrack</parametername>
</parameternamelist>
<parameterdescription>
<para>1 -&gt; Track cursor, 0 -&gt; don&apos;t Track cursor </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/lcd.h" line="117" column="6" bodyfile="src/lcd.c" bodystart="192" bodyend="209" declfile="src/lcd.h" declline="117" declcolumn="6"/>
        <references refid="lcd_8c_1a5c92777341dd0851fe17e1bd05b885dd" compoundref="lcd_8c" startline="25">currentCol</references>
        <references refid="lcd_8c_1a789bfe83cfe007cc723e4fd58bb6b112" compoundref="lcd_8c" startline="24">currentRow</references>
        <references refid="lcd_8c_1a588b278d12ac539ff4f7787f03176dcb" compoundref="lcd_8c" startline="184" endline="190">LcdSetDdram</references>
        <referencedby refid="logic_8c_1af6da8071dabf2ebd36d99de9f70e5dce" compoundref="logic_8c" startline="306" endline="318">ClearAllInput</referencedby>
        <referencedby refid="lcd_8c_1a08b51cf41e7c0183ca5b469dd853a666" compoundref="lcd_8c" startline="267" endline="272">LcdClearLastChar</referencedby>
        <referencedby refid="lcd_8c_1aa0130791fdcab8f2263be12fb00a031d" compoundref="lcd_8c" startline="257" endline="263">LcdClearRow</referencedby>
        <referencedby refid="lcd_8c_1a60854aad97ec6bbdb5a001eea7c6b3b8" compoundref="lcd_8c" startline="211" endline="220">LcdIncrementCursorRow</referencedby>
        <referencedby refid="lcd_8c_1a85868d62c8073baad86aa03e88ac1001" compoundref="lcd_8c" startline="245" endline="249">LcdPrintCharAt</referencedby>
        <referencedby refid="logic_8c_1abe7dcc508ace168bbcddb296203a1886" compoundref="logic_8c" startline="337" endline="351">PrintData</referencedby>
        <referencedby refid="logic_8c_1a93047c21ec383e462990d923ed48795e" compoundref="logic_8c" startline="151" endline="196">RunLoginAnimation</referencedby>
        <referencedby refid="test_8c_1a02e71048dc3a569b41b257dec3b00cf0" compoundref="test_8c" startline="21" endline="30">TestLcdCursor</referencedby>
        <referencedby refid="logic_8c_1a5a3be8027400af0c949033c8c86a4360" compoundref="logic_8c" startline="253" endline="286">UpdateRows</referencedby>
      </memberdef>
      <memberdef kind="function" id="lcd_8h_1a37450f91c7ae032252ea94d7c92efde2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void LcdPrintChar</definition>
        <argsstring>(char ch, bool cursorTrack)</argsstring>
        <name>LcdPrintChar</name>
        <param>
          <type>char</type>
          <declname>ch</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>cursorTrack</declname>
        </param>
        <briefdescription>
<para>Prints a character to the LCD. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>ch</parametername>
</parameternamelist>
<parameterdescription>
<para>character to be printed </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>cursorTrack</parametername>
</parameternamelist>
<parameterdescription>
<para>1 -&gt; Track cursor, 0 -&gt; don&apos;t Track cursor </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/lcd.h" line="125" column="6" bodyfile="src/lcd.c" bodystart="230" bodyend="243" declfile="src/lcd.h" declline="125" declcolumn="6"/>
        <references refid="clock_8c_1a44cfb49005f69fe95c0ce5f30b9a660e" compoundref="clock_8c" startline="52" endline="57">DelayMicro</references>
        <references refid="helpers_8h_1a5bb885982ff66a2e0a0a45a8ee9c35e2" compoundref="helpers_8h" startline="6">HIGH</references>
        <references refid="lcd_8c_1a16d925f7b9140ef9283fcae38a45b7f4" compoundref="lcd_8c" startline="222" endline="228">LcdIncrementCursorCol</references>
        <references refid="lcd_8c_1a60854aad97ec6bbdb5a001eea7c6b3b8" compoundref="lcd_8c" startline="211" endline="220">LcdIncrementCursorRow</references>
        <references refid="lcd_8c_1a40d081728cfd391fce0ec51b3c055169" compoundref="lcd_8c" startline="39" endline="42">LcdSendByte</references>
        <references refid="lcd_8c_1a20f0fe593368605d1bd6a28ad1a0a43f" compoundref="lcd_8c" startline="27" endline="29">LcdSetRs</references>
        <referencedby refid="lcd_8c_1aa0130791fdcab8f2263be12fb00a031d" compoundref="lcd_8c" startline="257" endline="263">LcdClearRow</referencedby>
        <referencedby refid="lcd_8c_1a85868d62c8073baad86aa03e88ac1001" compoundref="lcd_8c" startline="245" endline="249">LcdPrintCharAt</referencedby>
        <referencedby refid="lcd_8c_1afb88b9aba1a1db09a517c5a1ffc07299" compoundref="lcd_8c" startline="251" endline="255">LcdPrintString</referencedby>
        <referencedby refid="logic_8c_1abe7dcc508ace168bbcddb296203a1886" compoundref="logic_8c" startline="337" endline="351">PrintData</referencedby>
        <referencedby refid="logic_8c_1a93047c21ec383e462990d923ed48795e" compoundref="logic_8c" startline="151" endline="196">RunLoginAnimation</referencedby>
        <referencedby refid="logic_8c_1ada037e06af8abdcc0382445b22466477" compoundref="logic_8c" startline="94" endline="121">RunUserInput</referencedby>
        <referencedby refid="test_8c_1a8ff2f0e3039fa4096f5c57d610c9281d" compoundref="test_8c" startline="59" endline="67">TestKeypadLcd</referencedby>
        <referencedby refid="test_8c_1ac8b99cb76697b9b78d1b364cf118342a" compoundref="test_8c" startline="14" endline="19">TestLcdClear</referencedby>
      </memberdef>
      <memberdef kind="function" id="lcd_8h_1afb88b9aba1a1db09a517c5a1ffc07299" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void LcdPrintString</definition>
        <argsstring>(char str[], bool cursorTrack)</argsstring>
        <name>LcdPrintString</name>
        <param>
          <type>char</type>
          <declname>str</declname>
          <array>[]</array>
        </param>
        <param>
          <type>bool</type>
          <declname>cursorTrack</declname>
        </param>
        <briefdescription>
<para>Prints a string to the LCD. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>str</parametername>
</parameternamelist>
<parameterdescription>
<para>string to be printed </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/lcd.h" line="132" column="6" bodyfile="src/lcd.c" bodystart="251" bodyend="255" declfile="src/lcd.h" declline="132" declcolumn="6"/>
        <references refid="lcd_8c_1a37450f91c7ae032252ea94d7c92efde2" compoundref="lcd_8c" startline="230" endline="243">LcdPrintChar</references>
        <referencedby refid="logic_8c_1a3b107a1c86e52fc6f6312e077c76ac31" compoundref="logic_8c" startline="332" endline="335">DisplayMessage</referencedby>
        <referencedby refid="logic_8c_1a5f7f7893415d86a5a8348472dbdd0541" compoundref="logic_8c" startline="123" endline="149">RunCalculator</referencedby>
        <referencedby refid="logic_8c_1aee8c17e4c2f0d1376f21780a1199b97c" compoundref="logic_8c" startline="226" endline="247">RunChangePassword</referencedby>
        <referencedby refid="logic_8c_1a15058a20857a8a4d38fa4ab72109a9e2" compoundref="logic_8c" startline="198" endline="224">RunLogin</referencedby>
        <referencedby refid="logic_8c_1a93047c21ec383e462990d923ed48795e" compoundref="logic_8c" startline="151" endline="196">RunLoginAnimation</referencedby>
        <referencedby refid="test_8c_1ac96c14effaeda91dcf6f15a034a428e9" compoundref="test_8c" startline="69" endline="81">TestFlash</referencedby>
        <referencedby refid="test_8c_1a8ff2f0e3039fa4096f5c57d610c9281d" compoundref="test_8c" startline="59" endline="67">TestKeypadLcd</referencedby>
        <referencedby refid="test_8c_1a02e71048dc3a569b41b257dec3b00cf0" compoundref="test_8c" startline="21" endline="30">TestLcdCursor</referencedby>
        <referencedby refid="test_8c_1a6af1303d2e04cb5837731ad113c413bc" compoundref="test_8c" startline="32" endline="48">TestLcdMultiLine</referencedby>
        <referencedby refid="logic_8c_1a5a3be8027400af0c949033c8c86a4360" compoundref="logic_8c" startline="253" endline="286">UpdateRows</referencedby>
      </memberdef>
      <memberdef kind="function" id="lcd_8h_1a85868d62c8073baad86aa03e88ac1001" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void LcdPrintCharAt</definition>
        <argsstring>(char ch, byte row, byte col)</argsstring>
        <name>LcdPrintCharAt</name>
        <param>
          <type>char</type>
          <declname>ch</declname>
        </param>
        <param>
          <type><ref refid="helpers_8h_1a0c8186d9b9b7880309c27230bbb5e69d" kindref="member">byte</ref></type>
          <declname>row</declname>
        </param>
        <param>
          <type><ref refid="helpers_8h_1a0c8186d9b9b7880309c27230bbb5e69d" kindref="member">byte</ref></type>
          <declname>col</declname>
        </param>
        <briefdescription>
<para>Prints a character to the LCD at a given position. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>ch</parametername>
</parameternamelist>
<parameterdescription>
<para>character to be printed </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>row</parametername>
</parameternamelist>
<parameterdescription>
<para>row to be printed at </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>col</parametername>
</parameternamelist>
<parameterdescription>
<para>column to be printed at </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/lcd.h" line="141" column="6" bodyfile="src/lcd.c" bodystart="245" bodyend="249" declfile="src/lcd.h" declline="141" declcolumn="6"/>
        <references refid="lcd_8c_1a5c92777341dd0851fe17e1bd05b885dd" compoundref="lcd_8c" startline="25">currentCol</references>
        <references refid="lcd_8c_1a789bfe83cfe007cc723e4fd58bb6b112" compoundref="lcd_8c" startline="24">currentRow</references>
        <references refid="lcd_8c_1a37450f91c7ae032252ea94d7c92efde2" compoundref="lcd_8c" startline="230" endline="243">LcdPrintChar</references>
        <references refid="lcd_8c_1ab336d65567699c41886446b710e9d859" compoundref="lcd_8c" startline="192" endline="209">LcdSetCursor</references>
        <referencedby refid="lcd_8c_1a08b51cf41e7c0183ca5b469dd853a666" compoundref="lcd_8c" startline="267" endline="272">LcdClearLastChar</referencedby>
        <referencedby refid="logic_8c_1ac4085c7ad6b8fe21141bebd8cfe7053a" compoundref="logic_8c" startline="249" endline="251">UpdateShift</referencedby>
      </memberdef>
      <memberdef kind="function" id="lcd_8h_1aa0130791fdcab8f2263be12fb00a031d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void LcdClearRow</definition>
        <argsstring>(byte row)</argsstring>
        <name>LcdClearRow</name>
        <param>
          <type><ref refid="helpers_8h_1a0c8186d9b9b7880309c27230bbb5e69d" kindref="member">byte</ref></type>
          <declname>row</declname>
        </param>
        <briefdescription>
<para>Clears a row. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>row</parametername>
</parameternamelist>
<parameterdescription>
<para></para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/lcd.h" line="148" column="6" bodyfile="src/lcd.c" bodystart="257" bodyend="263" declfile="src/lcd.h" declline="148" declcolumn="6"/>
        <references refid="lcd_8h_1a09aa49f7f7c7173b0ad1fbdefb0e2280" compoundref="lcd_8h" startline="17">LCD_N_COL</references>
        <references refid="lcd_8c_1a37450f91c7ae032252ea94d7c92efde2" compoundref="lcd_8c" startline="230" endline="243">LcdPrintChar</references>
        <references refid="lcd_8c_1ab336d65567699c41886446b710e9d859" compoundref="lcd_8c" startline="192" endline="209">LcdSetCursor</references>
        <referencedby refid="logic_8c_1af6da8071dabf2ebd36d99de9f70e5dce" compoundref="logic_8c" startline="306" endline="318">ClearAllInput</referencedby>
      </memberdef>
      <memberdef kind="function" id="lcd_8h_1a08b51cf41e7c0183ca5b469dd853a666" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void LcdClearLastChar</definition>
        <argsstring>(int rowLimit)</argsstring>
        <name>LcdClearLastChar</name>
        <param>
          <type>int</type>
          <declname>rowLimit</declname>
        </param>
        <briefdescription>
<para>Clears the last character of a row. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>rowLimit</parametername>
</parameternamelist>
<parameterdescription>
<para>wont go to that row when clearing the last character </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/lcd.h" line="155" column="6" bodyfile="src/lcd.c" bodystart="267" bodyend="272" declfile="src/lcd.h" declline="155" declcolumn="6"/>
        <references refid="lcd_8c_1a5c92777341dd0851fe17e1bd05b885dd" compoundref="lcd_8c" startline="25">currentCol</references>
        <references refid="lcd_8c_1a789bfe83cfe007cc723e4fd58bb6b112" compoundref="lcd_8c" startline="24">currentRow</references>
        <references refid="lcd_8h_1a09aa49f7f7c7173b0ad1fbdefb0e2280" compoundref="lcd_8h" startline="17">LCD_N_COL</references>
        <references refid="lcd_8c_1a85868d62c8073baad86aa03e88ac1001" compoundref="lcd_8c" startline="245" endline="249">LcdPrintCharAt</references>
        <references refid="lcd_8c_1ab336d65567699c41886446b710e9d859" compoundref="lcd_8c" startline="192" endline="209">LcdSetCursor</references>
        <referencedby refid="logic_8c_1a5d70b1e35da3781dc0e409643147cdd8" compoundref="logic_8c" startline="320" endline="330">ClearLastInput</referencedby>
      </memberdef>
    </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="preprocessor">#ifndef<sp/>LCD_H<sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>If<sp/>not<sp/>defined</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2" refid="lcd_8h_1a137b94e8638bc4b6a0740668aefe5a58" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>LCD_H<sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Define<sp/>it</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="helpers_8h" kindref="compound">helpers.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;stdbool.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="comment">//<sp/>DB4<sp/>-&gt;<sp/>PB0</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="comment">//<sp/>DB5<sp/>-&gt;<sp/>PB1</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="comment">//<sp/>DB6<sp/>-&gt;<sp/>PB2</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="comment">//<sp/>DB7<sp/>-&gt;<sp/>PB3</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11" refid="lcd_8h_1a0526693165bd140bdaaa0f27b240db1c" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>LCD_DB<sp/>(*((volatile<sp/>unsigned<sp/>long<sp/>*)0x4000503C))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="comment">//<sp/>EN<sp/>-&gt;<sp/>PA2</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13" refid="lcd_8h_1a1640ffbc0d8ec0f7edb04a2b93918072" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>LCD_EN<sp/>(*((volatile<sp/>unsigned<sp/>long<sp/>*)0x40004010))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="comment">//<sp/>RS<sp/>-&gt;<sp/>PA3</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15" refid="lcd_8h_1a4781e073871c6f27f89b9463ad3a4ed1" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>LCD_RS<sp/>(*((volatile<sp/>unsigned<sp/>long<sp/>*)0x40004020))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight></codeline>
<codeline lineno="17" refid="lcd_8h_1a09aa49f7f7c7173b0ad1fbdefb0e2280" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>LCD_N_COL<sp/>20</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="18" refid="lcd_8h_1aece2016b9a1e98b3b6543062a452c847" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>LCD_N_ROW<sp/>4</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight></codeline>
<codeline lineno="20" refid="lcd_8h_1ada878a8b4864a1658ee0f0acd5a89412" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>CHAR_P<sp/>0xFF</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="21" refid="lcd_8h_1a26ac0a0707d60b57ae6526fccbff614b" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>LCD_CHAR_S<sp/>0xFE</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="22" refid="lcd_8h_1ac9c7adc5ba35b5ea1d4163ee8bd1c22e" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>CHAR_LOCKED<sp/>0xBF</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="23" refid="lcd_8h_1ab7f0f8b1872a01b61e98e1982e59087b" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>CHAR_V_LINE<sp/>&apos;│&apos;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="24" refid="lcd_8h_1af9d800f23706399c30ccf6e023d36d57" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>CHAR_H_LINE<sp/>&apos;─&apos;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="25" refid="lcd_8h_1a50e47f12ad711cd93ebcb8ba6fa03e0c" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>CHAR_CROSS<sp/>&apos;┼&apos;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="lcd_8h_1a789bfe83cfe007cc723e4fd58bb6b112" kindref="member">currentRow</ref>;</highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="lcd_8h_1a5c92777341dd0851fe17e1bd05b885dd" kindref="member">currentCol</ref>;</highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="lcd_8h_1a20f0fe593368605d1bd6a28ad1a0a43f" kindref="member">LcdSetRs</ref>(</highlight><highlight class="keywordtype">byte</highlight><highlight class="normal"><sp/>rs);</highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight></codeline>
<codeline lineno="42"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="lcd_8h_1a93ae42864f782da4a4e0515d7faa449f" kindref="member">LcdSendNibble</ref>(</highlight><highlight class="keywordtype">byte</highlight><highlight class="normal"><sp/>nibble);</highlight></codeline>
<codeline lineno="43"><highlight class="normal"></highlight></codeline>
<codeline lineno="49"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="lcd_8h_1a40d081728cfd391fce0ec51b3c055169" kindref="member">LcdSendByte</ref>(</highlight><highlight class="keywordtype">byte</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">byte</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="50"><highlight class="normal"></highlight></codeline>
<codeline lineno="55"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="lcd_8h_1abcfdb05f65f66ac2f004c865d8d34933" kindref="member">LcdClearDisplay</ref>();</highlight></codeline>
<codeline lineno="56"><highlight class="normal"></highlight></codeline>
<codeline lineno="63"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="lcd_8h_1a27164e4aa24d46318deab3dd42658978" kindref="member">LcdCursorShift</ref>(</highlight><highlight class="keywordtype">byte</highlight><highlight class="normal"><sp/>sc,<sp/></highlight><highlight class="keywordtype">byte</highlight><highlight class="normal"><sp/>rl);</highlight></codeline>
<codeline lineno="64"><highlight class="normal"></highlight></codeline>
<codeline lineno="71"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="lcd_8h_1adbaeb94dbb0cd5ee4efa5a4a6a06f0c2" kindref="member">LcdEntryModeSet</ref>(</highlight><highlight class="keywordtype">byte</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">id</highlight><highlight class="normal">,<sp/></highlight><highlight class="keywordtype">byte</highlight><highlight class="normal"><sp/>s);</highlight></codeline>
<codeline lineno="72"><highlight class="normal"></highlight></codeline>
<codeline lineno="80"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="lcd_8h_1aca04f0c025afbc86a0fedc553f3a8ba4" kindref="member">LcdDisplayControl</ref>(</highlight><highlight class="keywordtype">byte</highlight><highlight class="normal"><sp/>d,<sp/></highlight><highlight class="keywordtype">byte</highlight><highlight class="normal"><sp/>c,<sp/></highlight><highlight class="keywordtype">byte</highlight><highlight class="normal"><sp/>b);</highlight></codeline>
<codeline lineno="81"><highlight class="normal"></highlight></codeline>
<codeline lineno="86"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="lcd_8h_1aad68360b11370fa86fcd068004ef903f" kindref="member">LcdReturnHome</ref>();</highlight></codeline>
<codeline lineno="87"><highlight class="normal"></highlight></codeline>
<codeline lineno="95"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="lcd_8h_1a9b451fe57dbdfef32faf1d96b9d7dce4" kindref="member">LcdFunctionSet</ref>(</highlight><highlight class="keywordtype">byte</highlight><highlight class="normal"><sp/>dl,<sp/></highlight><highlight class="keywordtype">byte</highlight><highlight class="normal"><sp/>n,<sp/></highlight><highlight class="keywordtype">byte</highlight><highlight class="normal"><sp/>f);</highlight></codeline>
<codeline lineno="96"><highlight class="normal"></highlight></codeline>
<codeline lineno="101"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="lcd_8h_1a61b541c799955fc6b4e6cf28628de9a1" kindref="member">LcdInit</ref>();</highlight></codeline>
<codeline lineno="102"><highlight class="normal"></highlight></codeline>
<codeline lineno="108"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="lcd_8h_1a588b278d12ac539ff4f7787f03176dcb" kindref="member">LcdSetDdram</ref>(</highlight><highlight class="keywordtype">byte</highlight><highlight class="normal"><sp/>addr);</highlight></codeline>
<codeline lineno="109"><highlight class="normal"></highlight></codeline>
<codeline lineno="117"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="lcd_8h_1ab336d65567699c41886446b710e9d859" kindref="member">LcdSetCursor</ref>(</highlight><highlight class="keywordtype">byte</highlight><highlight class="normal"><sp/>row,<sp/></highlight><highlight class="keywordtype">byte</highlight><highlight class="normal"><sp/>col,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>cursorTrack);</highlight></codeline>
<codeline lineno="118"><highlight class="normal"></highlight></codeline>
<codeline lineno="125"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="lcd_8h_1a37450f91c7ae032252ea94d7c92efde2" kindref="member">LcdPrintChar</ref>(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>ch,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>cursorTrack);</highlight></codeline>
<codeline lineno="126"><highlight class="normal"></highlight></codeline>
<codeline lineno="132"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="lcd_8h_1afb88b9aba1a1db09a517c5a1ffc07299" kindref="member">LcdPrintString</ref>(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>str[],<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>cursorTrack);</highlight></codeline>
<codeline lineno="133"><highlight class="normal"></highlight></codeline>
<codeline lineno="141"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="lcd_8h_1a85868d62c8073baad86aa03e88ac1001" kindref="member">LcdPrintCharAt</ref>(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>ch,<sp/></highlight><highlight class="keywordtype">byte</highlight><highlight class="normal"><sp/>row,<sp/></highlight><highlight class="keywordtype">byte</highlight><highlight class="normal"><sp/>col);</highlight></codeline>
<codeline lineno="142"><highlight class="normal"></highlight></codeline>
<codeline lineno="148"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="lcd_8h_1aa0130791fdcab8f2263be12fb00a031d" kindref="member">LcdClearRow</ref>(</highlight><highlight class="keywordtype">byte</highlight><highlight class="normal"><sp/>row);</highlight></codeline>
<codeline lineno="149"><highlight class="normal"></highlight></codeline>
<codeline lineno="155"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="lcd_8h_1a08b51cf41e7c0183ca5b469dd853a666" kindref="member">LcdClearLastChar</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>rowLimit);</highlight></codeline>
<codeline lineno="156"><highlight class="normal"></highlight></codeline>
<codeline lineno="157"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
    </programlisting>
    <location file="src/lcd.h"/>
  </compounddef>
</doxygen>
