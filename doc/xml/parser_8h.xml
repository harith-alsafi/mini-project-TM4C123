<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.8" xml:lang="en-US">
  <compounddef id="parser_8h" kind="file" language="C++">
    <compoundname>parser.h</compoundname>
    <includes refid="keypad_8h" local="yes">keypad.h</includes>
    <includes local="no">stdbool.h</includes>
    <includes refid="helpers_8h" local="yes">helpers.h</includes>
    <includedby refid="parser_8c" local="yes">src/parser.c</includedby>
    <incdepgraph>
      <node id="4">
        <label>helpers.h</label>
        <link refid="helpers_8h"/>
        <childnode refid="5" relation="include">
        </childnode>
      </node>
      <node id="2">
        <label>keypad.h</label>
        <link refid="keypad_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
      </node>
      <node id="1">
        <label>src/parser.h</label>
        <link refid="parser_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
      </node>
      <node id="3">
        <label>stdbool.h</label>
      </node>
      <node id="5">
        <label>stdlib.h</label>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="2">
        <label>src/parser.c</label>
        <link refid="parser_8c"/>
      </node>
      <node id="1">
        <label>src/parser.h</label>
        <link refid="parser_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
    </invincdepgraph>
    <innerclass refid="struct_token" prot="public">Token</innerclass>
    <innerclass refid="struct_parser_info" prot="public">ParserInfo</innerclass>
    <sectiondef kind="define">
      <memberdef kind="define" id="parser_8h_1a5eacb3f8d827ae299ee42b9e0e99fa13" prot="public" static="no">
        <name>EXPRESSION_PARSER_H</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/parser.h" line="2" column="9" bodyfile="src/parser.h" bodystart="2" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="enum">
      <memberdef kind="enum" id="parser_8h_1a0392053e13b5f2cbbfdbdd316d86e09f" prot="public" static="no" strong="no">
        <type></type>
        <name>ParseError</name>
        <enumvalue id="parser_8h_1a0392053e13b5f2cbbfdbdd316d86e09fa5d594af14177857fc7661d03eda0baea" prot="public">
          <name>SYNTAX_ERROR</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="parser_8h_1a0392053e13b5f2cbbfdbdd316d86e09fabf350750d0d4fabd8954c0f1e9bbae94" prot="public">
          <name>NO_ERROR</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="parser_8h_1a0392053e13b5f2cbbfdbdd316d86e09fae340a9bc4389c62faef96782ebbdfc43" prot="public">
          <name>INVALID_MATH_EXPRESSION</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="parser_8h_1a0392053e13b5f2cbbfdbdd316d86e09fa67f5d4d700401c98e49d7a68c35c9272" prot="public">
          <name>MULTIPLE_DECIMAL_POINT</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="parser_8h_1a0392053e13b5f2cbbfdbdd316d86e09fa1744590ec2b010dcd5774db413f87f56" prot="public">
          <name>MISSING_NUMBER</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="parser_8h_1a0392053e13b5f2cbbfdbdd316d86e09fa2759d6055f211c659299d46ab05a7618" prot="public">
          <name>MISSING_BRACKET</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/parser.h" line="7" column="1" bodyfile="src/parser.h" bodystart="7" bodyend="14"/>
      </memberdef>
      <memberdef kind="enum" id="parser_8h_1aa520fbf142ba1e7e659590c07da31921" prot="public" static="no" strong="no">
        <type></type>
        <name>TokenType</name>
        <enumvalue id="parser_8h_1aa520fbf142ba1e7e659590c07da31921a12a90dfe20486bbe3e075afcd19ef2d0" prot="public">
          <name>NUMBER</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="parser_8h_1aa520fbf142ba1e7e659590c07da31921a6411d9d6073252e4d316493506bbb979" prot="public">
          <name>OPERATOR</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="parser_8h_1aa520fbf142ba1e7e659590c07da31921af08a543d5a1549321682e12569d0fbd6" prot="public">
          <name>DECIMAL</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="parser_8h_1aa520fbf142ba1e7e659590c07da31921a34f27712bd95a0c2c963cd56365ad7a2" prot="public">
          <name>EOL</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="parser_8h_1aa520fbf142ba1e7e659590c07da31921a834f3e0777521aa22ca5b50e816970d9" prot="public">
          <name>PREVIOUS_ANSWER</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/parser.h" line="16" column="1" bodyfile="src/parser.h" bodystart="16" bodyend="22"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="func">
      <memberdef kind="function" id="parser_8h_1a4f9090efc910ceda64fee9b0bc305428" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>DEFINE_LIST_PROTOTYPE</definition>
        <argsstring>(Token)</argsstring>
        <name>DEFINE_LIST_PROTOTYPE</name>
        <param>
          <type><ref refid="struct_token" kindref="compound">Token</ref></type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/parser.h" line="35" column="1" declfile="src/parser.h" declline="35" declcolumn="1"/>
      </memberdef>
      <memberdef kind="function" id="parser_8h_1aa19b910e23df23ebe5f189f93c97afdd" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void ParserPushToken</definition>
        <argsstring>(Token token)</argsstring>
        <name>ParserPushToken</name>
        <param>
          <type><ref refid="struct_token" kindref="compound">Token</ref></type>
          <declname>token</declname>
        </param>
        <briefdescription>
<para>Pushes new token to the parser can be used after calling. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="see"><para>ParserInit and </para>
</simplesect>
<simplesect kind="see"><para>ParserInitWith</para>
</simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>token</parametername>
</parameternamelist>
<parameterdescription>
<para></para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/parser.h" line="42" column="6" bodyfile="src/parser.c" bodystart="73" bodyend="78" declfile="src/parser.h" declline="42" declcolumn="6"/>
        <references refid="parser_8c_1a2875192a853252042ae25ea84bd66155" compoundref="parser_8c" startline="53">tokens</references>
      </memberdef>
      <memberdef kind="function" id="parser_8h_1ae23a18474f4d84e20fdcc9869d67b363" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void ParserInit</definition>
        <argsstring>()</argsstring>
        <name>ParserInit</name>
        <briefdescription>
<para>Initializes the parser. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/parser.h" line="48" column="6" bodyfile="src/parser.c" bodystart="80" bodyend="84" declfile="src/parser.h" declline="48" declcolumn="6"/>
        <references refid="parser_8c_1a90c1a51331d7017d5acffc8f102af658" compoundref="parser_8c" startline="55">currentResult</references>
        <references refid="parser_8c_1ad6e5391dcd7235b6d8a37fb24dc64eec" compoundref="parser_8c" startline="56">previousResult</references>
        <references refid="parser_8c_1a2875192a853252042ae25ea84bd66155" compoundref="parser_8c" startline="53">tokens</references>
        <referencedby refid="parser_8c_1a1715c490f05c2ddcb8d526684468f885" compoundref="parser_8c" startline="97" endline="100">ParserReset</referencedby>
      </memberdef>
      <memberdef kind="function" id="parser_8h_1a1034bedc0b6b8bdb22f67b0e72a101d0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void ParserInitWith</definition>
        <argsstring>(Token items[], int length)</argsstring>
        <name>ParserInitWith</name>
        <param>
          <type><ref refid="struct_token" kindref="compound">Token</ref></type>
          <declname>items</declname>
          <array>[]</array>
        </param>
        <param>
          <type>int</type>
          <declname>length</declname>
        </param>
        <briefdescription>
<para>Initializes the parser with initial token list. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>items</parametername>
</parameternamelist>
<parameterdescription>
<para>token list </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>length</parametername>
</parameternamelist>
<parameterdescription>
<para>length of the tokens </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/parser.h" line="56" column="6" bodyfile="src/parser.c" bodystart="86" bodyend="91" declfile="src/parser.h" declline="56" declcolumn="6"/>
        <references refid="parser_8c_1a90c1a51331d7017d5acffc8f102af658" compoundref="parser_8c" startline="55">currentResult</references>
        <references refid="parser_8c_1ad6e5391dcd7235b6d8a37fb24dc64eec" compoundref="parser_8c" startline="56">previousResult</references>
        <references refid="parser_8c_1a2875192a853252042ae25ea84bd66155" compoundref="parser_8c" startline="53">tokens</references>
      </memberdef>
      <memberdef kind="function" id="parser_8h_1a9264a889771bffb6e9bb7215c8402eda" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void ParserStop</definition>
        <argsstring>()</argsstring>
        <name>ParserStop</name>
        <briefdescription>
<para>Stops the parser and clears all tokens. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/parser.h" line="62" column="6" bodyfile="src/parser.c" bodystart="93" bodyend="95" declfile="src/parser.h" declline="62" declcolumn="6"/>
        <references refid="parser_8c_1a2875192a853252042ae25ea84bd66155" compoundref="parser_8c" startline="53">tokens</references>
        <referencedby refid="parser_8c_1a1715c490f05c2ddcb8d526684468f885" compoundref="parser_8c" startline="97" endline="100">ParserReset</referencedby>
      </memberdef>
      <memberdef kind="function" id="parser_8h_1a1715c490f05c2ddcb8d526684468f885" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void ParserReset</definition>
        <argsstring>()</argsstring>
        <name>ParserReset</name>
        <briefdescription>
<para>Calls. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="see"><para>ParserInit then </para>
</simplesect>
<simplesect kind="see"><para>ParserStop </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/parser.h" line="68" column="6" bodyfile="src/parser.c" bodystart="97" bodyend="100" declfile="src/parser.h" declline="68" declcolumn="6"/>
        <references refid="parser_8c_1ae23a18474f4d84e20fdcc9869d67b363" compoundref="parser_8c" startline="80" endline="84">ParserInit</references>
        <references refid="parser_8c_1a9264a889771bffb6e9bb7215c8402eda" compoundref="parser_8c" startline="93" endline="95">ParserStop</references>
      </memberdef>
      <memberdef kind="function" id="parser_8h_1a19203c96ed6922e7092af10b63e6d298" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="struct_parser_info" kindref="compound">ParserInfo</ref></type>
        <definition>ParserInfo ParserCompile</definition>
        <argsstring>()</argsstring>
        <name>ParserCompile</name>
        <briefdescription>
<para>Compiles the tokens and returns the result. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para><computeroutput>ParserInfo</computeroutput> <linebreak/>
 </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/parser.h" line="75" column="12" bodyfile="src/parser.c" bodystart="102" bodyend="121" declfile="src/parser.h" declline="75" declcolumn="12"/>
        <references refid="parser_8c_1a90c1a51331d7017d5acffc8f102af658" compoundref="parser_8c" startline="55">currentResult</references>
        <references refid="struct_parser_info_1a4e78625adfd58d83ac140b5f237a2aef" compoundref="parser_8h" startline="32">ParserInfo::currentReuslt</references>
        <references refid="parser_8h_1aa520fbf142ba1e7e659590c07da31921a34f27712bd95a0c2c963cd56365ad7a2" compoundref="parser_8h" startline="20">EOL</references>
        <references refid="struct_parser_info_1aab78007585df1e7b289ba34601e58409" compoundref="parser_8h" startline="31">ParserInfo::error</references>
        <references refid="parser_8c_1a7f8aeab74e49ee2b275a7575e8d7b5e8" compoundref="parser_8c" startline="58" endline="66">GetNextToken</references>
        <references refid="parser_8h_1a0392053e13b5f2cbbfdbdd316d86e09fabf350750d0d4fabd8954c0f1e9bbae94" compoundref="parser_8h" startline="9">NO_ERROR</references>
        <references refid="parser_8c_1ab427a20c59c9ca0b11c82660752df62a" compoundref="parser_8c" startline="152" endline="193">ParseExpression</references>
        <references refid="parser_8c_1a73bf16a41122c7751670f74fd415a36c" compoundref="parser_8c" startline="68" endline="71">PeekNextToken</references>
        <references refid="struct_parser_info_1abfc67a8c3f2b9d94335e175d14a67d9b" compoundref="parser_8h" startline="30">ParserInfo::token</references>
        <references refid="struct_token_1a67919af9f3a80dc0b28a0ab1e6d5bf8a" compoundref="parser_8h" startline="26">Token::type</references>
      </memberdef>
    </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="preprocessor">#ifndef<sp/>EXPRESSION_PARSER_H<sp/></highlight><highlight class="comment">//<sp/>If<sp/>not<sp/>defined</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2" refid="parser_8h_1a5eacb3f8d827ae299ee42b9e0e99fa13" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>EXPRESSION_PARSER_H<sp/></highlight><highlight class="comment">//<sp/>Define<sp/>it</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="keypad_8h" kindref="compound">keypad.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;stdbool.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="helpers_8h" kindref="compound">helpers.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight></codeline>
<codeline lineno="7" refid="parser_8h_1a0392053e13b5f2cbbfdbdd316d86e09f" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="8" refid="parser_8h_1a0392053e13b5f2cbbfdbdd316d86e09fa5d594af14177857fc7661d03eda0baea" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="parser_8h_1a0392053e13b5f2cbbfdbdd316d86e09fa5d594af14177857fc7661d03eda0baea" kindref="member">SYNTAX_ERROR</ref>,</highlight></codeline>
<codeline lineno="9" refid="parser_8h_1a0392053e13b5f2cbbfdbdd316d86e09fabf350750d0d4fabd8954c0f1e9bbae94" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="parser_8h_1a0392053e13b5f2cbbfdbdd316d86e09fabf350750d0d4fabd8954c0f1e9bbae94" kindref="member">NO_ERROR</ref>,</highlight></codeline>
<codeline lineno="10" refid="parser_8h_1a0392053e13b5f2cbbfdbdd316d86e09fae340a9bc4389c62faef96782ebbdfc43" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="parser_8h_1a0392053e13b5f2cbbfdbdd316d86e09fae340a9bc4389c62faef96782ebbdfc43" kindref="member">INVALID_MATH_EXPRESSION</ref>,</highlight></codeline>
<codeline lineno="11" refid="parser_8h_1a0392053e13b5f2cbbfdbdd316d86e09fa67f5d4d700401c98e49d7a68c35c9272" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="parser_8h_1a0392053e13b5f2cbbfdbdd316d86e09fa67f5d4d700401c98e49d7a68c35c9272" kindref="member">MULTIPLE_DECIMAL_POINT</ref>,</highlight></codeline>
<codeline lineno="12" refid="parser_8h_1a0392053e13b5f2cbbfdbdd316d86e09fa1744590ec2b010dcd5774db413f87f56" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="parser_8h_1a0392053e13b5f2cbbfdbdd316d86e09fa1744590ec2b010dcd5774db413f87f56" kindref="member">MISSING_NUMBER</ref>,</highlight></codeline>
<codeline lineno="13" refid="parser_8h_1a0392053e13b5f2cbbfdbdd316d86e09fa2759d6055f211c659299d46ab05a7618" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="parser_8h_1a0392053e13b5f2cbbfdbdd316d86e09fa2759d6055f211c659299d46ab05a7618" kindref="member">MISSING_BRACKET</ref>,</highlight></codeline>
<codeline lineno="14"><highlight class="normal">}<sp/><ref refid="parser_8h_1a0392053e13b5f2cbbfdbdd316d86e09f" kindref="member">ParseError</ref>;</highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight></codeline>
<codeline lineno="16" refid="parser_8h_1aa520fbf142ba1e7e659590c07da31921" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="17" refid="parser_8h_1aa520fbf142ba1e7e659590c07da31921a12a90dfe20486bbe3e075afcd19ef2d0" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="parser_8h_1aa520fbf142ba1e7e659590c07da31921a12a90dfe20486bbe3e075afcd19ef2d0" kindref="member">NUMBER</ref>,</highlight></codeline>
<codeline lineno="18" refid="parser_8h_1aa520fbf142ba1e7e659590c07da31921a6411d9d6073252e4d316493506bbb979" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="parser_8h_1aa520fbf142ba1e7e659590c07da31921a6411d9d6073252e4d316493506bbb979" kindref="member">OPERATOR</ref>,</highlight></codeline>
<codeline lineno="19" refid="parser_8h_1aa520fbf142ba1e7e659590c07da31921af08a543d5a1549321682e12569d0fbd6" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="parser_8h_1aa520fbf142ba1e7e659590c07da31921af08a543d5a1549321682e12569d0fbd6" kindref="member">DECIMAL</ref>,</highlight></codeline>
<codeline lineno="20" refid="parser_8h_1aa520fbf142ba1e7e659590c07da31921a34f27712bd95a0c2c963cd56365ad7a2" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="parser_8h_1aa520fbf142ba1e7e659590c07da31921a34f27712bd95a0c2c963cd56365ad7a2" kindref="member">EOL</ref>,</highlight></codeline>
<codeline lineno="21" refid="parser_8h_1aa520fbf142ba1e7e659590c07da31921a834f3e0777521aa22ca5b50e816970d9" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="parser_8h_1aa520fbf142ba1e7e659590c07da31921a834f3e0777521aa22ca5b50e816970d9" kindref="member">PREVIOUS_ANSWER</ref>,</highlight></codeline>
<codeline lineno="22"><highlight class="normal">}<sp/><ref refid="parser_8h_1aa520fbf142ba1e7e659590c07da31921" kindref="member">TokenType</ref>;</highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight></codeline>
<codeline lineno="24" refid="struct_token" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="25" refid="struct_token_1a4bb9bb3a9dcd67c9fe73b95fadea96e6" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/><ref refid="struct_token_1a4bb9bb3a9dcd67c9fe73b95fadea96e6" kindref="member">value</ref>;</highlight></codeline>
<codeline lineno="26" refid="struct_token_1a67919af9f3a80dc0b28a0ab1e6d5bf8a" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="parser_8h_1aa520fbf142ba1e7e659590c07da31921" kindref="member">TokenType</ref><sp/><ref refid="struct_token_1a67919af9f3a80dc0b28a0ab1e6d5bf8a" kindref="member">type</ref>;</highlight></codeline>
<codeline lineno="27"><highlight class="normal">}<sp/><ref refid="struct_token" kindref="compound">Token</ref>;</highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight></codeline>
<codeline lineno="29" refid="struct_parser_info" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="30" refid="struct_parser_info_1abfc67a8c3f2b9d94335e175d14a67d9b" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_token" kindref="compound">Token</ref><sp/><ref refid="struct_parser_info_1abfc67a8c3f2b9d94335e175d14a67d9b" kindref="member">token</ref>;</highlight></codeline>
<codeline lineno="31" refid="struct_parser_info_1aab78007585df1e7b289ba34601e58409" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="parser_8h_1a0392053e13b5f2cbbfdbdd316d86e09f" kindref="member">ParseError</ref><sp/><ref refid="struct_parser_info_1aab78007585df1e7b289ba34601e58409" kindref="member">error</ref>;</highlight></codeline>
<codeline lineno="32" refid="struct_parser_info_1a4e78625adfd58d83ac140b5f237a2aef" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="struct_parser_info_1a4e78625adfd58d83ac140b5f237a2aef" kindref="member">currentReuslt</ref>;</highlight></codeline>
<codeline lineno="33"><highlight class="normal">}<sp/><ref refid="struct_parser_info" kindref="compound">ParserInfo</ref>;</highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight></codeline>
<codeline lineno="35" refid="parser_8h_1a4f9090efc910ceda64fee9b0bc305428" refkind="member"><highlight class="normal"><ref refid="helpers_8h_1ab9b5864bb7f364790006596ce97eb4ea" kindref="member">DEFINE_LIST_PROTOTYPE</ref>(<ref refid="struct_token" kindref="compound">Token</ref>);</highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight></codeline>
<codeline lineno="42"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="parser_8h_1aa19b910e23df23ebe5f189f93c97afdd" kindref="member">ParserPushToken</ref>(<ref refid="struct_token" kindref="compound">Token</ref><sp/>token);</highlight></codeline>
<codeline lineno="43"><highlight class="normal"></highlight></codeline>
<codeline lineno="48"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="parser_8h_1ae23a18474f4d84e20fdcc9869d67b363" kindref="member">ParserInit</ref>();</highlight></codeline>
<codeline lineno="49"><highlight class="normal"></highlight></codeline>
<codeline lineno="56"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="parser_8h_1a1034bedc0b6b8bdb22f67b0e72a101d0" kindref="member">ParserInitWith</ref>(<ref refid="struct_token" kindref="compound">Token</ref><sp/>items[],<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>length);</highlight></codeline>
<codeline lineno="57"><highlight class="normal"></highlight></codeline>
<codeline lineno="62"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="parser_8h_1a9264a889771bffb6e9bb7215c8402eda" kindref="member">ParserStop</ref>();</highlight></codeline>
<codeline lineno="63"><highlight class="normal"></highlight></codeline>
<codeline lineno="68"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="parser_8h_1a1715c490f05c2ddcb8d526684468f885" kindref="member">ParserReset</ref>();</highlight></codeline>
<codeline lineno="69"><highlight class="normal"></highlight></codeline>
<codeline lineno="75"><highlight class="normal"><ref refid="struct_parser_info" kindref="compound">ParserInfo</ref><sp/><ref refid="parser_8h_1a19203c96ed6922e7092af10b63e6d298" kindref="member">ParserCompile</ref>();</highlight></codeline>
<codeline lineno="76"><highlight class="normal"></highlight></codeline>
<codeline lineno="77"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
    </programlisting>
    <location file="src/parser.h"/>
  </compounddef>
</doxygen>
