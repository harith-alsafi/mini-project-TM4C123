<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.8" xml:lang="en-US">
  <compounddef id="test_8h" kind="file" language="C++">
    <compoundname>test.h</compoundname>
    <includedby refid="main_8c" local="yes">src/main.c</includedby>
    <includedby refid="test_8c" local="yes">src/test.c</includedby>
    <invincdepgraph>
      <node id="2">
        <label>src/main.c</label>
        <link refid="main_8c"/>
      </node>
      <node id="3">
        <label>src/test.c</label>
        <link refid="test_8c"/>
      </node>
      <node id="1">
        <label>src/test.h</label>
        <link refid="test_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
      </node>
    </invincdepgraph>
    <sectiondef kind="define">
      <memberdef kind="define" id="test_8h_1a2e1a6b7df58991e843316f749f49d0c4" prot="public" static="no">
        <name>TEST_H</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/test.h" line="2" column="9" bodyfile="src/test.h" bodystart="2" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="func">
      <memberdef kind="function" id="test_8h_1a681847cb468289c483c1f110b251f91c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void RunAllTests</definition>
        <argsstring>()</argsstring>
        <name>RunAllTests</name>
        <briefdescription>
<para>Runs all unit test functions. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/test.h" line="24" column="6" bodyfile="src/test.c" bodystart="83" bodyend="89" declfile="src/test.h" declline="24" declcolumn="6"/>
        <references refid="test_8c_1ac96c14effaeda91dcf6f15a034a428e9" compoundref="test_8c" startline="69" endline="81">TestFlash</references>
        <references refid="test_8c_1a8ff2f0e3039fa4096f5c57d610c9281d" compoundref="test_8c" startline="59" endline="67">TestKeypadLcd</references>
        <references refid="test_8c_1aec3ab11b7409fd19efa26bed15100a3f" compoundref="test_8c" startline="50" endline="57">TestLcdAll</references>
        <referencedby refid="main_8c_1ae66f6b31b5ad750f1fe042a706a4e3d4" compoundref="main_8c" startline="13" endline="69">main</referencedby>
      </memberdef>
    </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="preprocessor">#ifndef<sp/>TEST_H<sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>If<sp/>not<sp/>defined</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2" refid="test_8h_1a2e1a6b7df58991e843316f749f49d0c4" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>TEST_H<sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Define<sp/>it</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="comment">//<sp/>void<sp/>AssertAreEqual(int<sp/>expected,<sp/>int<sp/>actual);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="comment">//<sp/>void<sp/>AssertAreEqualFloat(float<sp/>expected,<sp/>float<sp/>actual);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="comment">//<sp/>void<sp/>AssertAreEqualString(char<sp/>*expected,<sp/>char<sp/>*actual);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="comment">//<sp/>void<sp/>AssertAreEqualChar(char<sp/>expected,<sp/>char<sp/>actual);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="comment">//<sp/>void<sp/>AssertAreEqualArray(int<sp/>*expected,<sp/>int<sp/>*actual,<sp/>int<sp/>n);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="comment">//<sp/>void<sp/>AssertAreEqualArrayFloat(float<sp/>*expected,<sp/>float<sp/>*actual,<sp/>int<sp/>n);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="comment">//<sp/>void<sp/>AssertIsTrue(int<sp/>condition);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="comment">//<sp/>void<sp/>AssertIsFalse(int<sp/>condition);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="test_8h_1a681847cb468289c483c1f110b251f91c" kindref="member">RunAllTests</ref>();</highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
    </programlisting>
    <location file="src/test.h"/>
  </compounddef>
</doxygen>
